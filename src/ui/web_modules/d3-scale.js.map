{"version":3,"file":"d3-scale.js","sources":["../node_modules/d3-scale/src/init.js","../node_modules/d3-scale/src/ordinal.js","../node_modules/d3-scale/src/band.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/identity.js","../node_modules/d3-scale/src/nice.js","../node_modules/d3-scale/src/log.js","../node_modules/d3-scale/src/symlog.js","../node_modules/d3-scale/src/pow.js","../node_modules/d3-scale/src/radial.js","../node_modules/d3-scale/src/quantile.js","../node_modules/d3-scale/src/quantize.js","../node_modules/d3-scale/src/threshold.js","../node_modules/d3-scale/src/time.js","../node_modules/d3-scale/src/utcTime.js","../node_modules/d3-scale/src/sequential.js","../node_modules/d3-scale/src/sequentialQuantile.js","../node_modules/d3-scale/src/diverging.js"],"sourcesContent":["export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new Map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new Map();\n    for (const value of _) {\n      const key = value + \"\";\n      if (index.has(key)) continue;\n      index.set(key, domain.push(value));\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? Array.from(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, identity, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import continuous from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nfunction square(x) {\n  return Math.sign(x) * x * x;\n}\n\nfunction unsquare(x) {\n  return Math.sign(x) * Math.sqrt(Math.abs(x));\n}\n\nexport default function radial() {\n  var squared = continuous(),\n      range = [0, 1],\n      round = false,\n      unknown;\n\n  function scale(x) {\n    var y = unsquare(squared(x));\n    return isNaN(y) ? unknown : round ? Math.round(y) : y;\n  }\n\n  scale.invert = function(y) {\n    return squared.invert(square(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (squared.domain(_), scale) : squared.domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (squared.range((range = Array.from(_, number)).map(square)), scale) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return scale.range(_).round(true);\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, scale) : round;\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return radial(squared.domain(), range)\n        .round(round)\n        .clamp(squared.clamp())\n        .unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisector, tickStep} from \"d3-array\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target),\n          step;\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n      return interval.every(step);\n    }\n\n    return interval;\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1]))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {calendar} from \"./time.js\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\nimport {initRange} from \"./init.js\";\n\nexport default function() {\n  return initRange.apply(calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import {interpolate, interpolateRound} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect, quantile} from \"d3-array\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((bisect(domain, x, 1) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.range = function() {\n    return domain.map((d, i) => interpolator(i / (domain.length - 1)));\n  };\n\n  scale.quantiles = function(n) {\n    return Array.from({length: n + 1}, (_, i) => quantile(domain, i / n));\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n","import {interpolate, interpolateRound, piecewise} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {copy} from \"./sequential.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1, r2;\n      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n"],"names":["initRange","domain","range","arguments","length","this","initInterpolator","interpolator","implicit","Symbol","ordinal","index","Map","unknown","scale","d","key","i","get","set","push","_","slice","value","has","Array","from","copy","apply","band","step","bandwidth","undefined","ordinalRange","r0","r1","round","paddingInner","paddingOuter","align","rescale","n","reverse","start","stop","Math","max","floor","values","sequence","map","rangeRound","padding","min","pointish","point","x","unit","identity","normalize","a","b","isNaN","NaN","bimap","interpolate","d0","d1","polymap","j","r","bisect","source","target","clamp","transformer","transform","untransform","piecewise","output","input","interpolateValue","t","invert","y","interpolateNumber","number","interpolateRound","u","continuous","count","specifier","precision","tickStep","formatSpecifier","type","abs","precisionPrefix","formatPrefix","precisionRound","precisionFixed","format","linearish","ticks","tickFormat","nice","i0","i1","tickIncrement","ceil","linear","interval","x0","x1","transformLog","log","transformExp","exp","transformLogn","transformExpn","pow10","isFinite","reflect","f","loggish","logs","pows","base","E","log10","log2","logp","pow","powp","v","p","k","z","Infinity","transformSymlog","c","sign","log1p","transformSymexp","expm1","symlogish","constant","symlog","transformPow","exponent","transformSqrt","sqrt","transformSquare","powish","square","unsquare","radial","squared","quantile","thresholds","threshold","invertExtent","indexOf","sort","ascending","quantiles","quantize","date","Date","calendar","year","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","durationSecond","durationMinute","durationHour","durationDay","tickInterval","bisector","right","every","t0","t1","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","k10","sequential","sequentialLog","sequentialSymlog","sequentialPow","sequentialSqrt","sequentialQuantile","t2","k21","x2","s","r2","diverging","divergingLog","divergingSymlog","divergingPow","divergingSqrt"],"mappings":"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"}