{"version":3,"file":"quantile-0d207231.js","sources":["../../node_modules/d3-array/src/ascending.js","../../node_modules/d3-array/src/bisector.js","../../node_modules/d3-array/src/bisect.js","../../node_modules/d3-array/src/range.js","../../node_modules/d3-array/src/ticks.js","../../node_modules/d3-array/src/max.js","../../node_modules/d3-array/src/min.js","../../node_modules/d3-array/src/quickselect.js","../../node_modules/d3-array/src/number.js","../../node_modules/d3-array/src/quantile.js"],"sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n"],"names":["a","b","NaN","compare","f","length","d","x","ascending","left","lo","hi","mid","right","ascendingBisect","bisector","bisectRight","bisectLeft","start","stop","step","n","arguments","i","Math","max","ceil","range","Array","e10","sqrt","e5","e2","count","reverse","ticks","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","values","valueof","undefined","value","index","min","quickselect","array","k","m","z","s","exp","sd","t","j","swap","quantile","p","Float64Array","from","numbers","i0","value0","subarray","quantileSorted","number"],"mappings":"AAAe,WAASA,EAAGC,GACzB,OAAOD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAID,GAAKC,EAAI,EAAIC,ICChC,WAASC,GA0BxB,IAA6BC,EAxB3B,OADuB,IAAnBD,EAAQE,SAyBeD,EAzB6BD,EAA9BA,EA0BnB,SAASG,EAAGC,GACjB,OAAOC,EAAUJ,EAAEE,GAAIC,KA1BlB,CACLE,KAAM,SAAST,EAAGO,EAAGG,EAAIC,GAGvB,IAFU,MAAND,IAAYA,EAAK,GACX,MAANC,IAAYA,EAAKX,EAAEK,QAChBK,EAAKC,GAAI,CACd,IAAIC,EAAMF,EAAKC,IAAO,EAClBR,EAAQH,EAAEY,GAAML,GAAK,EAAGG,EAAKE,EAAM,EAClCD,EAAKC,EAEZ,OAAOF,GAETG,MAAO,SAASb,EAAGO,EAAGG,EAAIC,GAGxB,IAFU,MAAND,IAAYA,EAAK,GACX,MAANC,IAAYA,EAAKX,EAAEK,QAChBK,EAAKC,GAAI,CACd,IAAIC,EAAMF,EAAKC,IAAO,EAClBR,EAAQH,EAAEY,GAAML,GAAK,EAAGI,EAAKC,EAC5BF,EAAKE,EAAM,EAElB,OAAOF,ICpBb,IAAII,EAAkBC,EAASP,GACpBQ,EAAcF,EAAgBD,MAC9BI,EAAaH,EAAgBL,KCLzB,WAASS,EAAOC,EAAMC,GACnCF,GAASA,EAAOC,GAAQA,EAAMC,GAAQC,EAAIC,UAAUjB,QAAU,GAAKc,EAAOD,EAAOA,EAAQ,EAAG,GAAKG,EAAI,EAAI,GAAKD,EAM9G,IAJA,IAAIG,GAAK,EACLF,EAAoD,EAAhDG,KAAKC,IAAI,EAAGD,KAAKE,MAAMP,EAAOD,GAASE,IAC3CO,EAAQ,IAAIC,MAAMP,KAEbE,EAAIF,GACXM,EAAMJ,GAAKL,EAAQK,EAAIH,EAGzB,OAAOO,ECXT,IAAIE,EAAML,KAAKM,KAAK,IAChBC,EAAKP,KAAKM,KAAK,IACfE,EAAKR,KAAKM,KAAK,GAEJ,WAASZ,EAAOC,EAAMc,GACnC,IAAIC,EAEAb,EACAc,EACAf,EAHAG,GAAK,EAMT,GAD8BU,GAASA,GAAzBf,GAASA,MAAvBC,GAAQA,IACcc,EAAQ,EAAG,MAAO,CAACf,GAEzC,IADIgB,EAAUf,EAAOD,KAAOG,EAAIH,EAAOA,EAAQC,EAAMA,EAAOE,GACT,KAA9CD,EAAOgB,EAAclB,EAAOC,EAAMc,MAAkBI,SAASjB,GAAO,MAAO,GAEhF,GAAIA,EAAO,EAIT,IAHAF,EAAQM,KAAKE,KAAKR,EAAQE,GAC1BD,EAAOK,KAAKc,MAAMnB,EAAOC,GACzBe,EAAQ,IAAIP,MAAMP,EAAIG,KAAKE,KAAKP,EAAOD,EAAQ,MACtCK,EAAIF,GAAGc,EAAMZ,IAAML,EAAQK,GAAKH,OAKzC,IAHAF,EAAQM,KAAKc,MAAMpB,EAAQE,GAC3BD,EAAOK,KAAKE,KAAKP,EAAOC,GACxBe,EAAQ,IAAIP,MAAMP,EAAIG,KAAKE,KAAKR,EAAQC,EAAO,MACtCI,EAAIF,GAAGc,EAAMZ,IAAML,EAAQK,GAAKH,EAK3C,OAFIc,GAASC,EAAMD,UAEZC,EAGF,SAASC,EAAclB,EAAOC,EAAMc,GACzC,IAAIb,GAAQD,EAAOD,GAASM,KAAKC,IAAI,EAAGQ,GACpCM,EAAQf,KAAKc,MAAMd,KAAKgB,IAAIpB,GAAQI,KAAKiB,MACzCC,EAAQtB,EAAOI,KAAKmB,IAAI,GAAIJ,GAChC,OAAOA,GAAS,GACTG,GAASb,EAAM,GAAKa,GAASX,EAAK,EAAIW,GAASV,EAAK,EAAI,GAAKR,KAAKmB,IAAI,GAAIJ,IAC1Ef,KAAKmB,IAAI,IAAKJ,IAAUG,GAASb,EAAM,GAAKa,GAASX,EAAK,EAAIW,GAASV,EAAK,EAAI,GAGlF,SAASY,EAAS1B,EAAOC,EAAMc,GACpC,IAAIY,EAAQrB,KAAKsB,IAAI3B,EAAOD,GAASM,KAAKC,IAAI,EAAGQ,GAC7Cc,EAAQvB,KAAKmB,IAAI,GAAInB,KAAKc,MAAMd,KAAKgB,IAAIK,GAASrB,KAAKiB,OACvDC,EAAQG,EAAQE,EAIpB,OAHIL,GAASb,EAAKkB,GAAS,GAClBL,GAASX,EAAIgB,GAAS,EACtBL,GAASV,IAAIe,GAAS,GACxB5B,EAAOD,GAAS6B,EAAQA,ECjDlB,SAAStB,EAAIuB,EAAQC,GAClC,IAAIxB,EACJ,QAAgByB,IAAZD,EACF,IAAK,MAAME,KAASH,EACL,MAATG,IACI1B,EAAM0B,QAAkBD,IAARzB,GAAqB0B,GAASA,KACpD1B,EAAM0B,OAGL,CACL,IAAIC,GAAS,EACb,IAAK,IAAID,KAASH,EACiC,OAA5CG,EAAQF,EAAQE,IAASC,EAAOJ,MAC7BvB,EAAM0B,QAAkBD,IAARzB,GAAqB0B,GAASA,KACpD1B,EAAM0B,GAIZ,OAAO1B,EClBM,SAAS4B,EAAIL,EAAQC,GAClC,IAAII,EACJ,QAAgBH,IAAZD,EACF,IAAK,MAAME,KAASH,EACL,MAATG,IACIE,EAAMF,QAAkBD,IAARG,GAAqBF,GAASA,KACpDE,EAAMF,OAGL,CACL,IAAIC,GAAS,EACb,IAAK,IAAID,KAASH,EACiC,OAA5CG,EAAQF,EAAQE,IAASC,EAAOJ,MAC7BK,EAAMF,QAAkBD,IAARG,GAAqBF,GAASA,KACpDE,EAAMF,GAIZ,OAAOE,ECdM,SAASC,EAAYC,EAAOC,EAAG/C,EAAO,EAAGI,EAAQ0C,EAAMlD,OAAS,EAAGF,EAAUK,GAC1F,KAAOK,EAAQJ,GAAM,CACnB,GAAII,EAAQJ,EAAO,IAAK,CACtB,MAAMY,EAAIR,EAAQJ,EAAO,EACnBgD,EAAID,EAAI/C,EAAO,EACfiD,EAAIlC,KAAKgB,IAAInB,GACbsC,EAAI,GAAMnC,KAAKoC,IAAI,EAAIF,EAAI,GAC3BG,EAAK,GAAMrC,KAAKM,KAAK4B,EAAIC,GAAKtC,EAAIsC,GAAKtC,IAAMoC,EAAIpC,EAAI,EAAI,GAAK,EAAI,GAGxEiC,EAAYC,EAAOC,EAFHhC,KAAKC,IAAIhB,EAAMe,KAAKc,MAAMkB,EAAIC,EAAIE,EAAItC,EAAIwC,IACzCrC,KAAK6B,IAAIxC,EAAOW,KAAKc,MAAMkB,GAAKnC,EAAIoC,GAAKE,EAAItC,EAAIwC,IACzB1D,GAG3C,MAAM2D,EAAIP,EAAMC,GAChB,IAAIjC,EAAId,EACJsD,EAAIlD,EAKR,IAHAmD,EAAKT,EAAO9C,EAAM+C,GACdrD,EAAQoD,EAAM1C,GAAQiD,GAAK,GAAGE,EAAKT,EAAO9C,EAAMI,GAE7CU,EAAIwC,GAAG,CAEZ,IADAC,EAAKT,EAAOhC,EAAGwC,KAAMxC,IAAKwC,EACnB5D,EAAQoD,EAAMhC,GAAIuC,GAAK,KAAKvC,EACnC,KAAOpB,EAAQoD,EAAMQ,GAAID,GAAK,KAAKC,EAGL,IAA5B5D,EAAQoD,EAAM9C,GAAOqD,GAAUE,EAAKT,EAAO9C,EAAMsD,MAC9CA,EAAGC,EAAKT,EAAOQ,EAAGlD,IAErBkD,GAAKP,IAAG/C,EAAOsD,EAAI,GACnBP,GAAKO,IAAGlD,EAAQkD,EAAI,GAE1B,OAAOR,EAGT,SAASS,EAAKT,EAAOhC,EAAGwC,GACtB,MAAMD,EAAIP,EAAMhC,GAChBgC,EAAMhC,GAAKgC,EAAMQ,GACjBR,EAAMQ,GAAKD,EC1CE,WAASvD,GACtB,OAAa,OAANA,EAAaL,KAAOK,ECId,SAAS0D,EAASjB,EAAQkB,EAAGjB,GAE1C,GAAM5B,GADN2B,EAASmB,aAAaC,KDFjB,UAAkBpB,EAAQC,GAC/B,QAAgBC,IAAZD,EACF,IAAK,IAAIE,KAASH,EACH,MAATG,IAAkBA,GAASA,IAAUA,UACjCA,OAGL,CACL,IAAIC,GAAS,EACb,IAAK,IAAID,KAASH,EACiC,OAA5CG,EAAQF,EAAQE,IAASC,EAAOJ,MAAqBG,GAASA,IAAUA,UACrEA,ICTekB,CAAQrB,EAAQC,KAC1B5C,OAAjB,CACA,IAAK6D,GAAKA,IAAM,GAAK7C,EAAI,EAAG,OAAOgC,EAAIL,GACvC,GAAIkB,GAAK,EAAG,OAAOzC,EAAIuB,GACvB,IAAI3B,EACAE,GAAKF,EAAI,GAAK6C,EACdI,EAAK9C,KAAKc,MAAMf,GAChBgD,EAAS9C,EAAI6B,EAAYN,EAAQsB,GAAIE,SAAS,EAAGF,EAAK,IAE1D,OAAOC,GADMlB,EAAIL,EAAOwB,SAASF,EAAK,IACZC,IAAWhD,EAAI+C,IAGpC,SAASG,EAAezB,EAAQkB,EAAGjB,EAAUyB,GAClD,GAAMrD,EAAI2B,EAAO3C,OAAjB,CACA,IAAK6D,GAAKA,IAAM,GAAK7C,EAAI,EAAG,OAAQ4B,EAAQD,EAAO,GAAI,EAAGA,GAC1D,GAAIkB,GAAK,EAAG,OAAQjB,EAAQD,EAAO3B,EAAI,GAAIA,EAAI,EAAG2B,GAClD,IAAI3B,EACAE,GAAKF,EAAI,GAAK6C,EACdI,EAAK9C,KAAKc,MAAMf,GAChBgD,GAAUtB,EAAQD,EAAOsB,GAAKA,EAAItB,GAEtC,OAAOuB,IADOtB,EAAQD,EAAOsB,EAAK,GAAIA,EAAK,EAAGtB,GACpBuB,IAAWhD,EAAI+C"}