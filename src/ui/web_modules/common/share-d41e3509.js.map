{"version":3,"file":"share-d41e3509.js","sources":["../../node_modules/rxjs/_esm5/internal/operators/multicast.js","../../node_modules/rxjs/_esm5/internal/operators/share.js"],"sourcesContent":["/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexport { MulticastOperator };\n//# sourceMappingURL=multicast.js.map\n","/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n//# sourceMappingURL=share.js.map\n"],"names":["multicast","subjectOrSubjectFactory","selector","source","subjectFactory","lift","MulticastOperator","connectable","Object","create","connectableObservableDescriptor","this","prototype","call","subscriber","subject","subscription","subscribe","add","shareSubjectFactory","Subject","share","refCount"],"mappings":"0FAEO,SAASA,EAAUC,EAAyBC,GAC/C,OAAO,SAAmCC,GACtC,IAAIC,EASJ,GAPIA,EADmC,mBAA5BH,EACUA,EAGA,WACb,OAAOA,GAGS,mBAAbC,EACP,OAAOC,EAAOE,KAAK,IAAIC,EAAkBF,EAAgBF,IAE7D,IAAIK,EAAcC,OAAOC,OAAON,EAAQO,GAGxC,OAFAH,EAAYJ,OAASA,EACrBI,EAAYH,eAAiBA,EACtBG,GAGf,IAAID,EAAmC,WACnC,SAASA,EAAkBF,EAAgBF,GACvCS,KAAKP,eAAiBA,EACtBO,KAAKT,SAAWA,EASpB,OAPAI,EAAkBM,UAAUC,KAAO,SAAUC,EAAYX,GACrD,IAAID,EAAWS,KAAKT,SAChBa,EAAUJ,KAAKP,iBACfY,EAAed,EAASa,GAASE,UAAUH,GAE/C,OADAE,EAAaE,IAAIf,EAAOc,UAAUF,IAC3BC,GAEJV,KC9BX,SAASa,IACL,OAAO,IAAIC,EAER,SAASC,IACZ,OAAO,SAAUlB,GAAU,OAAOmB,GAAAA,CAAWtB,EAAUmB,EAAVnB,CAA+BG"}