{"version":3,"file":"d3-array.js","sources":["../node_modules/d3-array/src/count.js","../node_modules/d3-array/src/cross.js","../node_modules/d3-array/src/cumsum.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-array/src/variance.js","../node_modules/d3-array/src/deviation.js","../node_modules/d3-array/src/extent.js","../node_modules/d3-array/src/identity.js","../node_modules/d3-array/src/group.js","../node_modules/d3-array/src/array.js","../node_modules/d3-array/src/constant.js","../node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-array/src/bin.js","../node_modules/d3-array/src/threshold/freedmanDiaconis.js","../node_modules/d3-array/src/threshold/scott.js","../node_modules/d3-array/src/maxIndex.js","../node_modules/d3-array/src/mean.js","../node_modules/d3-array/src/median.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-array/src/minIndex.js","../node_modules/d3-array/src/pairs.js","../node_modules/d3-array/src/permute.js","../node_modules/d3-array/src/least.js","../node_modules/d3-array/src/leastIndex.js","../node_modules/d3-array/src/greatest.js","../node_modules/d3-array/src/greatestIndex.js","../node_modules/d3-array/src/scan.js","../node_modules/d3-array/src/shuffle.js","../node_modules/d3-array/src/sum.js","../node_modules/d3-array/src/transpose.js","../node_modules/d3-array/src/zip.js"],"sourcesContent":["export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n","function length(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nexport default function cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n","export default function cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n","import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new Map();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import count from \"../count.js\";\n\nexport default function(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n","import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport range from \"./range.js\";\nimport {tickStep} from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import count from \"../count.js\";\nimport quantile from \"../quantile.js\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n","import count from \"../count.js\";\nimport deviation from \"../deviation.js\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count(values), -1 / 3)));\n}\n","export default function maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n","export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n","import quantile from \"./quantile.js\";\n\nexport default function(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n","export default function pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","export default function(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n","import ascending from \"./ascending.js\";\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\nimport minIndex from \"./minIndex.js\";\n\nexport default function leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n","import ascending from \"./ascending.js\";\nimport maxIndex from \"./maxIndex.js\";\n\nexport default function greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n","import leastIndex from \"./leastIndex.js\";\n\nexport default function scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n","export default function shuffle(array, i0 = 0, i1 = array.length) {\n  var m = i1 - (i0 = +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import min from \"./min.js\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose.js\";\n\nexport default function() {\n  return transpose(arguments);\n}\n"],"names":["count","values","valueof","undefined","value","index","length","array","empty","arrayify","Array","from","cross","reduce","reducer","pop","lengths","map","j","fill","product","some","push","i","cumsum","sum","Float64Array","v","a","b","NaN","variance","delta","mean","deviation","Math","sqrt","min","max","x","group","keys","nest","identity","groups","rollup","rollups","regroup","Map","keyof","key","get","set","slice","prototype","ceil","log","LN2","domain","extent","threshold","sturges","histogram","data","isArray","n","xz","x0","x1","tz","tickStep","range","m","shift","bin","bins","bisect","_","arguments","constant","thresholds","call","quantile","pow","maxIndex","merge","arrays","flatten","minIndex","pairs","pairof","pair","previous","first","source","least","compare","ascending","defined","minValue","element","leastIndex","greatest","maxValue","greatestIndex","scan","shuffle","i0","i1","t","random","matrix","transpose","row","d"],"mappings":"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"}