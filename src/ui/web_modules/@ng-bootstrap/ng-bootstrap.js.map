{"version":3,"file":"ng-bootstrap.js","sources":["../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js"],"sourcesContent":["import { ɵɵdefineInjectable, Injectable, Directive, Input, ContentChildren, Component, ViewEncapsulation, Output, Optional, Host, TemplateRef, EventEmitter, NgModule, ChangeDetectionStrategy, Renderer2, ElementRef, forwardRef, ChangeDetectorRef, Inject, PLATFORM_ID, NgZone, HostListener, LOCALE_ID, ɵɵinject, ViewChild, ContentChild, ViewContainerRef, ComponentFactoryResolver, Injector, ApplicationRef, RendererFactory2, INJECTOR, Attribute, InjectionToken } from '@angular/core';\nimport { CommonModule, isPlatformBrowser, getLocaleDayNames, FormStyle, TranslationWidth, getLocaleMonthNames, formatDate, DOCUMENT, getLocaleDayPeriods } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport { __read, __extends, __assign, __values } from 'tslib';\nimport { combineLatest, timer, NEVER, Subject, BehaviorSubject, fromEvent, merge, race, Observable } from 'rxjs';\nimport { map, startWith, distinctUntilChanged, switchMap, takeUntil, filter, take, tap, withLatestFrom, delay, share } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toInteger(value) {\n    return parseInt(\"\" + value, 10);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toString(value) {\n    return (value !== undefined && value !== null) ? \"\" + value : '';\n}\n/**\n * @param {?} value\n * @param {?} max\n * @param {?=} min\n * @return {?}\n */\nfunction getValueInRange(value, max, min) {\n    if (min === void 0) { min = 0; }\n    return Math.max(Math.min(value, max), min);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isString(value) {\n    return typeof value === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isNumber(value) {\n    return !isNaN(toInteger(value));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction padNumber(value) {\n    if (isNumber(value)) {\n        return (\"0\" + value).slice(-2);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction hasClassName(element, className) {\n    return element && element.className && element.className.split &&\n        element.className.split(/\\s+/).indexOf(className) >= 0;\n}\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n    // Polyfill for ie10+\n    if (!Element.prototype.matches) {\n        // IE uses the non-standard name: msMatchesSelector\n        Element.prototype.matches = ((/** @type {?} */ (Element.prototype))).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n    }\n    Element.prototype.closest = (/**\n     * @param {?} s\n     * @return {?}\n     */\n    function (s) {\n        /** @type {?} */\n        var el = this;\n        if (!document.documentElement.contains(el)) {\n            return null;\n        }\n        do {\n            if (el.matches(s)) {\n                return el;\n            }\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    });\n}\n/**\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction closest(element, selector) {\n    if (!selector) {\n        return null;\n    }\n    return element.closest(selector);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\nvar NgbAccordionConfig = /** @class */ (function () {\n    function NgbAccordionConfig() {\n        this.closeOthers = false;\n    }\n    NgbAccordionConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbAccordionConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbAccordionConfig_Factory() { return new NgbAccordionConfig(); }, token: NgbAccordionConfig, providedIn: \"root\" });\n    return NgbAccordionConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar nextId = 0;\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * \\@since 4.1.0\n */\nvar NgbPanelHeader = /** @class */ (function () {\n    function NgbPanelHeader(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPanelHeader.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPanelHeader]' },] }\n    ];\n    /** @nocollapse */\n    NgbPanelHeader.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbPanelHeader;\n}());\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\nvar NgbPanelTitle = /** @class */ (function () {\n    function NgbPanelTitle(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPanelTitle.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPanelTitle]' },] }\n    ];\n    /** @nocollapse */\n    NgbPanelTitle.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbPanelTitle;\n}());\n/**\n * A directive that wraps the accordion panel content.\n */\nvar NgbPanelContent = /** @class */ (function () {\n    function NgbPanelContent(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPanelContent.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPanelContent]' },] }\n    ];\n    /** @nocollapse */\n    NgbPanelContent.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbPanelContent;\n}());\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\nvar NgbPanel = /** @class */ (function () {\n    function NgbPanel() {\n        /**\n         *  If `true`, the panel is disabled an can't be toggled.\n         */\n        this.disabled = false;\n        /**\n         *  An optional id for the panel that must be unique on the page.\n         *\n         *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n         */\n        this.id = \"ngb-panel-\" + nextId++;\n        this.isOpen = false;\n    }\n    /**\n     * @return {?}\n     */\n    NgbPanel.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.headerTpl = this.headerTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    };\n    NgbPanel.decorators = [\n        { type: Directive, args: [{ selector: 'ngb-panel' },] }\n    ];\n    NgbPanel.propDecorators = {\n        disabled: [{ type: Input }],\n        id: [{ type: Input }],\n        title: [{ type: Input }],\n        type: [{ type: Input }],\n        cardClass: [{ type: Input }],\n        titleTpls: [{ type: ContentChildren, args: [NgbPanelTitle, { descendants: false },] }],\n        headerTpls: [{ type: ContentChildren, args: [NgbPanelHeader, { descendants: false },] }],\n        contentTpls: [{ type: ContentChildren, args: [NgbPanelContent, { descendants: false },] }]\n    };\n    return NgbPanel;\n}());\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\nvar NgbAccordion = /** @class */ (function () {\n    function NgbAccordion(config) {\n        /**\n         * An array or comma separated strings of panel ids that should be opened **initially**.\n         *\n         * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n         * the `(panelChange)` event.\n         */\n        this.activeIds = [];\n        /**\n         * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n         */\n        this.destroyOnHide = true;\n        /**\n         * Event emitted right before the panel toggle happens.\n         *\n         * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n         */\n        this.panelChange = new EventEmitter();\n        this.type = config.type;\n        this.closeOtherPanels = config.closeOthers;\n    }\n    /**\n     * Checks if a panel with a given id is expanded.\n     */\n    /**\n     * Checks if a panel with a given id is expanded.\n     * @param {?} panelId\n     * @return {?}\n     */\n    NgbAccordion.prototype.isExpanded = /**\n     * Checks if a panel with a given id is expanded.\n     * @param {?} panelId\n     * @return {?}\n     */\n    function (panelId) { return this.activeIds.indexOf(panelId) > -1; };\n    /**\n     * Expands a panel with a given id.\n     *\n     * Has no effect if the panel is already expanded or disabled.\n     */\n    /**\n     * Expands a panel with a given id.\n     *\n     * Has no effect if the panel is already expanded or disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    NgbAccordion.prototype.expand = /**\n     * Expands a panel with a given id.\n     *\n     * Has no effect if the panel is already expanded or disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    function (panelId) { this._changeOpenState(this._findPanelById(panelId), true); };\n    /**\n     * Expands all panels, if `[closeOthers]` is `false`.\n     *\n     * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n     */\n    /**\n     * Expands all panels, if `[closeOthers]` is `false`.\n     *\n     * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n     * @return {?}\n     */\n    NgbAccordion.prototype.expandAll = /**\n     * Expands all panels, if `[closeOthers]` is `false`.\n     *\n     * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.closeOtherPanels) {\n            if (this.activeIds.length === 0 && this.panels.length) {\n                this._changeOpenState(this.panels.first, true);\n            }\n        }\n        else {\n            this.panels.forEach((/**\n             * @param {?} panel\n             * @return {?}\n             */\n            function (panel) { return _this._changeOpenState(panel, true); }));\n        }\n    };\n    /**\n     * Collapses a panel with the given id.\n     *\n     * Has no effect if the panel is already collapsed or disabled.\n     */\n    /**\n     * Collapses a panel with the given id.\n     *\n     * Has no effect if the panel is already collapsed or disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    NgbAccordion.prototype.collapse = /**\n     * Collapses a panel with the given id.\n     *\n     * Has no effect if the panel is already collapsed or disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    function (panelId) { this._changeOpenState(this._findPanelById(panelId), false); };\n    /**\n     * Collapses all opened panels.\n     */\n    /**\n     * Collapses all opened panels.\n     * @return {?}\n     */\n    NgbAccordion.prototype.collapseAll = /**\n     * Collapses all opened panels.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.panels.forEach((/**\n         * @param {?} panel\n         * @return {?}\n         */\n        function (panel) { _this._changeOpenState(panel, false); }));\n    };\n    /**\n     * Toggles a panel with the given id.\n     *\n     * Has no effect if the panel is disabled.\n     */\n    /**\n     * Toggles a panel with the given id.\n     *\n     * Has no effect if the panel is disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    NgbAccordion.prototype.toggle = /**\n     * Toggles a panel with the given id.\n     *\n     * Has no effect if the panel is disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    function (panelId) {\n        /** @type {?} */\n        var panel = this._findPanelById(panelId);\n        if (panel) {\n            this._changeOpenState(panel, !panel.isOpen);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbAccordion.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // active id updates\n        if (isString(this.activeIds)) {\n            this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n        }\n        // update panels open states\n        this.panels.forEach((/**\n         * @param {?} panel\n         * @return {?}\n         */\n        function (panel) { return panel.isOpen = !panel.disabled && _this.activeIds.indexOf(panel.id) > -1; }));\n        // closeOthers updates\n        if (this.activeIds.length > 1 && this.closeOtherPanels) {\n            this._closeOthers(this.activeIds[0]);\n            this._updateActiveIds();\n        }\n    };\n    /**\n     * @private\n     * @param {?} panel\n     * @param {?} nextState\n     * @return {?}\n     */\n    NgbAccordion.prototype._changeOpenState = /**\n     * @private\n     * @param {?} panel\n     * @param {?} nextState\n     * @return {?}\n     */\n    function (panel, nextState) {\n        if (panel && !panel.disabled && panel.isOpen !== nextState) {\n            /** @type {?} */\n            var defaultPrevented_1 = false;\n            this.panelChange.emit({ panelId: panel.id, nextState: nextState, preventDefault: (/**\n                 * @return {?}\n                 */\n                function () { defaultPrevented_1 = true; }) });\n            if (!defaultPrevented_1) {\n                panel.isOpen = nextState;\n                if (nextState && this.closeOtherPanels) {\n                    this._closeOthers(panel.id);\n                }\n                this._updateActiveIds();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {?} panelId\n     * @return {?}\n     */\n    NgbAccordion.prototype._closeOthers = /**\n     * @private\n     * @param {?} panelId\n     * @return {?}\n     */\n    function (panelId) {\n        this.panels.forEach((/**\n         * @param {?} panel\n         * @return {?}\n         */\n        function (panel) {\n            if (panel.id !== panelId) {\n                panel.isOpen = false;\n            }\n        }));\n    };\n    /**\n     * @private\n     * @param {?} panelId\n     * @return {?}\n     */\n    NgbAccordion.prototype._findPanelById = /**\n     * @private\n     * @param {?} panelId\n     * @return {?}\n     */\n    function (panelId) { return this.panels.find((/**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) { return p.id === panelId; })); };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbAccordion.prototype._updateActiveIds = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this.activeIds = this.panels.filter((/**\n         * @param {?} panel\n         * @return {?}\n         */\n        function (panel) { return panel.isOpen && !panel.disabled; })).map((/**\n         * @param {?} panel\n         * @return {?}\n         */\n        function (panel) { return panel.id; }));\n    };\n    NgbAccordion.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-accordion',\n                    exportAs: 'ngbAccordion',\n                    encapsulation: ViewEncapsulation.None,\n                    host: { 'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels' },\n                    template: \"\\n    <ng-template #t ngbPanelHeader let-panel>\\n      <button class=\\\"btn btn-link\\\" [ngbPanelToggle]=\\\"panel\\\">\\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\\\"panel.titleTpl?.templateRef\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n    <ng-template ngFor let-panel [ngForOf]=\\\"panels\\\">\\n      <div [class]=\\\"'card ' + (panel.cardClass || '')\\\">\\n        <div role=\\\"tab\\\" id=\\\"{{panel.id}}-header\\\" [class]=\\\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"panel.headerTpl?.templateRef || t\\\"\\n                       [ngTemplateOutletContext]=\\\"{$implicit: panel, opened: panel.isOpen}\\\"></ng-template>\\n        </div>\\n        <div id=\\\"{{panel.id}}\\\" role=\\\"tabpanel\\\" [attr.aria-labelledby]=\\\"panel.id + '-header'\\\"\\n             class=\\\"collapse\\\" [class.show]=\\\"panel.isOpen\\\" *ngIf=\\\"!destroyOnHide || panel.isOpen\\\">\\n          <div class=\\\"card-body\\\">\\n               <ng-template [ngTemplateOutlet]=\\\"panel.contentTpl?.templateRef\\\"></ng-template>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \"\n                }] }\n    ];\n    /** @nocollapse */\n    NgbAccordion.ctorParameters = function () { return [\n        { type: NgbAccordionConfig }\n    ]; };\n    NgbAccordion.propDecorators = {\n        panels: [{ type: ContentChildren, args: [NgbPanel,] }],\n        activeIds: [{ type: Input }],\n        closeOtherPanels: [{ type: Input, args: ['closeOthers',] }],\n        destroyOnHide: [{ type: Input }],\n        type: [{ type: Input }],\n        panelChange: [{ type: Output }]\n    };\n    return NgbAccordion;\n}());\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * \\@since 4.1.0\n */\nvar NgbPanelToggle = /** @class */ (function () {\n    function NgbPanelToggle(accordion, panel) {\n        this.accordion = accordion;\n        this.panel = panel;\n    }\n    Object.defineProperty(NgbPanelToggle.prototype, \"ngbPanelToggle\", {\n        set: /**\n         * @param {?} panel\n         * @return {?}\n         */\n        function (panel) {\n            if (panel) {\n                this.panel = panel;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgbPanelToggle.decorators = [\n        { type: Directive, args: [{\n                    selector: 'button[ngbPanelToggle]',\n                    host: {\n                        'type': 'button',\n                        '[disabled]': 'panel.disabled',\n                        '[class.collapsed]': '!panel.isOpen',\n                        '[attr.aria-expanded]': 'panel.isOpen',\n                        '[attr.aria-controls]': 'panel.id',\n                        '(click)': 'accordion.toggle(panel.id)'\n                    }\n                },] }\n    ];\n    /** @nocollapse */\n    NgbPanelToggle.ctorParameters = function () { return [\n        { type: NgbAccordion },\n        { type: NgbPanel, decorators: [{ type: Optional }, { type: Host }] }\n    ]; };\n    NgbPanelToggle.propDecorators = {\n        ngbPanelToggle: [{ type: Input }]\n    };\n    return NgbPanelToggle;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\nvar NgbAccordionModule = /** @class */ (function () {\n    function NgbAccordionModule() {\n    }\n    NgbAccordionModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule] },] }\n    ];\n    return NgbAccordionModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\nvar NgbAlertConfig = /** @class */ (function () {\n    function NgbAlertConfig() {\n        this.dismissible = true;\n        this.type = 'warning';\n    }\n    NgbAlertConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbAlertConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbAlertConfig_Factory() { return new NgbAlertConfig(); }, token: NgbAlertConfig, providedIn: \"root\" });\n    return NgbAlertConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\nvar NgbAlert = /** @class */ (function () {\n    function NgbAlert(config, _renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n        /**\n         * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n         */\n        this.close = new EventEmitter();\n        this.dismissible = config.dismissible;\n        this.type = config.type;\n    }\n    /**\n     * @return {?}\n     */\n    NgbAlert.prototype.closeHandler = /**\n     * @return {?}\n     */\n    function () { this.close.emit(null); };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgbAlert.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        /** @type {?} */\n        var typeChange = changes['type'];\n        if (typeChange && !typeChange.firstChange) {\n            this._renderer.removeClass(this._element.nativeElement, \"alert-\" + typeChange.previousValue);\n            this._renderer.addClass(this._element.nativeElement, \"alert-\" + typeChange.currentValue);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbAlert.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () { this._renderer.addClass(this._element.nativeElement, \"alert-\" + this.type); };\n    NgbAlert.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-alert',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: { 'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible' },\n                    template: \"\\n    <ng-content></ng-content>\\n    <button *ngIf=\\\"dismissible\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" i18n-aria-label=\\\"@@ngb.alert.close\\\"\\n      (click)=\\\"closeHandler()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n    \",\n                    styles: [\"ngb-alert{display:block}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgbAlert.ctorParameters = function () { return [\n        { type: NgbAlertConfig },\n        { type: Renderer2 },\n        { type: ElementRef }\n    ]; };\n    NgbAlert.propDecorators = {\n        dismissible: [{ type: Input }],\n        type: [{ type: Input }],\n        close: [{ type: Output }]\n    };\n    return NgbAlert;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbAlertModule = /** @class */ (function () {\n    function NgbAlertModule() {\n    }\n    NgbAlertModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert] },] }\n    ];\n    return NgbAlertModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbButtonLabel = /** @class */ (function () {\n    function NgbButtonLabel() {\n    }\n    NgbButtonLabel.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbButtonLabel]',\n                    host: { '[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused' }\n                },] }\n    ];\n    return NgbButtonLabel;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return NgbCheckBox; })),\n    multi: true\n};\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\nvar NgbCheckBox = /** @class */ (function () {\n    function NgbCheckBox(_label, _cd) {\n        this._label = _label;\n        this._cd = _cd;\n        /**\n         * If `true`, the checkbox button will be disabled\n         */\n        this.disabled = false;\n        /**\n         * The form control value when the checkbox is checked.\n         */\n        this.valueChecked = true;\n        /**\n         * The form control value when the checkbox is unchecked.\n         */\n        this.valueUnChecked = false;\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        function () { });\n    }\n    Object.defineProperty(NgbCheckBox.prototype, \"focused\", {\n        set: /**\n         * @param {?} isFocused\n         * @return {?}\n         */\n        function (isFocused) {\n            this._label.focused = isFocused;\n            if (!isFocused) {\n                this.onTouched();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NgbCheckBox.prototype.onInputChange = /**\n     * @param {?} $event\n     * @return {?}\n     */\n    function ($event) {\n        /** @type {?} */\n        var modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n        this.onChange(modelToPropagate);\n        this.onTouched();\n        this.writeValue(modelToPropagate);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbCheckBox.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbCheckBox.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NgbCheckBox.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n        this._label.disabled = isDisabled;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbCheckBox.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.checked = value === this.valueChecked;\n        this._label.active = this.checked;\n        // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n        this._cd.markForCheck();\n    };\n    NgbCheckBox.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbButton][type=checkbox]',\n                    host: {\n                        '[checked]': 'checked',\n                        '[disabled]': 'disabled',\n                        '(change)': 'onInputChange($event)',\n                        '(focus)': 'focused = true',\n                        '(blur)': 'focused = false'\n                    },\n                    providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n                },] }\n    ];\n    /** @nocollapse */\n    NgbCheckBox.ctorParameters = function () { return [\n        { type: NgbButtonLabel },\n        { type: ChangeDetectorRef }\n    ]; };\n    NgbCheckBox.propDecorators = {\n        disabled: [{ type: Input }],\n        valueChecked: [{ type: Input }],\n        valueUnChecked: [{ type: Input }]\n    };\n    return NgbCheckBox;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return NgbRadioGroup; })),\n    multi: true\n};\n/** @type {?} */\nvar nextId$1 = 0;\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\nvar NgbRadioGroup = /** @class */ (function () {\n    function NgbRadioGroup() {\n        this._radios = new Set();\n        this._value = null;\n        /**\n         * Name of the radio group applied to radio input elements.\n         *\n         * Will be applied to all radio input elements inside the group,\n         * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n         *\n         * If not provided, will be generated in the `ngb-radio-xx` format.\n         */\n        this.name = \"ngb-radio-\" + nextId$1++;\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        function () { });\n    }\n    Object.defineProperty(NgbRadioGroup.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        function (isDisabled) { this.setDisabledState(isDisabled); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    NgbRadioGroup.prototype.onRadioChange = /**\n     * @param {?} radio\n     * @return {?}\n     */\n    function (radio) {\n        this.writeValue(radio.value);\n        this.onChange(radio.value);\n    };\n    /**\n     * @return {?}\n     */\n    NgbRadioGroup.prototype.onRadioValueUpdate = /**\n     * @return {?}\n     */\n    function () { this._updateRadiosValue(); };\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    NgbRadioGroup.prototype.register = /**\n     * @param {?} radio\n     * @return {?}\n     */\n    function (radio) { this._radios.add(radio); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbRadioGroup.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbRadioGroup.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NgbRadioGroup.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._disabled = isDisabled;\n        this._updateRadiosDisabled();\n    };\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    NgbRadioGroup.prototype.unregister = /**\n     * @param {?} radio\n     * @return {?}\n     */\n    function (radio) { this._radios.delete(radio); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbRadioGroup.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._value = value;\n        this._updateRadiosValue();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbRadioGroup.prototype._updateRadiosValue = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._radios.forEach((/**\n         * @param {?} radio\n         * @return {?}\n         */\n        function (radio) { return radio.updateValue(_this._value); }));\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbRadioGroup.prototype._updateRadiosDisabled = /**\n     * @private\n     * @return {?}\n     */\n    function () { this._radios.forEach((/**\n     * @param {?} radio\n     * @return {?}\n     */\n    function (radio) { return radio.updateDisabled(); })); };\n    NgbRadioGroup.decorators = [\n        { type: Directive, args: [{ selector: '[ngbRadioGroup]', host: { 'role': 'radiogroup' }, providers: [NGB_RADIO_VALUE_ACCESSOR] },] }\n    ];\n    NgbRadioGroup.propDecorators = {\n        name: [{ type: Input }]\n    };\n    return NgbRadioGroup;\n}());\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\nvar NgbRadio = /** @class */ (function () {\n    function NgbRadio(_group, _label, _renderer, _element, _cd) {\n        this._group = _group;\n        this._label = _label;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._cd = _cd;\n        this._value = null;\n        this._group.register(this);\n        this.updateDisabled();\n    }\n    Object.defineProperty(NgbRadio.prototype, \"value\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._value; },\n        /**\n         * The form control value when current radio button is checked.\n         */\n        set: /**\n         * The form control value when current radio button is checked.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._value = value;\n            /** @type {?} */\n            var stringValue = value ? value.toString() : '';\n            this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n            this._group.onRadioValueUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._group.disabled || this._disabled; },\n        /**\n         * If `true`, current radio button will be disabled.\n         */\n        set: /**\n         * If `true`, current radio button will be disabled.\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        function (isDisabled) {\n            this._disabled = isDisabled !== false;\n            this.updateDisabled();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"focused\", {\n        set: /**\n         * @param {?} isFocused\n         * @return {?}\n         */\n        function (isFocused) {\n            if (this._label) {\n                this._label.focused = isFocused;\n            }\n            if (!isFocused) {\n                this._group.onTouched();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"checked\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._checked; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbRadio.prototype, \"nameAttr\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.name || this._group.name; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgbRadio.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this._group.unregister(this); };\n    /**\n     * @return {?}\n     */\n    NgbRadio.prototype.onChange = /**\n     * @return {?}\n     */\n    function () { this._group.onRadioChange(this); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbRadio.prototype.updateValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n        if (this.value !== value) {\n            this._cd.markForCheck();\n        }\n        this._checked = this.value === value;\n        this._label.active = this._checked;\n    };\n    /**\n     * @return {?}\n     */\n    NgbRadio.prototype.updateDisabled = /**\n     * @return {?}\n     */\n    function () { this._label.disabled = this.disabled; };\n    NgbRadio.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbButton][type=radio]',\n                    host: {\n                        '[checked]': 'checked',\n                        '[disabled]': 'disabled',\n                        '[name]': 'nameAttr',\n                        '(change)': 'onChange()',\n                        '(focus)': 'focused = true',\n                        '(blur)': 'focused = false'\n                    }\n                },] }\n    ];\n    /** @nocollapse */\n    NgbRadio.ctorParameters = function () { return [\n        { type: NgbRadioGroup },\n        { type: NgbButtonLabel },\n        { type: Renderer2 },\n        { type: ElementRef },\n        { type: ChangeDetectorRef }\n    ]; };\n    NgbRadio.propDecorators = {\n        name: [{ type: Input }],\n        value: [{ type: Input, args: ['value',] }],\n        disabled: [{ type: Input, args: ['disabled',] }]\n    };\n    return NgbRadio;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\nvar NgbButtonsModule = /** @class */ (function () {\n    function NgbButtonsModule() {\n    }\n    NgbButtonsModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES },] }\n    ];\n    return NgbButtonsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\nvar NgbCarouselConfig = /** @class */ (function () {\n    function NgbCarouselConfig() {\n        this.interval = 5000;\n        this.wrap = true;\n        this.keyboard = true;\n        this.pauseOnHover = true;\n        this.showNavigationArrows = true;\n        this.showNavigationIndicators = true;\n    }\n    NgbCarouselConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbCarouselConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbCarouselConfig_Factory() { return new NgbCarouselConfig(); }, token: NgbCarouselConfig, providedIn: \"root\" });\n    return NgbCarouselConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar nextId$2 = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\nvar NgbSlide = /** @class */ (function () {\n    function NgbSlide(tplRef) {\n        this.tplRef = tplRef;\n        /**\n         * Slide id that must be unique for the entire document.\n         *\n         * If not provided, will be generated in the `ngb-slide-xx` format.\n         */\n        this.id = \"ngb-slide-\" + nextId$2++;\n    }\n    NgbSlide.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbSlide]' },] }\n    ];\n    /** @nocollapse */\n    NgbSlide.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    NgbSlide.propDecorators = {\n        id: [{ type: Input }]\n    };\n    return NgbSlide;\n}());\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\nvar NgbCarousel = /** @class */ (function () {\n    function NgbCarousel(config, _platformId, _ngZone, _cd) {\n        this._platformId = _platformId;\n        this._ngZone = _ngZone;\n        this._cd = _cd;\n        this.NgbSlideEventSource = NgbSlideEventSource;\n        this._destroy$ = new Subject();\n        this._interval$ = new BehaviorSubject(0);\n        this._mouseHover$ = new BehaviorSubject(false);\n        this._pauseOnHover$ = new BehaviorSubject(false);\n        this._pause$ = new BehaviorSubject(false);\n        this._wrap$ = new BehaviorSubject(false);\n        /**\n         * An event emitted right after the slide transition is completed.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         */\n        this.slide = new EventEmitter();\n        this.interval = config.interval;\n        this.wrap = config.wrap;\n        this.keyboard = config.keyboard;\n        this.pauseOnHover = config.pauseOnHover;\n        this.showNavigationArrows = config.showNavigationArrows;\n        this.showNavigationIndicators = config.showNavigationIndicators;\n    }\n    Object.defineProperty(NgbCarousel.prototype, \"interval\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._interval$.value; },\n        /**\n         * Time in milliseconds before the next slide is shown.\n         */\n        set: /**\n         * Time in milliseconds before the next slide is shown.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._interval$.next(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbCarousel.prototype, \"wrap\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._wrap$.value; },\n        /**\n         * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n         */\n        set: /**\n         * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._wrap$.next(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbCarousel.prototype, \"pauseOnHover\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._pauseOnHover$.value; },\n        /**\n         * If `true`, will pause slide switching when mouse cursor hovers the slide.\n         *\n         * @since 2.2.0\n         */\n        set: /**\n         * If `true`, will pause slide switching when mouse cursor hovers the slide.\n         *\n         * \\@since 2.2.0\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._pauseOnHover$.next(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgbCarousel.prototype.mouseEnter = /**\n     * @return {?}\n     */\n    function () {\n        this._mouseHover$.next(true);\n    };\n    /**\n     * @return {?}\n     */\n    NgbCarousel.prototype.mouseLeave = /**\n     * @return {?}\n     */\n    function () {\n        this._mouseHover$.next(false);\n    };\n    /**\n     * @return {?}\n     */\n    NgbCarousel.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // setInterval() doesn't play well with SSR and protractor,\n        // so we should run it in the browser and outside Angular\n        if (isPlatformBrowser(this._platformId)) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var hasNextSlide$ = combineLatest(_this.slide.pipe(map((/**\n                 * @param {?} slideEvent\n                 * @return {?}\n                 */\n                function (slideEvent) { return slideEvent.current; })), startWith(_this.activeId)), _this._wrap$, _this.slides.changes.pipe(startWith(null)))\n                    .pipe(map((/**\n                 * @param {?} __0\n                 * @return {?}\n                 */\n                function (_a) {\n                    var _b = __read(_a, 2), currentSlideId = _b[0], wrap = _b[1];\n                    /** @type {?} */\n                    var slideArr = _this.slides.toArray();\n                    /** @type {?} */\n                    var currentSlideIdx = _this._getSlideIdxById(currentSlideId);\n                    return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                })), distinctUntilChanged());\n                combineLatest(_this._pause$, _this._pauseOnHover$, _this._mouseHover$, _this._interval$, hasNextSlide$)\n                    .pipe(map((/**\n                 * @param {?} __0\n                 * @return {?}\n                 */\n                function (_a) {\n                    var _b = __read(_a, 5), pause = _b[0], pauseOnHover = _b[1], mouseHover = _b[2], interval = _b[3], hasNextSlide = _b[4];\n                    return ((pause || (pauseOnHover && mouseHover) || !hasNextSlide) ? 0 : interval);\n                })), distinctUntilChanged(), switchMap((/**\n                 * @param {?} interval\n                 * @return {?}\n                 */\n                function (interval) { return interval > 0 ? timer(interval, interval) : NEVER; })), takeUntil(_this._destroy$))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                function () { return _this._ngZone.run((/**\n                 * @return {?}\n                 */\n                function () { return _this.next(NgbSlideEventSource.TIMER); })); }));\n            }));\n        }\n        this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe((/**\n         * @return {?}\n         */\n        function () { return _this._cd.markForCheck(); }));\n    };\n    /**\n     * @return {?}\n     */\n    NgbCarousel.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var activeSlide = this._getSlideById(this.activeId);\n        this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n    };\n    /**\n     * @return {?}\n     */\n    NgbCarousel.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this._destroy$.next(); };\n    /**\n     * Navigates to a slide with the specified identifier.\n     */\n    /**\n     * Navigates to a slide with the specified identifier.\n     * @param {?} slideId\n     * @param {?=} source\n     * @return {?}\n     */\n    NgbCarousel.prototype.select = /**\n     * Navigates to a slide with the specified identifier.\n     * @param {?} slideId\n     * @param {?=} source\n     * @return {?}\n     */\n    function (slideId, source) {\n        this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n    };\n    /**\n     * Navigates to the previous slide.\n     */\n    /**\n     * Navigates to the previous slide.\n     * @param {?=} source\n     * @return {?}\n     */\n    NgbCarousel.prototype.prev = /**\n     * Navigates to the previous slide.\n     * @param {?=} source\n     * @return {?}\n     */\n    function (source) {\n        this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n    };\n    /**\n     * Navigates to the next slide.\n     */\n    /**\n     * Navigates to the next slide.\n     * @param {?=} source\n     * @return {?}\n     */\n    NgbCarousel.prototype.next = /**\n     * Navigates to the next slide.\n     * @param {?=} source\n     * @return {?}\n     */\n    function (source) {\n        this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n    };\n    /**\n     * Pauses cycling through the slides.\n     */\n    /**\n     * Pauses cycling through the slides.\n     * @return {?}\n     */\n    NgbCarousel.prototype.pause = /**\n     * Pauses cycling through the slides.\n     * @return {?}\n     */\n    function () { this._pause$.next(true); };\n    /**\n     * Restarts cycling through the slides from left to right.\n     */\n    /**\n     * Restarts cycling through the slides from left to right.\n     * @return {?}\n     */\n    NgbCarousel.prototype.cycle = /**\n     * Restarts cycling through the slides from left to right.\n     * @return {?}\n     */\n    function () { this._pause$.next(false); };\n    /**\n     * @private\n     * @param {?} slideIdx\n     * @param {?} direction\n     * @param {?=} source\n     * @return {?}\n     */\n    NgbCarousel.prototype._cycleToSelected = /**\n     * @private\n     * @param {?} slideIdx\n     * @param {?} direction\n     * @param {?=} source\n     * @return {?}\n     */\n    function (slideIdx, direction, source) {\n        /** @type {?} */\n        var selectedSlide = this._getSlideById(slideIdx);\n        if (selectedSlide && selectedSlide.id !== this.activeId) {\n            this.slide.emit({ prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source: source });\n            this.activeId = selectedSlide.id;\n        }\n        // we get here after the interval fires or any external API call like next(), prev() or select()\n        this._cd.markForCheck();\n    };\n    /**\n     * @private\n     * @param {?} currentActiveSlideId\n     * @param {?} nextActiveSlideId\n     * @return {?}\n     */\n    NgbCarousel.prototype._getSlideEventDirection = /**\n     * @private\n     * @param {?} currentActiveSlideId\n     * @param {?} nextActiveSlideId\n     * @return {?}\n     */\n    function (currentActiveSlideId, nextActiveSlideId) {\n        /** @type {?} */\n        var currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n        /** @type {?} */\n        var nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n        return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n    };\n    /**\n     * @private\n     * @param {?} slideId\n     * @return {?}\n     */\n    NgbCarousel.prototype._getSlideById = /**\n     * @private\n     * @param {?} slideId\n     * @return {?}\n     */\n    function (slideId) { return this.slides.find((/**\n     * @param {?} slide\n     * @return {?}\n     */\n    function (slide) { return slide.id === slideId; })); };\n    /**\n     * @private\n     * @param {?} slideId\n     * @return {?}\n     */\n    NgbCarousel.prototype._getSlideIdxById = /**\n     * @private\n     * @param {?} slideId\n     * @return {?}\n     */\n    function (slideId) {\n        return this.slides.toArray().indexOf(this._getSlideById(slideId));\n    };\n    /**\n     * @private\n     * @param {?} currentSlideId\n     * @return {?}\n     */\n    NgbCarousel.prototype._getNextSlide = /**\n     * @private\n     * @param {?} currentSlideId\n     * @return {?}\n     */\n    function (currentSlideId) {\n        /** @type {?} */\n        var slideArr = this.slides.toArray();\n        /** @type {?} */\n        var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        /** @type {?} */\n        var isLastSlide = currentSlideIdx === slideArr.length - 1;\n        return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n            slideArr[currentSlideIdx + 1].id;\n    };\n    /**\n     * @private\n     * @param {?} currentSlideId\n     * @return {?}\n     */\n    NgbCarousel.prototype._getPrevSlide = /**\n     * @private\n     * @param {?} currentSlideId\n     * @return {?}\n     */\n    function (currentSlideId) {\n        /** @type {?} */\n        var slideArr = this.slides.toArray();\n        /** @type {?} */\n        var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        /** @type {?} */\n        var isFirstSlide = currentSlideIdx === 0;\n        return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n            slideArr[currentSlideIdx - 1].id;\n    };\n    NgbCarousel.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-carousel',\n                    exportAs: 'ngbCarousel',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'carousel slide',\n                        '[style.display]': '\"block\"',\n                        'tabIndex': '0',\n                        '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n                        '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n                    },\n                    template: \"\\n    <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showNavigationIndicators\\\">\\n      <li *ngFor=\\\"let slide of slides\\\" [id]=\\\"slide.id\\\" [class.active]=\\\"slide.id === activeId\\\"\\n          (click)=\\\"select(slide.id, NgbSlideEventSource.INDICATOR)\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\">\\n      <div *ngFor=\\\"let slide of slides\\\" class=\\\"carousel-item\\\" [class.active]=\\\"slide.id === activeId\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"slide.tplRef\\\"></ng-template>\\n      </div>\\n    </div>\\n    <a class=\\\"carousel-control-prev\\\" role=\\\"button\\\" (click)=\\\"prev(NgbSlideEventSource.ARROW_LEFT)\\\" *ngIf=\\\"showNavigationArrows\\\">\\n      <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.carousel.previous\\\">Previous</span>\\n    </a>\\n    <a class=\\\"carousel-control-next\\\" role=\\\"button\\\" (click)=\\\"next(NgbSlideEventSource.ARROW_RIGHT)\\\" *ngIf=\\\"showNavigationArrows\\\">\\n      <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.carousel.next\\\">Next</span>\\n    </a>\\n  \"\n                }] }\n    ];\n    /** @nocollapse */\n    NgbCarousel.ctorParameters = function () { return [\n        { type: NgbCarouselConfig },\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef }\n    ]; };\n    NgbCarousel.propDecorators = {\n        slides: [{ type: ContentChildren, args: [NgbSlide,] }],\n        activeId: [{ type: Input }],\n        interval: [{ type: Input }],\n        wrap: [{ type: Input }],\n        keyboard: [{ type: Input }],\n        pauseOnHover: [{ type: Input }],\n        showNavigationArrows: [{ type: Input }],\n        showNavigationIndicators: [{ type: Input }],\n        slide: [{ type: Output }],\n        mouseEnter: [{ type: HostListener, args: ['mouseenter',] }],\n        mouseLeave: [{ type: HostListener, args: ['mouseleave',] }]\n    };\n    return NgbCarousel;\n}());\n/** @enum {string} */\nvar NgbSlideEventDirection = {\n    LEFT: (/** @type {?} */ ('left')),\n    RIGHT: (/** @type {?} */ ('right')),\n};\n/** @enum {string} */\nvar NgbSlideEventSource = {\n    TIMER: 'timer',\n    ARROW_LEFT: 'arrowLeft',\n    ARROW_RIGHT: 'arrowRight',\n    INDICATOR: 'indicator',\n};\n/** @type {?} */\nvar NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbCarouselModule = /** @class */ (function () {\n    function NgbCarouselModule() {\n    }\n    NgbCarouselModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule] },] }\n    ];\n    return NgbCarouselModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\nvar NgbCollapse = /** @class */ (function () {\n    function NgbCollapse() {\n        /**\n         * If `true`, will collapse the element or show it otherwise.\n         */\n        this.collapsed = false;\n    }\n    NgbCollapse.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbCollapse]',\n                    exportAs: 'ngbCollapse',\n                    host: { '[class.collapse]': 'true', '[class.show]': '!collapsed' }\n                },] }\n    ];\n    NgbCollapse.propDecorators = {\n        collapsed: [{ type: Input, args: ['ngbCollapse',] }]\n    };\n    return NgbCollapse;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbCollapseModule = /** @class */ (function () {\n    function NgbCollapseModule() {\n    }\n    NgbCollapseModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbCollapse], exports: [NgbCollapse] },] }\n    ];\n    return NgbCollapseModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * \\@since 3.0.0\n */\nvar  /**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * \\@since 3.0.0\n */\nNgbDate = /** @class */ (function () {\n    function NgbDate(year, month, day) {\n        this.year = isInteger(year) ? year : null;\n        this.month = isInteger(month) ? month : null;\n        this.day = isInteger(day) ? day : null;\n    }\n    /**\n     * A **static method** that creates a new date object from the `NgbDateStruct`,\n     *\n     * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n     *\n     * If the `date` is already of `NgbDate` type, the method will return the same object.\n     */\n    /**\n     * A **static method** that creates a new date object from the `NgbDateStruct`,\n     *\n     * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n     *\n     * If the `date` is already of `NgbDate` type, the method will return the same object.\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDate.from = /**\n     * A **static method** that creates a new date object from the `NgbDateStruct`,\n     *\n     * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n     *\n     * If the `date` is already of `NgbDate` type, the method will return the same object.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        if (date instanceof NgbDate) {\n            return date;\n        }\n        return date ? new NgbDate(date.year, date.month, date.day) : null;\n    };\n    /**\n     * Checks if the current date is equal to another date.\n     */\n    /**\n     * Checks if the current date is equal to another date.\n     * @param {?} other\n     * @return {?}\n     */\n    NgbDate.prototype.equals = /**\n     * Checks if the current date is equal to another date.\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        return other && this.year === other.year && this.month === other.month && this.day === other.day;\n    };\n    /**\n     * Checks if the current date is before another date.\n     */\n    /**\n     * Checks if the current date is before another date.\n     * @param {?} other\n     * @return {?}\n     */\n    NgbDate.prototype.before = /**\n     * Checks if the current date is before another date.\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    };\n    /**\n     * Checks if the current date is after another date.\n     */\n    /**\n     * Checks if the current date is after another date.\n     * @param {?} other\n     * @return {?}\n     */\n    NgbDate.prototype.after = /**\n     * Checks if the current date is after another date.\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    };\n    return NgbDate;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} jsDate\n * @return {?}\n */\nfunction fromJSDate(jsDate) {\n    return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction toJSDate(date) {\n    /** @type {?} */\n    var jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n    return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n * @abstract\n */\nvar NgbCalendar = /** @class */ (function () {\n    function NgbCalendar() {\n    }\n    NgbCalendar.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY },] }\n    ];\n    /** @nocollapse */ NgbCalendar.ngInjectableDef = ɵɵdefineInjectable({ factory: NGB_DATEPICKER_CALENDAR_FACTORY, token: NgbCalendar, providedIn: \"root\" });\n    return NgbCalendar;\n}());\nvar NgbCalendarGregorian = /** @class */ (function (_super) {\n    __extends(NgbCalendarGregorian, _super);\n    function NgbCalendarGregorian() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    NgbCalendarGregorian.prototype.getDaysPerWeek = /**\n     * @return {?}\n     */\n    function () { return 7; };\n    /**\n     * @return {?}\n     */\n    NgbCalendarGregorian.prototype.getMonths = /**\n     * @return {?}\n     */\n    function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; };\n    /**\n     * @return {?}\n     */\n    NgbCalendarGregorian.prototype.getWeeksPerMonth = /**\n     * @return {?}\n     */\n    function () { return 6; };\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    NgbCalendarGregorian.prototype.getNext = /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        /** @type {?} */\n        var jsDate = toJSDate(date);\n        /** @type {?} */\n        var checkMonth = true;\n        /** @type {?} */\n        var expectedMonth = jsDate.getMonth();\n        switch (period) {\n            case 'y':\n                jsDate.setFullYear(jsDate.getFullYear() + number);\n                break;\n            case 'm':\n                expectedMonth += number;\n                jsDate.setMonth(expectedMonth);\n                expectedMonth = expectedMonth % 12;\n                if (expectedMonth < 0) {\n                    expectedMonth = expectedMonth + 12;\n                }\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                checkMonth = false;\n                break;\n            default:\n                return date;\n        }\n        if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n            // this means the destination month has less days than the initial month\n            // let's go back to the end of the previous month:\n            jsDate.setDate(0);\n        }\n        return fromJSDate(jsDate);\n    };\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    NgbCalendarGregorian.prototype.getPrev = /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbCalendarGregorian.prototype.getWeekday = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var jsDate = toJSDate(date);\n        /** @type {?} */\n        var day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    NgbCalendarGregorian.prototype.getWeekNumber = /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    function (week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        /** @type {?} */\n        var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        /** @type {?} */\n        var date = week[thursdayIndex];\n        /** @type {?} */\n        var jsDate = toJSDate(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        // Thursday\n        /** @type {?} */\n        var time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    };\n    /**\n     * @return {?}\n     */\n    NgbCalendarGregorian.prototype.getToday = /**\n     * @return {?}\n     */\n    function () { return fromJSDate(new Date()); };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbCalendarGregorian.prototype.isValid = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        /** @type {?} */\n        var jsDate = toJSDate(date);\n        return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day;\n    };\n    NgbCalendarGregorian.decorators = [\n        { type: Injectable }\n    ];\n    return NgbCalendarGregorian;\n}(NgbCalendar));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nfunction isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nfunction isChangedMonth(prev, next) {\n    return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nfunction dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n/**\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(\"'maxDate' \" + maxDate + \" should be greater than 'minDate' \" + minDate);\n    }\n}\n/**\n * @param {?} date\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return minDate;\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return maxDate;\n    }\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} state\n * @return {?}\n */\nfunction isDateSelectable(date, state) {\n    var minDate = state.minDate, maxDate = state.maxDate, disabled = state.disabled, markDisabled = state.markDisabled;\n    // clang-format off\n    return !(!isDefined(date) ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n    // clang-format on\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    /** @type {?} */\n    var months = calendar.getMonths(date.year);\n    if (minDate && date.year === minDate.year) {\n        /** @type {?} */\n        var index = months.findIndex((/**\n         * @param {?} month\n         * @return {?}\n         */\n        function (month) { return month === minDate.month; }));\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        /** @type {?} */\n        var index = months.findIndex((/**\n         * @param {?} month\n         * @return {?}\n         */\n        function (month) { return month === maxDate.month; }));\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\n/**\n * @param {?} date\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    /** @type {?} */\n    var start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n    /** @type {?} */\n    var end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n    /** @type {?} */\n    var length = end - start + 1;\n    /** @type {?} */\n    var numbers = Array(length);\n    for (var i = 0; i < length; i++) {\n        numbers[i] = start + i;\n    }\n    return numbers;\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} maxDate\n * @return {?}\n */\nfunction nextMonthDisabled(calendar, date, maxDate) {\n    /** @type {?} */\n    var nextDate = Object.assign(calendar.getNext(date, 'm'), { day: 1 });\n    return maxDate && nextDate.after(maxDate);\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} minDate\n * @return {?}\n */\nfunction prevMonthDisabled(calendar, date, minDate) {\n    /** @type {?} */\n    var prevDate = Object.assign(calendar.getPrev(date, 'm'), { day: 1 });\n    return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n        prevDate.year < minDate.year && minDate.month === 1);\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} state\n * @param {?} i18n\n * @param {?} force\n * @return {?}\n */\nfunction buildMonths(calendar, date, state, i18n, force) {\n    var displayMonths = state.displayMonths, months = state.months;\n    // move old months to a temporary array\n    /** @type {?} */\n    var monthsToReuse = months.splice(0, months.length);\n    // generate new first dates, nullify or reuse months\n    /** @type {?} */\n    var firstDates = Array.from({ length: displayMonths }, (/**\n     * @param {?} _\n     * @param {?} i\n     * @return {?}\n     */\n    function (_, i) {\n        /** @type {?} */\n        var firstDate = Object.assign(calendar.getNext(date, 'm', i), { day: 1 });\n        months[i] = null;\n        if (!force) {\n            /** @type {?} */\n            var reusedIndex = monthsToReuse.findIndex((/**\n             * @param {?} month\n             * @return {?}\n             */\n            function (month) { return month.firstDate.equals(firstDate); }));\n            // move reused month back to months\n            if (reusedIndex !== -1) {\n                months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n            }\n        }\n        return firstDate;\n    }));\n    // rebuild nullified months\n    firstDates.forEach((/**\n     * @param {?} firstDate\n     * @param {?} i\n     * @return {?}\n     */\n    function (firstDate, i) {\n        if (months[i] === null) {\n            months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || (/** @type {?} */ ({})));\n        }\n    }));\n    return months;\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} state\n * @param {?} i18n\n * @param {?=} month\n * @return {?}\n */\nfunction buildMonth(calendar, date, state, i18n, month) {\n    if (month === void 0) { month = (/** @type {?} */ ({})); }\n    var dayTemplateData = state.dayTemplateData, minDate = state.minDate, maxDate = state.maxDate, firstDayOfWeek = state.firstDayOfWeek, markDisabled = state.markDisabled, outsideDays = state.outsideDays;\n    /** @type {?} */\n    var calendarToday = calendar.getToday();\n    month.firstDate = null;\n    month.lastDate = null;\n    month.number = date.month;\n    month.year = date.year;\n    month.weeks = month.weeks || [];\n    month.weekdays = month.weekdays || [];\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // month has weeks\n    for (var week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        /** @type {?} */\n        var weekObject = month.weeks[week];\n        if (!weekObject) {\n            weekObject = month.weeks[week] = { number: 0, days: [], collapsed: true };\n        }\n        /** @type {?} */\n        var days = weekObject.days;\n        // week has days\n        for (var day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0) {\n                month.weekdays[day] = calendar.getWeekday(date);\n            }\n            /** @type {?} */\n            var newDate = new NgbDate(date.year, date.month, date.day);\n            /** @type {?} */\n            var nextDate = calendar.getNext(newDate);\n            /** @type {?} */\n            var ariaLabel = i18n.getDayAriaLabel(newDate);\n            // marking date as disabled\n            /** @type {?} */\n            var disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // today\n            /** @type {?} */\n            var today = newDate.equals(calendarToday);\n            // adding user-provided data to the context\n            /** @type {?} */\n            var contextUserData = dayTemplateData ? dayTemplateData(newDate, { month: month.number, year: month.year }) : undefined;\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            /** @type {?} */\n            var dayObject = days[day];\n            if (!dayObject) {\n                dayObject = days[day] = (/** @type {?} */ ({}));\n            }\n            dayObject.date = newDate;\n            dayObject.context = Object.assign(dayObject.context || {}, {\n                $implicit: newDate,\n                date: newDate,\n                data: contextUserData,\n                currentMonth: month.number,\n                currentYear: month.year, disabled: disabled,\n                focused: false,\n                selected: false, today: today\n            });\n            dayObject.tabindex = -1;\n            dayObject.ariaLabel = ariaLabel;\n            dayObject.hidden = false;\n            date = nextDate;\n        }\n        weekObject.number = calendar.getWeekNumber(days.map((/**\n         * @param {?} day\n         * @return {?}\n         */\n        function (day) { return day.date; })), firstDayOfWeek);\n        // marking week as collapsed\n        weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n            days[days.length - 1].date.month !== month.number;\n    }\n    return month;\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} firstDayOfWeek\n * @return {?}\n */\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n    /** @type {?} */\n    var daysPerWeek = calendar.getDaysPerWeek();\n    /** @type {?} */\n    var firstMonthDate = new NgbDate(date.year, date.month, 1);\n    /** @type {?} */\n    var dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} locale\n * @return {?}\n */\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n    return new NgbDatepickerI18nDefault(locale);\n}\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n * @abstract\n */\nvar NgbDatepickerI18n = /** @class */ (function () {\n    function NgbDatepickerI18n() {\n    }\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * @since 3.0.0\n     */\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * \\@since 3.0.0\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDatepickerI18n.prototype.getDayNumerals = /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * \\@since 3.0.0\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) { return \"\" + date.day; };\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * @since 3.0.0\n     */\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * \\@since 3.0.0\n     * @param {?} weekNumber\n     * @return {?}\n     */\n    NgbDatepickerI18n.prototype.getWeekNumerals = /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * \\@since 3.0.0\n     * @param {?} weekNumber\n     * @return {?}\n     */\n    function (weekNumber) { return \"\" + weekNumber; };\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * @since 3.0.0\n     */\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * \\@since 3.0.0\n     * @param {?} year\n     * @return {?}\n     */\n    NgbDatepickerI18n.prototype.getYearNumerals = /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * \\@since 3.0.0\n     * @param {?} year\n     * @return {?}\n     */\n    function (year) { return \"\" + year; };\n    NgbDatepickerI18n.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID] },] }\n    ];\n    /** @nocollapse */ NgbDatepickerI18n.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbDatepickerI18n_Factory() { return NGB_DATEPICKER_18N_FACTORY(ɵɵinject(LOCALE_ID)); }, token: NgbDatepickerI18n, providedIn: \"root\" });\n    return NgbDatepickerI18n;\n}());\nvar NgbDatepickerI18nDefault = /** @class */ (function (_super) {\n    __extends(NgbDatepickerI18nDefault, _super);\n    function NgbDatepickerI18nDefault(_locale) {\n        var _this = _super.call(this) || this;\n        _this._locale = _locale;\n        /** @type {?} */\n        var weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n        _this._weekdaysShort = weekdaysStartingOnSunday.map((/**\n         * @param {?} day\n         * @param {?} index\n         * @return {?}\n         */\n        function (day, index) { return weekdaysStartingOnSunday[(index + 1) % 7]; }));\n        _this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n        _this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n        return _this;\n    }\n    /**\n     * @param {?} weekday\n     * @return {?}\n     */\n    NgbDatepickerI18nDefault.prototype.getWeekdayShortName = /**\n     * @param {?} weekday\n     * @return {?}\n     */\n    function (weekday) { return this._weekdaysShort[weekday - 1]; };\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    NgbDatepickerI18nDefault.prototype.getMonthShortName = /**\n     * @param {?} month\n     * @return {?}\n     */\n    function (month) { return this._monthsShort[month - 1]; };\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    NgbDatepickerI18nDefault.prototype.getMonthFullName = /**\n     * @param {?} month\n     * @return {?}\n     */\n    function (month) { return this._monthsFull[month - 1]; };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDatepickerI18nDefault.prototype.getDayAriaLabel = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var jsDate = new Date(date.year, date.month - 1, date.day);\n        return formatDate(jsDate, 'fullDate', this._locale);\n    };\n    NgbDatepickerI18nDefault.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    NgbDatepickerI18nDefault.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n    ]; };\n    return NgbDatepickerI18nDefault;\n}(NgbDatepickerI18n));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbDatepickerService = /** @class */ (function () {\n    function NgbDatepickerService(_calendar, _i18n) {\n        var _this = this;\n        this._calendar = _calendar;\n        this._i18n = _i18n;\n        this._VALIDATORS = {\n            dayTemplateData: (/**\n             * @param {?} dayTemplateData\n             * @return {?}\n             */\n            function (dayTemplateData) {\n                if (_this._state.dayTemplateData !== dayTemplateData) {\n                    return { dayTemplateData: dayTemplateData };\n                }\n            }),\n            displayMonths: (/**\n             * @param {?} displayMonths\n             * @return {?}\n             */\n            function (displayMonths) {\n                displayMonths = toInteger(displayMonths);\n                if (isInteger(displayMonths) && displayMonths > 0 && _this._state.displayMonths !== displayMonths) {\n                    return { displayMonths: displayMonths };\n                }\n            }),\n            disabled: (/**\n             * @param {?} disabled\n             * @return {?}\n             */\n            function (disabled) {\n                if (_this._state.disabled !== disabled) {\n                    return { disabled: disabled };\n                }\n            }),\n            firstDayOfWeek: (/**\n             * @param {?} firstDayOfWeek\n             * @return {?}\n             */\n            function (firstDayOfWeek) {\n                firstDayOfWeek = toInteger(firstDayOfWeek);\n                if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && _this._state.firstDayOfWeek !== firstDayOfWeek) {\n                    return { firstDayOfWeek: firstDayOfWeek };\n                }\n            }),\n            focusVisible: (/**\n             * @param {?} focusVisible\n             * @return {?}\n             */\n            function (focusVisible) {\n                if (_this._state.focusVisible !== focusVisible && !_this._state.disabled) {\n                    return { focusVisible: focusVisible };\n                }\n            }),\n            markDisabled: (/**\n             * @param {?} markDisabled\n             * @return {?}\n             */\n            function (markDisabled) {\n                if (_this._state.markDisabled !== markDisabled) {\n                    return { markDisabled: markDisabled };\n                }\n            }),\n            maxDate: (/**\n             * @param {?} date\n             * @return {?}\n             */\n            function (date) {\n                /** @type {?} */\n                var maxDate = _this.toValidDate(date, null);\n                if (isChangedDate(_this._state.maxDate, maxDate)) {\n                    return { maxDate: maxDate };\n                }\n            }),\n            minDate: (/**\n             * @param {?} date\n             * @return {?}\n             */\n            function (date) {\n                /** @type {?} */\n                var minDate = _this.toValidDate(date, null);\n                if (isChangedDate(_this._state.minDate, minDate)) {\n                    return { minDate: minDate };\n                }\n            }),\n            navigation: (/**\n             * @param {?} navigation\n             * @return {?}\n             */\n            function (navigation) {\n                if (_this._state.navigation !== navigation) {\n                    return { navigation: navigation };\n                }\n            }),\n            outsideDays: (/**\n             * @param {?} outsideDays\n             * @return {?}\n             */\n            function (outsideDays) {\n                if (_this._state.outsideDays !== outsideDays) {\n                    return { outsideDays: outsideDays };\n                }\n            })\n        };\n        this._model$ = new Subject();\n        this._dateSelect$ = new Subject();\n        this._state = {\n            disabled: false,\n            displayMonths: 1,\n            firstDayOfWeek: 1,\n            focusVisible: false,\n            months: [],\n            navigation: 'select',\n            outsideDays: 'visible',\n            prevDisabled: false,\n            nextDisabled: false,\n            selectBoxes: { years: [], months: [] },\n            selectedDate: null\n        };\n    }\n    Object.defineProperty(NgbDatepickerService.prototype, \"model$\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._model$.pipe(filter((/**\n         * @param {?} model\n         * @return {?}\n         */\n        function (model) { return model.months.length > 0; }))); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"dateSelect$\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._dateSelect$.pipe(filter((/**\n         * @param {?} date\n         * @return {?}\n         */\n        function (date) { return date !== null; }))); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    NgbDatepickerService.prototype.set = /**\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        var _this = this;\n        /** @type {?} */\n        var patch = Object.keys(options)\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        function (key) { return _this._VALIDATORS[key](options[key]); }))\n            .reduce((/**\n         * @param {?} obj\n         * @param {?} part\n         * @return {?}\n         */\n        function (obj, part) { return (__assign({}, obj, part)); }), {});\n        if (Object.keys(patch).length > 0) {\n            this._nextState(patch);\n        }\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDatepickerService.prototype.focus = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n            this._nextState({ focusDate: date });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbDatepickerService.prototype.focusSelect = /**\n     * @return {?}\n     */\n    function () {\n        if (isDateSelectable(this._state.focusDate, this._state)) {\n            this.select(this._state.focusDate, { emitEvent: true });\n        }\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDatepickerService.prototype.open = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var firstDate = this.toValidDate(date, this._calendar.getToday());\n        if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n            this._nextState({ firstDate: firstDate });\n        }\n    };\n    /**\n     * @param {?} date\n     * @param {?=} options\n     * @return {?}\n     */\n    NgbDatepickerService.prototype.select = /**\n     * @param {?} date\n     * @param {?=} options\n     * @return {?}\n     */\n    function (date, options) {\n        if (options === void 0) { options = {}; }\n        /** @type {?} */\n        var selectedDate = this.toValidDate(date, null);\n        if (!this._state.disabled) {\n            if (isChangedDate(this._state.selectedDate, selectedDate)) {\n                this._nextState({ selectedDate: selectedDate });\n            }\n            if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n                this._dateSelect$.next(selectedDate);\n            }\n        }\n    };\n    /**\n     * @param {?} date\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    NgbDatepickerService.prototype.toValidDate = /**\n     * @param {?} date\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    function (date, defaultValue) {\n        /** @type {?} */\n        var ngbDate = NgbDate.from(date);\n        if (defaultValue === undefined) {\n            defaultValue = this._calendar.getToday();\n        }\n        return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    };\n    /**\n     * @param {?} struct\n     * @return {?}\n     */\n    NgbDatepickerService.prototype.getMonth = /**\n     * @param {?} struct\n     * @return {?}\n     */\n    function (struct) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._state.months), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var month = _c.value;\n                if (struct.month === month.number && struct.year === month.year) {\n                    return month;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        throw new Error(\"month \" + struct.month + \" of year \" + struct.year + \" not found\");\n    };\n    /**\n     * @private\n     * @param {?} patch\n     * @return {?}\n     */\n    NgbDatepickerService.prototype._nextState = /**\n     * @private\n     * @param {?} patch\n     * @return {?}\n     */\n    function (patch) {\n        /** @type {?} */\n        var newState = this._updateState(patch);\n        this._patchContexts(newState);\n        this._state = newState;\n        this._model$.next(this._state);\n    };\n    /**\n     * @private\n     * @param {?} state\n     * @return {?}\n     */\n    NgbDatepickerService.prototype._patchContexts = /**\n     * @private\n     * @param {?} state\n     * @return {?}\n     */\n    function (state) {\n        var months = state.months, displayMonths = state.displayMonths, selectedDate = state.selectedDate, focusDate = state.focusDate, focusVisible = state.focusVisible, disabled = state.disabled, outsideDays = state.outsideDays;\n        state.months.forEach((/**\n         * @param {?} month\n         * @return {?}\n         */\n        function (month) {\n            month.weeks.forEach((/**\n             * @param {?} week\n             * @return {?}\n             */\n            function (week) {\n                week.days.forEach((/**\n                 * @param {?} day\n                 * @return {?}\n                 */\n                function (day) {\n                    // patch focus flag\n                    if (focusDate) {\n                        day.context.focused = focusDate.equals(day.date) && focusVisible;\n                    }\n                    // calculating tabindex\n                    day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n                    // override context disabled\n                    if (disabled === true) {\n                        day.context.disabled = true;\n                    }\n                    // patch selection flag\n                    if (selectedDate !== undefined) {\n                        day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n                    }\n                    // visibility\n                    if (month.number !== day.date.month) {\n                        day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                            (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                                day.date.before(months[displayMonths - 1].lastDate));\n                    }\n                }));\n            }));\n        }));\n    };\n    /**\n     * @private\n     * @param {?} patch\n     * @return {?}\n     */\n    NgbDatepickerService.prototype._updateState = /**\n     * @private\n     * @param {?} patch\n     * @return {?}\n     */\n    function (patch) {\n        // patching fields\n        /** @type {?} */\n        var state = Object.assign({}, this._state, patch);\n        /** @type {?} */\n        var startDate = state.firstDate;\n        // min/max dates changed\n        if ('minDate' in patch || 'maxDate' in patch) {\n            checkMinBeforeMax(state.minDate, state.maxDate);\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n        }\n        // disabled\n        if ('disabled' in patch) {\n            state.focusVisible = false;\n        }\n        // initial rebuild via 'select()'\n        if ('selectedDate' in patch && this._state.months.length === 0) {\n            startDate = state.selectedDate;\n        }\n        // terminate early if only focus visibility was changed\n        if ('focusVisible' in patch) {\n            return state;\n        }\n        // focus date changed\n        if ('focusDate' in patch) {\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n            // nothing to rebuild if only focus changed and it is still visible\n            if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n                !state.focusDate.after(state.lastDate)) {\n                return state;\n            }\n        }\n        // first date changed\n        if ('firstDate' in patch) {\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.firstDate;\n        }\n        // rebuilding months\n        if (startDate) {\n            /** @type {?} */\n            var forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n                'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n            /** @type {?} */\n            var months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n            // updating months and boundary dates\n            state.months = months;\n            state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n            state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n            // reset selected date if 'markDisabled' returns true\n            if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n                state.selectedDate = null;\n            }\n            // adjusting focus after months were built\n            if ('firstDate' in patch) {\n                if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n                    state.focusDate.after(state.lastDate)) {\n                    state.focusDate = startDate;\n                }\n            }\n            // adjusting months/years for the select box navigation\n            /** @type {?} */\n            var yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n            /** @type {?} */\n            var monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n            if (state.navigation === 'select') {\n                // years ->  boundaries (min/max were changed)\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                    state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n                }\n                // months -> when current year or boundaries change\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                    state.selectBoxes.months =\n                        generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n                }\n            }\n            else {\n                state.selectBoxes = { years: [], months: [] };\n            }\n            // updating navigation arrows -> boundaries change (min/max) or month/year changes\n            if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n                state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n            }\n        }\n        return state;\n    };\n    NgbDatepickerService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    NgbDatepickerService.ctorParameters = function () { return [\n        { type: NgbCalendar },\n        { type: NgbDatepickerI18n }\n    ]; };\n    return NgbDatepickerService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nvar NavigationEvent = {\n    PREV: 0,\n    NEXT: 1,\n};\nNavigationEvent[NavigationEvent.PREV] = 'PREV';\nNavigationEvent[NavigationEvent.NEXT] = 'NEXT';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nvar NgbDatepickerConfig = /** @class */ (function () {\n    function NgbDatepickerConfig() {\n        this.displayMonths = 1;\n        this.firstDayOfWeek = 1;\n        this.navigation = 'select';\n        this.outsideDays = 'visible';\n        this.showWeekdays = true;\n        this.showWeekNumbers = false;\n    }\n    NgbDatepickerConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbDatepickerConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbDatepickerConfig_Factory() { return new NgbDatepickerConfig(); }, token: NgbDatepickerConfig, providedIn: \"root\" });\n    return NgbDatepickerConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n    return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n * @abstract\n * @template D\n */\nvar NgbDateAdapter = /** @class */ (function () {\n    function NgbDateAdapter() {\n    }\n    NgbDateAdapter.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY },] }\n    ];\n    /** @nocollapse */ NgbDateAdapter.ngInjectableDef = ɵɵdefineInjectable({ factory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY, token: NgbDateAdapter, providedIn: \"root\" });\n    return NgbDateAdapter;\n}());\nvar NgbDateStructAdapter = /** @class */ (function (_super) {\n    __extends(NgbDateStructAdapter, _super);\n    function NgbDateStructAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDateStructAdapter.prototype.fromModel = /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n            { year: date.year, month: date.month, day: date.day } :\n            null;\n    };\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDateStructAdapter.prototype.toModel = /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n            { year: date.year, month: date.month, day: date.day } :\n            null;\n    };\n    NgbDateStructAdapter.decorators = [\n        { type: Injectable }\n    ];\n    return NgbDateStructAdapter;\n}(NgbDateAdapter));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return NgbDatepicker; })),\n    multi: true\n};\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * \\@since 5.3.0\n */\nvar NgbDatepickerContent = /** @class */ (function () {\n    function NgbDatepickerContent(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbDatepickerContent.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbDatepickerContent]' },] }\n    ];\n    /** @nocollapse */\n    NgbDatepickerContent.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbDatepickerContent;\n}());\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\nvar NgbDatepicker = /** @class */ (function () {\n    function NgbDatepicker(_service, _calendar, i18n, config, cd, _elementRef, _ngbDateAdapter, _ngZone) {\n        var _this = this;\n        this._service = _service;\n        this._calendar = _calendar;\n        this.i18n = i18n;\n        this._elementRef = _elementRef;\n        this._ngbDateAdapter = _ngbDateAdapter;\n        this._ngZone = _ngZone;\n        this._destroyed$ = new Subject();\n        this._publicState = (/** @type {?} */ ({}));\n        /**\n         * An event emitted right before the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * \\@since 5.2.0\n         */\n        this.dateSelect = new EventEmitter();\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * Please use 'dateSelect' output instead, this will be deprecated in version 6.0 due to collision with native\n         * 'select' event.\n         */\n        this.select = this.dateSelect;\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        function () { });\n        ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n            'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n            .forEach((/**\n         * @param {?} input\n         * @return {?}\n         */\n        function (input) { return _this[input] = config[input]; }));\n        _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe((/**\n         * @param {?} date\n         * @return {?}\n         */\n        function (date) { _this.dateSelect.emit(date); }));\n        _service.model$.pipe(takeUntil(this._destroyed$)).subscribe((/**\n         * @param {?} model\n         * @return {?}\n         */\n        function (model) {\n            /** @type {?} */\n            var newDate = model.firstDate;\n            /** @type {?} */\n            var oldDate = _this.model ? _this.model.firstDate : null;\n            // update public state\n            _this._publicState = {\n                maxDate: model.maxDate,\n                minDate: model.minDate,\n                firstDate: model.firstDate,\n                lastDate: model.lastDate,\n                focusedDate: model.focusDate,\n                months: model.months.map((/**\n                 * @param {?} viewModel\n                 * @return {?}\n                 */\n                function (viewModel) { return viewModel.firstDate; }))\n            };\n            /** @type {?} */\n            var navigationPrevented = false;\n            // emitting navigation event if the first month changes\n            if (!newDate.equals(oldDate)) {\n                _this.navigate.emit({\n                    current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                    next: { year: newDate.year, month: newDate.month },\n                    preventDefault: (/**\n                     * @return {?}\n                     */\n                    function () { return navigationPrevented = true; })\n                });\n                // can't prevent the very first navigation\n                if (navigationPrevented && oldDate !== null) {\n                    _this._service.open(oldDate);\n                    return;\n                }\n            }\n            /** @type {?} */\n            var newSelectedDate = model.selectedDate;\n            /** @type {?} */\n            var newFocusedDate = model.focusDate;\n            /** @type {?} */\n            var oldFocusedDate = _this.model ? _this.model.focusDate : null;\n            _this.model = model;\n            // handling selection change\n            if (isChangedDate(newSelectedDate, _this._controlValue)) {\n                _this._controlValue = newSelectedDate;\n                _this.onTouched();\n                _this.onChange(_this._ngbDateAdapter.toModel(newSelectedDate));\n            }\n            // handling focus change\n            if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n                _this.focus();\n            }\n            cd.markForCheck();\n        }));\n    }\n    Object.defineProperty(NgbDatepicker.prototype, \"state\", {\n        /**\n         *  Returns the readonly public state of the datepicker\n         *\n         * @since 5.2.0\n         */\n        get: /**\n         *  Returns the readonly public state of the datepicker\n         *\n         * \\@since 5.2.0\n         * @return {?}\n         */\n        function () { return this._publicState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepicker.prototype, \"calendar\", {\n        /**\n         *  Returns the calendar service used in the specific datepicker instance.\n         *\n         *  @since 5.3.0\n         */\n        get: /**\n         *  Returns the calendar service used in the specific datepicker instance.\n         *\n         * \\@since 5.3.0\n         * @return {?}\n         */\n        function () { return this._calendar; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Focuses on given date.\n     */\n    /**\n     *  Focuses on given date.\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDatepicker.prototype.focusDate = /**\n     *  Focuses on given date.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) { this._service.focus(NgbDate.from(date)); };\n    /**\n     *  Selects focused date.\n     */\n    /**\n     *  Selects focused date.\n     * @return {?}\n     */\n    NgbDatepicker.prototype.focusSelect = /**\n     *  Selects focused date.\n     * @return {?}\n     */\n    function () { this._service.focusSelect(); };\n    /**\n     * @return {?}\n     */\n    NgbDatepicker.prototype.focus = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var elementToFocus = _this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n            if (elementToFocus) {\n                elementToFocus.focus();\n            }\n        }));\n    };\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     * @param {?=} date\n     * @return {?}\n     */\n    NgbDatepicker.prototype.navigateTo = /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     * @param {?=} date\n     * @return {?}\n     */\n    function (date) {\n        this._service.open(NgbDate.from(date ? date.day ? (/** @type {?} */ (date)) : __assign({}, date, { day: 1 }) : null));\n    };\n    /**\n     * @return {?}\n     */\n    NgbDatepicker.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var focusIns$ = fromEvent(_this._contentEl.nativeElement, 'focusin');\n            /** @type {?} */\n            var focusOuts$ = fromEvent(_this._contentEl.nativeElement, 'focusout');\n            var nativeElement = _this._elementRef.nativeElement;\n            // we're changing 'focusVisible' only when entering or leaving months view\n            // and ignoring all focus events where both 'target' and 'related' target are day cells\n            merge(focusIns$, focusOuts$)\n                .pipe(filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            function (_a) {\n                var target = _a.target, relatedTarget = _a.relatedTarget;\n                return !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                    nativeElement.contains((/** @type {?} */ (target))) && nativeElement.contains((/** @type {?} */ (relatedTarget))));\n            })), takeUntil(_this._destroyed$))\n                .subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            function (_a) {\n                var type = _a.type;\n                return _this._ngZone.run((/**\n                 * @return {?}\n                 */\n                function () { return _this._service.set({ focusVisible: type === 'focusin' }); }));\n            }));\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    NgbDatepicker.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this._destroyed$.next(); };\n    /**\n     * @return {?}\n     */\n    NgbDatepicker.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.model === undefined) {\n            /** @type {?} */\n            var inputs_1 = {};\n            ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n                'outsideDays']\n                .forEach((/**\n             * @param {?} name\n             * @return {?}\n             */\n            function (name) { return inputs_1[name] = _this[name]; }));\n            this._service.set(inputs_1);\n            this.navigateTo(this.startDate);\n        }\n        if (!this.dayTemplate) {\n            this.dayTemplate = this._defaultDayTemplate;\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgbDatepicker.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        /** @type {?} */\n        var inputs = {};\n        ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n            'outsideDays']\n            .filter((/**\n         * @param {?} name\n         * @return {?}\n         */\n        function (name) { return name in changes; }))\n            .forEach((/**\n         * @param {?} name\n         * @return {?}\n         */\n        function (name) { return inputs[name] = _this[name]; }));\n        this._service.set(inputs);\n        if ('startDate' in changes) {\n            var _a = changes.startDate, currentValue = _a.currentValue, previousValue = _a.previousValue;\n            if (isChangedMonth(previousValue, currentValue)) {\n                this.navigateTo(this.startDate);\n            }\n        }\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDatepicker.prototype.onDateSelect = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        this._service.focus(date);\n        this._service.select(date, { emitEvent: true });\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDatepicker.prototype.onNavigateDateSelect = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) { this._service.open(date); };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NgbDatepicker.prototype.onNavigateEvent = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        switch (event) {\n            case NavigationEvent.PREV:\n                this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                break;\n            case NavigationEvent.NEXT:\n                this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                break;\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbDatepicker.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbDatepicker.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    NgbDatepicker.prototype.setDisabledState = /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    function (disabled) { this._service.set({ disabled: disabled }); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbDatepicker.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n        this._service.select(this._controlValue);\n    };\n    NgbDatepicker.decorators = [\n        { type: Component, args: [{\n                    exportAs: 'ngbDatepicker',\n                    selector: 'ngb-datepicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"\\n    <ng-template #defaultDayTemplate let-date=\\\"date\\\" let-currentMonth=\\\"currentMonth\\\" let-selected=\\\"selected\\\" let-disabled=\\\"disabled\\\" let-focused=\\\"focused\\\">\\n      <div ngbDatepickerDayView\\n        [date]=\\\"date\\\"\\n        [currentMonth]=\\\"currentMonth\\\"\\n        [selected]=\\\"selected\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [focused]=\\\"focused\\\">\\n      </div>\\n    </ng-template>\\n\\n    <ng-template #defaultContentTemplate>\\n      <div *ngFor=\\\"let month of model.months; let i = index;\\\" class=\\\"ngb-dp-month\\\">\\n        <div *ngIf=\\\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\\\" class=\\\"ngb-dp-month-name\\\">\\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\\n        </div>\\n        <ngb-datepicker-month [month]=\\\"month.firstDate\\\"></ngb-datepicker-month>\\n      </div>\\n    </ng-template>\\n\\n    <div class=\\\"ngb-dp-header\\\">\\n      <ngb-datepicker-navigation *ngIf=\\\"navigation !== 'none'\\\"\\n        [date]=\\\"model.firstDate\\\"\\n        [months]=\\\"model.months\\\"\\n        [disabled]=\\\"model.disabled\\\"\\n        [showSelect]=\\\"model.navigation === 'select'\\\"\\n        [prevDisabled]=\\\"model.prevDisabled\\\"\\n        [nextDisabled]=\\\"model.nextDisabled\\\"\\n        [selectBoxes]=\\\"model.selectBoxes\\\"\\n        (navigate)=\\\"onNavigateEvent($event)\\\"\\n        (select)=\\\"onNavigateDateSelect($event)\\\">\\n      </ngb-datepicker-navigation>\\n    </div>\\n\\n    <div class=\\\"ngb-dp-content\\\" [class.ngb-dp-months]=\\\"!contentTemplate\\\" #content>\\n      <ng-template [ngTemplateOutlet]=\\\"contentTemplate?.templateRef || defaultContentTemplate\\\"></ng-template>\\n    </div>\\n\\n    <ng-template [ngTemplateOutlet]=\\\"footerTemplate\\\"></ng-template>\\n  \",\n                    providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService],\n                    styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgbDatepicker.ctorParameters = function () { return [\n        { type: NgbDatepickerService },\n        { type: NgbCalendar },\n        { type: NgbDatepickerI18n },\n        { type: NgbDatepickerConfig },\n        { type: ChangeDetectorRef },\n        { type: ElementRef },\n        { type: NgbDateAdapter },\n        { type: NgZone }\n    ]; };\n    NgbDatepicker.propDecorators = {\n        _defaultDayTemplate: [{ type: ViewChild, args: ['defaultDayTemplate', { static: true },] }],\n        _contentEl: [{ type: ViewChild, args: ['content', { static: true },] }],\n        contentTemplate: [{ type: ContentChild, args: [NgbDatepickerContent, { static: true },] }],\n        dayTemplate: [{ type: Input }],\n        dayTemplateData: [{ type: Input }],\n        displayMonths: [{ type: Input }],\n        firstDayOfWeek: [{ type: Input }],\n        footerTemplate: [{ type: Input }],\n        markDisabled: [{ type: Input }],\n        maxDate: [{ type: Input }],\n        minDate: [{ type: Input }],\n        navigation: [{ type: Input }],\n        outsideDays: [{ type: Input }],\n        showWeekdays: [{ type: Input }],\n        showWeekNumbers: [{ type: Input }],\n        startDate: [{ type: Input }],\n        navigate: [{ type: Output }],\n        dateSelect: [{ type: Output }],\n        select: [{ type: Output }]\n    };\n    return NgbDatepicker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nvar Key = {\n    Tab: 9,\n    Enter: 13,\n    Escape: 27,\n    Space: 32,\n    PageUp: 33,\n    PageDown: 34,\n    End: 35,\n    Home: 36,\n    ArrowLeft: 37,\n    ArrowUp: 38,\n    ArrowRight: 39,\n    ArrowDown: 40,\n};\nKey[Key.Tab] = 'Tab';\nKey[Key.Enter] = 'Enter';\nKey[Key.Escape] = 'Escape';\nKey[Key.Space] = 'Space';\nKey[Key.PageUp] = 'PageUp';\nKey[Key.PageDown] = 'PageDown';\nKey[Key.End] = 'End';\nKey[Key.Home] = 'Home';\nKey[Key.ArrowLeft] = 'ArrowLeft';\nKey[Key.ArrowUp] = 'ArrowUp';\nKey[Key.ArrowRight] = 'ArrowRight';\nKey[Key.ArrowDown] = 'ArrowDown';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * \\@since 5.2.0\n */\nvar NgbDatepickerKeyboardService = /** @class */ (function () {\n    function NgbDatepickerKeyboardService() {\n    }\n    /**\n     * Processes a keyboard event.\n     */\n    /**\n     * Processes a keyboard event.\n     * @param {?} event\n     * @param {?} datepicker\n     * @return {?}\n     */\n    NgbDatepickerKeyboardService.prototype.processKey = /**\n     * Processes a keyboard event.\n     * @param {?} event\n     * @param {?} datepicker\n     * @return {?}\n     */\n    function (event, datepicker) {\n        var state = datepicker.state, calendar = datepicker.calendar;\n        // tslint:disable-next-line:deprecation\n        switch (event.which) {\n            case Key.PageUp:\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                break;\n            case Key.PageDown:\n                datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                break;\n            case Key.End:\n                datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n                break;\n            case Key.Home:\n                datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n                break;\n            case Key.ArrowLeft:\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n                break;\n            case Key.ArrowUp:\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                break;\n            case Key.ArrowRight:\n                datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n                break;\n            case Key.ArrowDown:\n                datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                break;\n            case Key.Enter:\n            case Key.Space:\n                datepicker.focusSelect();\n                break;\n            default:\n                return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    };\n    NgbDatepickerKeyboardService.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbDatepickerKeyboardService.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbDatepickerKeyboardService_Factory() { return new NgbDatepickerKeyboardService(); }, token: NgbDatepickerKeyboardService, providedIn: \"root\" });\n    return NgbDatepickerKeyboardService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * \\@since 5.3.0\n */\nvar NgbDatepickerMonth = /** @class */ (function () {\n    function NgbDatepickerMonth(i18n, datepicker, _keyboardService, _service) {\n        this.i18n = i18n;\n        this.datepicker = datepicker;\n        this._keyboardService = _keyboardService;\n        this._service = _service;\n    }\n    Object.defineProperty(NgbDatepickerMonth.prototype, \"month\", {\n        /**\n         * The first date of month to be rendered.\n         *\n         * This month must one of the months present in the\n         * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n         */\n        set: /**\n         * The first date of month to be rendered.\n         *\n         * This month must one of the months present in the\n         * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n         * @param {?} month\n         * @return {?}\n         */\n        function (month) {\n            this.viewModel = this._service.getMonth(month);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NgbDatepickerMonth.prototype.onKeyDown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) { this._keyboardService.processKey(event, this.datepicker); };\n    /**\n     * @param {?} day\n     * @return {?}\n     */\n    NgbDatepickerMonth.prototype.doSelect = /**\n     * @param {?} day\n     * @return {?}\n     */\n    function (day) {\n        if (!day.context.disabled && !day.hidden) {\n            this.datepicker.onDateSelect(day.date);\n        }\n    };\n    NgbDatepickerMonth.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-datepicker-month',\n                    host: { 'role': 'grid', '(keydown)': 'onKeyDown($event)' },\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"\\n    <div *ngIf=\\\"datepicker.showWeekdays\\\" class=\\\"ngb-dp-week ngb-dp-weekdays\\\" role=\\\"row\\\">\\n      <div *ngIf=\\\"datepicker.showWeekNumbers\\\" class=\\\"ngb-dp-weekday ngb-dp-showweek\\\"></div>\\n      <div *ngFor=\\\"let w of viewModel.weekdays\\\" class=\\\"ngb-dp-weekday small\\\" role=\\\"columnheader\\\">\\n        {{ i18n.getWeekdayShortName(w) }}\\n      </div>\\n    </div>\\n    <ng-template ngFor let-week [ngForOf]=\\\"viewModel.weeks\\\">\\n      <div *ngIf=\\\"!week.collapsed\\\" class=\\\"ngb-dp-week\\\" role=\\\"row\\\">\\n        <div *ngIf=\\\"datepicker.showWeekNumbers\\\" class=\\\"ngb-dp-week-number small text-muted\\\">{{ i18n.getWeekNumerals(week.number) }}</div>\\n        <div *ngFor=\\\"let day of week.days\\\" (click)=\\\"doSelect(day); $event.preventDefault()\\\" class=\\\"ngb-dp-day\\\" role=\\\"gridcell\\\"\\n          [class.disabled]=\\\"day.context.disabled\\\"\\n          [tabindex]=\\\"day.tabindex\\\"\\n          [class.hidden]=\\\"day.hidden\\\"\\n          [class.ngb-dp-today]=\\\"day.context.today\\\"\\n          [attr.aria-label]=\\\"day.ariaLabel\\\">\\n          <ng-template [ngIf]=\\\"!day.hidden\\\">\\n            <ng-template [ngTemplateOutlet]=\\\"datepicker.dayTemplate\\\" [ngTemplateOutletContext]=\\\"day.context\\\"></ng-template>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \",\n                    styles: [\"ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgbDatepickerMonth.ctorParameters = function () { return [\n        { type: NgbDatepickerI18n },\n        { type: NgbDatepicker },\n        { type: NgbDatepickerKeyboardService },\n        { type: NgbDatepickerService }\n    ]; };\n    NgbDatepickerMonth.propDecorators = {\n        month: [{ type: Input }]\n    };\n    return NgbDatepickerMonth;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbDatepickerNavigation = /** @class */ (function () {\n    function NgbDatepickerNavigation(i18n) {\n        this.i18n = i18n;\n        this.navigation = NavigationEvent;\n        this.months = [];\n        this.navigate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NgbDatepickerNavigation.prototype.onClickPrev = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        ((/** @type {?} */ (event.currentTarget))).focus();\n        this.navigate.emit(this.navigation.PREV);\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NgbDatepickerNavigation.prototype.onClickNext = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        ((/** @type {?} */ (event.currentTarget))).focus();\n        this.navigate.emit(this.navigation.NEXT);\n    };\n    NgbDatepickerNavigation.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-datepicker-navigation',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"\\n    <div class=\\\"ngb-dp-arrow\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\" (click)=\\\"onClickPrev($event)\\\" [disabled]=\\\"prevDisabled\\\"\\n              i18n-aria-label=\\\"@@ngb.datepicker.previous-month\\\" aria-label=\\\"Previous month\\\"\\n              i18n-title=\\\"@@ngb.datepicker.previous-month\\\" title=\\\"Previous month\\\">\\n        <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n      </button>\\n    </div>\\n    <ngb-datepicker-navigation-select *ngIf=\\\"showSelect\\\" class=\\\"ngb-dp-navigation-select\\\"\\n      [date]=\\\"date\\\"\\n      [disabled] = \\\"disabled\\\"\\n      [months]=\\\"selectBoxes.months\\\"\\n      [years]=\\\"selectBoxes.years\\\"\\n      (select)=\\\"select.emit($event)\\\">\\n    </ngb-datepicker-navigation-select>\\n\\n    <ng-template *ngIf=\\\"!showSelect\\\" ngFor let-month [ngForOf]=\\\"months\\\" let-i=\\\"index\\\">\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i > 0\\\"></div>\\n      <div class=\\\"ngb-dp-month-name\\\">\\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\\n      </div>\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i !== months.length - 1\\\"></div>\\n    </ng-template>\\n    <div class=\\\"ngb-dp-arrow right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\" (click)=\\\"onClickNext($event)\\\" [disabled]=\\\"nextDisabled\\\"\\n              i18n-aria-label=\\\"@@ngb.datepicker.next-month\\\" aria-label=\\\"Next month\\\"\\n              i18n-title=\\\"@@ngb.datepicker.next-month\\\" title=\\\"Next month\\\">\\n        <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n      </button>\\n    </div>\\n    \",\n                    styles: [\"ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgbDatepickerNavigation.ctorParameters = function () { return [\n        { type: NgbDatepickerI18n }\n    ]; };\n    NgbDatepickerNavigation.propDecorators = {\n        date: [{ type: Input }],\n        disabled: [{ type: Input }],\n        months: [{ type: Input }],\n        showSelect: [{ type: Input }],\n        prevDisabled: [{ type: Input }],\n        nextDisabled: [{ type: Input }],\n        selectBoxes: [{ type: Input }],\n        navigate: [{ type: Output }],\n        select: [{ type: Output }]\n    };\n    return NgbDatepickerNavigation;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar isContainedIn = (/**\n * @param {?} element\n * @param {?=} array\n * @return {?}\n */\nfunction (element, array) {\n    return array ? array.some((/**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) { return item.contains(element); })) : false;\n});\n/** @type {?} */\nvar matchesSelectorIfAny = (/**\n * @param {?} element\n * @param {?=} selector\n * @return {?}\n */\nfunction (element, selector) {\n    return !selector || closest(element, selector) != null;\n});\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nvar ɵ2 = /**\n * @return {?}\n */\nfunction () {\n    /** @type {?} */\n    var isIOS = (/**\n     * @return {?}\n     */\n    function () { return /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n        (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2); });\n    /** @type {?} */\n    var isAndroid = (/**\n     * @return {?}\n     */\n    function () { return /Android/.test(navigator.userAgent); });\n    return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n};\n/** @type {?} */\nvar isMobile = ((ɵ2))();\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\n/** @type {?} */\nvar wrapAsyncForMobile = (/**\n * @param {?} fn\n * @return {?}\n */\nfunction (fn) { return isMobile ? (/**\n * @return {?}\n */\nfunction () { return setTimeout((/**\n * @return {?}\n */\nfunction () { return fn(); }), 100); }) : fn; });\n/**\n * @param {?} zone\n * @param {?} document\n * @param {?} type\n * @param {?} close\n * @param {?} closed$\n * @param {?} insideElements\n * @param {?=} ignoreElements\n * @param {?=} insideSelector\n * @return {?}\n */\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n    // closing on ESC and outside clicks\n    if (type) {\n        zone.runOutsideAngular(wrapAsyncForMobile((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var shouldCloseOnClick = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            function (event) {\n                /** @type {?} */\n                var element = (/** @type {?} */ (event.target));\n                if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n                    return false;\n                }\n                if (type === 'inside') {\n                    return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n                }\n                else if (type === 'outside') {\n                    return !isContainedIn(element, insideElements);\n                }\n                else /* if (type === true) */ {\n                    return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n                }\n            });\n            /** @type {?} */\n            var escapes$ = fromEvent(document, 'keydown')\n                .pipe(takeUntil(closed$), \n            // tslint:disable-next-line:deprecation\n            filter((/**\n             * @param {?} e\n             * @return {?}\n             */\n            function (e) { return e.which === Key.Escape; })), tap((/**\n             * @param {?} e\n             * @return {?}\n             */\n            function (e) { return e.preventDefault(); })));\n            // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n            // because on 'mouseup' DOM nodes might be detached\n            /** @type {?} */\n            var mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n            /** @type {?} */\n            var closeableClicks$ = (/** @type {?} */ (fromEvent(document, 'mouseup')\n                .pipe(withLatestFrom(mouseDowns$), filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            function (_a) {\n                var _b = __read(_a, 2), _ = _b[0], shouldClose = _b[1];\n                return shouldClose;\n            })), delay(0), takeUntil(closed$))));\n            race([escapes$, closeableClicks$]).subscribe((/**\n             * @return {?}\n             */\n            function () { return zone.run(close); }));\n        })));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar FOCUSABLE_ELEMENTS_SELECTOR = [\n    'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n    'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n * @param {?} element\n * @return {?}\n */\nfunction getFocusableBoundaryElements(element) {\n    /** @type {?} */\n    var list = Array.from((/** @type {?} */ (element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR))))\n        .filter((/**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return el.tabIndex !== -1; }));\n    return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * \\@param zone Angular zone\n * \\@param element The element around which focus will be trapped inside\n * \\@param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * \\@param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n * @type {?}\n */\nvar ngbFocusTrap = (/**\n * @param {?} zone\n * @param {?} element\n * @param {?} stopFocusTrap$\n * @param {?=} refocusOnClick\n * @return {?}\n */\nfunction (zone, element, stopFocusTrap$, refocusOnClick) {\n    if (refocusOnClick === void 0) { refocusOnClick = false; }\n    zone.runOutsideAngular((/**\n     * @return {?}\n     */\n    function () {\n        // last focused element\n        /** @type {?} */\n        var lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map((/**\n         * @param {?} e\n         * @return {?}\n         */\n        function (e) { return e.target; })));\n        // 'tab' / 'shift+tab' stream\n        fromEvent(element, 'keydown')\n            .pipe(takeUntil(stopFocusTrap$), \n        // tslint:disable:deprecation\n        filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        function (e) { return e.which === Key.Tab; })), \n        // tslint:enable:deprecation\n        withLatestFrom(lastFocusedElement$))\n            .subscribe((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var _b = __read(_a, 2), tabEvent = _b[0], focusedElement = _b[1];\n            var _c = __read(getFocusableBoundaryElements(element), 2), first = _c[0], last = _c[1];\n            if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n            }\n            if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n            }\n        }));\n        // inside click\n        if (refocusOnClick) {\n            fromEvent(element, 'click')\n                .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map((/**\n             * @param {?} arr\n             * @return {?}\n             */\n            function (arr) { return (/** @type {?} */ (arr[1])); })))\n                .subscribe((/**\n             * @param {?} lastFocusedElement\n             * @return {?}\n             */\n            function (lastFocusedElement) { return lastFocusedElement.focus(); }));\n        }\n    }));\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nvar \n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nPositioning = /** @class */ (function () {\n    function Positioning() {\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    Positioning.prototype.getAllStyles = /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { return window.getComputedStyle(element); };\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} prop\n     * @return {?}\n     */\n    Positioning.prototype.getStyle = /**\n     * @private\n     * @param {?} element\n     * @param {?} prop\n     * @return {?}\n     */\n    function (element, prop) { return this.getAllStyles(element)[prop]; };\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    Positioning.prototype.isStaticPositioned = /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    };\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    Positioning.prototype.offsetParent = /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var offsetParentEl = (/** @type {?} */ (element.offsetParent)) || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = (/** @type {?} */ (offsetParentEl.offsetParent));\n        }\n        return offsetParentEl || document.documentElement;\n    };\n    /**\n     * @param {?} element\n     * @param {?=} round\n     * @return {?}\n     */\n    Positioning.prototype.position = /**\n     * @param {?} element\n     * @param {?=} round\n     * @return {?}\n     */\n    function (element, round) {\n        if (round === void 0) { round = true; }\n        /** @type {?} */\n        var elPosition;\n        /** @type {?} */\n        var parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n            elPosition = {\n                top: elPosition.top,\n                bottom: elPosition.bottom,\n                left: elPosition.left,\n                right: elPosition.right,\n                height: elPosition.height,\n                width: elPosition.width\n            };\n        }\n        else {\n            /** @type {?} */\n            var offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    };\n    /**\n     * @param {?} element\n     * @param {?=} round\n     * @return {?}\n     */\n    Positioning.prototype.offset = /**\n     * @param {?} element\n     * @param {?=} round\n     * @return {?}\n     */\n    function (element, round) {\n        if (round === void 0) { round = true; }\n        /** @type {?} */\n        var elBcr = element.getBoundingClientRect();\n        /** @type {?} */\n        var viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        /** @type {?} */\n        var elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    };\n    /*\n      Return false if the element to position is outside the viewport\n    */\n    /*\n        Return false if the element to position is outside the viewport\n      */\n    /**\n     * @param {?} hostElement\n     * @param {?} targetElement\n     * @param {?} placement\n     * @param {?=} appendToBody\n     * @return {?}\n     */\n    Positioning.prototype.positionElements = /*\n        Return false if the element to position is outside the viewport\n      */\n    /**\n     * @param {?} hostElement\n     * @param {?} targetElement\n     * @param {?} placement\n     * @param {?=} appendToBody\n     * @return {?}\n     */\n    function (hostElement, targetElement, placement, appendToBody) {\n        var _a = __read(placement.split('-'), 2), _b = _a[0], placementPrimary = _b === void 0 ? 'top' : _b, _c = _a[1], placementSecondary = _c === void 0 ? 'center' : _c;\n        /** @type {?} */\n        var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        /** @type {?} */\n        var targetElStyles = this.getAllStyles(targetElement);\n        /** @type {?} */\n        var marginTop = parseFloat(targetElStyles.marginTop);\n        /** @type {?} */\n        var marginBottom = parseFloat(targetElStyles.marginBottom);\n        /** @type {?} */\n        var marginLeft = parseFloat(targetElStyles.marginLeft);\n        /** @type {?} */\n        var marginRight = parseFloat(targetElStyles.marginRight);\n        /** @type {?} */\n        var topPosition = 0;\n        /** @type {?} */\n        var leftPosition = 0;\n        switch (placementPrimary) {\n            case 'top':\n                topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n                break;\n            case 'bottom':\n                topPosition = (hostElPosition.top + hostElPosition.height);\n                break;\n            case 'left':\n                leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n                break;\n            case 'right':\n                leftPosition = (hostElPosition.left + hostElPosition.width);\n                break;\n        }\n        switch (placementSecondary) {\n            case 'top':\n                topPosition = hostElPosition.top;\n                break;\n            case 'bottom':\n                topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n                break;\n            case 'left':\n                leftPosition = hostElPosition.left;\n                break;\n            case 'right':\n                leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n                break;\n            case 'center':\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n                    leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n                }\n                else {\n                    topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n                }\n                break;\n        }\n        /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n        // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n        targetElement.style.transform = \"translate(\" + Math.round(leftPosition) + \"px, \" + Math.round(topPosition) + \"px)\";\n        // Check if the targetElement is inside the viewport\n        /** @type {?} */\n        var targetElBCR = targetElement.getBoundingClientRect();\n        /** @type {?} */\n        var html = document.documentElement;\n        /** @type {?} */\n        var windowHeight = window.innerHeight || html.clientHeight;\n        /** @type {?} */\n        var windowWidth = window.innerWidth || html.clientWidth;\n        return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n            targetElBCR.bottom <= windowHeight;\n    };\n    return Positioning;\n}());\n/** @type {?} */\nvar placementSeparator = /\\s+/;\n/** @type {?} */\nvar positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\n/**\n * @param {?} hostElement\n * @param {?} targetElement\n * @param {?} placement\n * @param {?=} appendToBody\n * @param {?=} baseClass\n * @return {?}\n */\nfunction positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {\n    var e_1, _a;\n    /** @type {?} */\n    var placementVals = Array.isArray(placement) ? placement : (/** @type {?} */ (placement.split(placementSeparator)));\n    /** @type {?} */\n    var allowedPlacements = [\n        'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n        'right-top', 'right-bottom'\n    ];\n    /** @type {?} */\n    var classList = targetElement.classList;\n    /** @type {?} */\n    var addClassesToTarget = (/**\n     * @param {?} targetPlacement\n     * @return {?}\n     */\n    function (targetPlacement) {\n        var _a = __read(targetPlacement.split('-'), 2), primary = _a[0], secondary = _a[1];\n        /** @type {?} */\n        var classes = [];\n        if (baseClass) {\n            classes.push(baseClass + \"-\" + primary);\n            if (secondary) {\n                classes.push(baseClass + \"-\" + primary + \"-\" + secondary);\n            }\n            classes.forEach((/**\n             * @param {?} classname\n             * @return {?}\n             */\n            function (classname) { classList.add(classname); }));\n        }\n        return classes;\n    });\n    // Remove old placement classes to avoid issues\n    if (baseClass) {\n        allowedPlacements.forEach((/**\n         * @param {?} placementToRemove\n         * @return {?}\n         */\n        function (placementToRemove) { classList.remove(baseClass + \"-\" + placementToRemove); }));\n    }\n    // replace auto placement with other placements\n    /** @type {?} */\n    var hasAuto = placementVals.findIndex((/**\n     * @param {?} val\n     * @return {?}\n     */\n    function (val) { return val === 'auto'; }));\n    if (hasAuto >= 0) {\n        allowedPlacements.forEach((/**\n         * @param {?} obj\n         * @return {?}\n         */\n        function (obj) {\n            if (placementVals.find((/**\n             * @param {?} val\n             * @return {?}\n             */\n            function (val) { return val.search('^' + obj) !== -1; })) == null) {\n                placementVals.splice(hasAuto++, 1, (/** @type {?} */ (obj)));\n            }\n        }));\n    }\n    // coordinates where to position\n    // Required for transform:\n    /** @type {?} */\n    var style = targetElement.style;\n    style.position = 'absolute';\n    style.top = '0';\n    style.left = '0';\n    style['will-change'] = 'transform';\n    /** @type {?} */\n    var testPlacement;\n    /** @type {?} */\n    var isInViewport = false;\n    try {\n        for (var placementVals_1 = __values(placementVals), placementVals_1_1 = placementVals_1.next(); !placementVals_1_1.done; placementVals_1_1 = placementVals_1.next()) {\n            testPlacement = placementVals_1_1.value;\n            /** @type {?} */\n            var addedClasses = addClassesToTarget(testPlacement);\n            if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n                isInViewport = true;\n                break;\n            }\n            // Remove the baseClasses for further calculation\n            if (baseClass) {\n                addedClasses.forEach((/**\n                 * @param {?} classname\n                 * @return {?}\n                 */\n                function (classname) { classList.remove(classname); }));\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (placementVals_1_1 && !placementVals_1_1.done && (_a = placementVals_1.return)) _a.call(placementVals_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    if (!isInViewport) {\n        // If nothing match, the first placement is the default one\n        testPlacement = placementVals[0];\n        addClassesToTarget(testPlacement);\n        positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n    }\n    return testPlacement;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n    return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n * @abstract\n */\nvar NgbDateParserFormatter = /** @class */ (function () {\n    function NgbDateParserFormatter() {\n    }\n    NgbDateParserFormatter.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY },] }\n    ];\n    /** @nocollapse */ NgbDateParserFormatter.ngInjectableDef = ɵɵdefineInjectable({ factory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY, token: NgbDateParserFormatter, providedIn: \"root\" });\n    return NgbDateParserFormatter;\n}());\nvar NgbDateISOParserFormatter = /** @class */ (function (_super) {\n    __extends(NgbDateISOParserFormatter, _super);\n    function NgbDateISOParserFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbDateISOParserFormatter.prototype.parse = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (value) {\n            /** @type {?} */\n            var dateParts = value.trim().split('-');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return { year: toInteger(dateParts[0]), month: null, day: null };\n            }\n            else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null };\n            }\n            else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2]) };\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDateISOParserFormatter.prototype.format = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date ?\n            date.year + \"-\" + (isNumber(date.month) ? padNumber(date.month) : '') + \"-\" + (isNumber(date.day) ? padNumber(date.day) : '') :\n            '';\n    };\n    NgbDateISOParserFormatter.decorators = [\n        { type: Injectable }\n    ];\n    return NgbDateISOParserFormatter;\n}(NgbDateParserFormatter));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * \\@since 5.2.0\n */\nvar NgbInputDatepickerConfig = /** @class */ (function (_super) {\n    __extends(NgbInputDatepickerConfig, _super);\n    function NgbInputDatepickerConfig() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.autoClose = true;\n        _this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n        _this.restoreFocus = true;\n        return _this;\n    }\n    NgbInputDatepickerConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbInputDatepickerConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbInputDatepickerConfig_Factory() { return new NgbInputDatepickerConfig(); }, token: NgbInputDatepickerConfig, providedIn: \"root\" });\n    return NgbInputDatepickerConfig;\n}(NgbDatepickerConfig));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_DATEPICKER_VALUE_ACCESSOR$1 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return NgbInputDatepicker; })),\n    multi: true\n};\n/** @type {?} */\nvar NGB_DATEPICKER_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return NgbInputDatepicker; })),\n    multi: true\n};\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\nvar NgbInputDatepicker = /** @class */ (function () {\n    function NgbInputDatepicker(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, _ngZone, _calendar, _dateAdapter, _document, _changeDetector, config) {\n        var _this = this;\n        this._parserFormatter = _parserFormatter;\n        this._elRef = _elRef;\n        this._vcRef = _vcRef;\n        this._renderer = _renderer;\n        this._cfr = _cfr;\n        this._ngZone = _ngZone;\n        this._calendar = _calendar;\n        this._dateAdapter = _dateAdapter;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        this._cRef = null;\n        this._disabled = false;\n        this._elWithFocus = null;\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * \\@since 1.1.1\n         */\n        this.dateSelect = new EventEmitter();\n        /**\n         * Event emitted right after the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event fired after closing datepicker window.\n         *\n         * \\@since 4.2.0\n         */\n        this.closed = new EventEmitter();\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        function () { });\n        this._validatorChange = (/**\n         * @return {?}\n         */\n        function () { });\n        ['autoClose', 'container', 'positionTarget', 'placement'].forEach((/**\n         * @param {?} input\n         * @return {?}\n         */\n        function (input) { return _this[input] = config[input]; }));\n        this._zoneSubscription = _ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        function () { return _this._updatePopupPosition(); }));\n    }\n    Object.defineProperty(NgbInputDatepicker.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = value === '' || (value && value !== 'false');\n            if (this.isOpen()) {\n                this._cRef.instance.setDisabledState(this._disabled);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onTouched = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._validatorChange = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) { this.disabled = isDisabled; };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        /** @type {?} */\n        var value = c.value;\n        if (value === null || value === undefined) {\n            return null;\n        }\n        /** @type {?} */\n        var ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        if (!this._calendar.isValid(ngbDate)) {\n            return { 'ngbDate': { invalid: c.value } };\n        }\n        if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n            return { 'ngbDate': { requiredBefore: this.minDate } };\n        }\n        if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n            return { 'ngbDate': { requiredAfter: this.maxDate } };\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        this._writeModelValue(this._model);\n    };\n    /**\n     * @param {?} value\n     * @param {?=} updateView\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.manualDateChange = /**\n     * @param {?} value\n     * @param {?=} updateView\n     * @return {?}\n     */\n    function (value, updateView) {\n        if (updateView === void 0) { updateView = false; }\n        /** @type {?} */\n        var inputValueChanged = value !== this._inputValue;\n        if (inputValueChanged) {\n            this._inputValue = value;\n            this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n        }\n        if (inputValueChanged || !updateView) {\n            this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n        }\n        if (updateView && this._model) {\n            this._writeModelValue(this._model);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.isOpen = /**\n     * @return {?}\n     */\n    function () { return !!this._cRef; };\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     */\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.open = /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.isOpen()) {\n            /** @type {?} */\n            var cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n            this._cRef = this._vcRef.createComponent(cf);\n            this._applyPopupStyling(this._cRef.location.nativeElement);\n            this._applyDatepickerInputs(this._cRef.instance);\n            this._subscribeForDatepickerOutputs(this._cRef.instance);\n            this._cRef.instance.ngOnInit();\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n            // date selection event handling\n            this._cRef.instance.registerOnChange((/**\n             * @param {?} selectedDate\n             * @return {?}\n             */\n            function (selectedDate) {\n                _this.writeValue(selectedDate);\n                _this._onChange(selectedDate);\n                _this._onTouched();\n            }));\n            this._cRef.changeDetectorRef.detectChanges();\n            this._cRef.instance.setDisabledState(this.disabled);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n            }\n            // focus handling\n            this._elWithFocus = this._document.activeElement;\n            ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n            this._cRef.instance.focus();\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, (/**\n             * @return {?}\n             */\n            function () { return _this.close(); }), this.closed, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n        }\n    };\n    /**\n     * Closes the datepicker popup.\n     */\n    /**\n     * Closes the datepicker popup.\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.close = /**\n     * Closes the datepicker popup.\n     * @return {?}\n     */\n    function () {\n        if (this.isOpen()) {\n            this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n            this._cRef = null;\n            this.closed.emit();\n            this._changeDetector.markForCheck();\n            // restore focus\n            /** @type {?} */\n            var elementToFocus = this._elWithFocus;\n            if (isString(this.restoreFocus)) {\n                elementToFocus = this._document.querySelector(this.restoreFocus);\n            }\n            else if (this.restoreFocus !== undefined) {\n                elementToFocus = this.restoreFocus;\n            }\n            // in IE document.activeElement can contain an object without 'focus()' sometimes\n            if (elementToFocus && elementToFocus['focus']) {\n                elementToFocus.focus();\n            }\n            else {\n                this._document.body.focus();\n            }\n        }\n    };\n    /**\n     * Toggles the datepicker popup.\n     */\n    /**\n     * Toggles the datepicker popup.\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.toggle = /**\n     * Toggles the datepicker popup.\n     * @return {?}\n     */\n    function () {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     * @param {?=} date\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.navigateTo = /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     * @param {?=} date\n     * @return {?}\n     */\n    function (date) {\n        if (this.isOpen()) {\n            this._cRef.instance.navigateTo(date);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.onBlur = /**\n     * @return {?}\n     */\n    function () { this._onTouched(); };\n    /**\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.onFocus = /**\n     * @return {?}\n     */\n    function () { this._elWithFocus = this._elRef.nativeElement; };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['minDate'] || changes['maxDate']) {\n            this._validatorChange();\n            if (this.isOpen()) {\n                if (changes['minDate']) {\n                    this._cRef.instance.minDate = this.minDate;\n                }\n                if (changes['maxDate']) {\n                    this._cRef.instance.maxDate = this.maxDate;\n                }\n                this._cRef.instance.ngOnChanges(changes);\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.close();\n        this._zoneSubscription.unsubscribe();\n    };\n    /**\n     * @private\n     * @param {?} datepickerInstance\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype._applyDatepickerInputs = /**\n     * @private\n     * @param {?} datepickerInstance\n     * @return {?}\n     */\n    function (datepickerInstance) {\n        var _this = this;\n        ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n            'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n            .forEach((/**\n         * @param {?} optionName\n         * @return {?}\n         */\n        function (optionName) {\n            if (_this[optionName] !== undefined) {\n                datepickerInstance[optionName] = _this[optionName];\n            }\n        }));\n        datepickerInstance.startDate = this.startDate || this._model;\n    };\n    /**\n     * @private\n     * @param {?} nativeElement\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype._applyPopupStyling = /**\n     * @private\n     * @param {?} nativeElement\n     * @return {?}\n     */\n    function (nativeElement) {\n        this._renderer.addClass(nativeElement, 'dropdown-menu');\n        this._renderer.addClass(nativeElement, 'show');\n        if (this.container === 'body') {\n            this._renderer.addClass(nativeElement, 'ngb-dp-body');\n        }\n    };\n    /**\n     * @private\n     * @param {?} datepickerInstance\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype._subscribeForDatepickerOutputs = /**\n     * @private\n     * @param {?} datepickerInstance\n     * @return {?}\n     */\n    function (datepickerInstance) {\n        var _this = this;\n        datepickerInstance.navigate.subscribe((/**\n         * @param {?} navigateEvent\n         * @return {?}\n         */\n        function (navigateEvent) { return _this.navigate.emit(navigateEvent); }));\n        datepickerInstance.dateSelect.subscribe((/**\n         * @param {?} date\n         * @return {?}\n         */\n        function (date) {\n            _this.dateSelect.emit(date);\n            if (_this.autoClose === true || _this.autoClose === 'inside') {\n                _this.close();\n            }\n        }));\n    };\n    /**\n     * @private\n     * @param {?} model\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype._writeModelValue = /**\n     * @private\n     * @param {?} model\n     * @return {?}\n     */\n    function (model) {\n        /** @type {?} */\n        var value = this._parserFormatter.format(model);\n        this._inputValue = value;\n        this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n        if (this.isOpen()) {\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n            this._onTouched();\n        }\n    };\n    /**\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype._fromDateStruct = /**\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n        return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbInputDatepicker.prototype._updatePopupPosition = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this._cRef) {\n            return;\n        }\n        /** @type {?} */\n        var hostElement;\n        if (isString(this.positionTarget)) {\n            hostElement = this._document.querySelector(this.positionTarget);\n        }\n        else if (this.positionTarget instanceof HTMLElement) {\n            hostElement = this.positionTarget;\n        }\n        else {\n            hostElement = this._elRef.nativeElement;\n        }\n        if (this.positionTarget && !hostElement) {\n            throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n        }\n        positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n    };\n    NgbInputDatepicker.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[ngbDatepicker]',\n                    exportAs: 'ngbDatepicker',\n                    host: {\n                        '(input)': 'manualDateChange($event.target.value)',\n                        '(change)': 'manualDateChange($event.target.value, true)',\n                        '(focus)': 'onFocus()',\n                        '(blur)': 'onBlur()',\n                        '[disabled]': 'disabled'\n                    },\n                    providers: [\n                        NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR,\n                        { provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig }\n                    ],\n                },] }\n    ];\n    /** @nocollapse */\n    NgbInputDatepicker.ctorParameters = function () { return [\n        { type: NgbDateParserFormatter },\n        { type: ElementRef },\n        { type: ViewContainerRef },\n        { type: Renderer2 },\n        { type: ComponentFactoryResolver },\n        { type: NgZone },\n        { type: NgbCalendar },\n        { type: NgbDateAdapter },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: ChangeDetectorRef },\n        { type: NgbInputDatepickerConfig }\n    ]; };\n    NgbInputDatepicker.propDecorators = {\n        autoClose: [{ type: Input }],\n        dayTemplate: [{ type: Input }],\n        dayTemplateData: [{ type: Input }],\n        displayMonths: [{ type: Input }],\n        firstDayOfWeek: [{ type: Input }],\n        footerTemplate: [{ type: Input }],\n        markDisabled: [{ type: Input }],\n        minDate: [{ type: Input }],\n        maxDate: [{ type: Input }],\n        navigation: [{ type: Input }],\n        outsideDays: [{ type: Input }],\n        placement: [{ type: Input }],\n        restoreFocus: [{ type: Input }],\n        showWeekdays: [{ type: Input }],\n        showWeekNumbers: [{ type: Input }],\n        startDate: [{ type: Input }],\n        container: [{ type: Input }],\n        positionTarget: [{ type: Input }],\n        dateSelect: [{ type: Output }],\n        navigate: [{ type: Output }],\n        closed: [{ type: Output }],\n        disabled: [{ type: Input }]\n    };\n    return NgbInputDatepicker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbDatepickerDayView = /** @class */ (function () {\n    function NgbDatepickerDayView(i18n) {\n        this.i18n = i18n;\n    }\n    /**\n     * @return {?}\n     */\n    NgbDatepickerDayView.prototype.isMuted = /**\n     * @return {?}\n     */\n    function () { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); };\n    NgbDatepickerDayView.decorators = [\n        { type: Component, args: [{\n                    selector: '[ngbDatepickerDayView]',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'btn-light',\n                        '[class.bg-primary]': 'selected',\n                        '[class.text-white]': 'selected',\n                        '[class.text-muted]': 'isMuted()',\n                        '[class.outside]': 'isMuted()',\n                        '[class.active]': 'focused'\n                    },\n                    template: \"{{ i18n.getDayNumerals(date) }}\",\n                    styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgbDatepickerDayView.ctorParameters = function () { return [\n        { type: NgbDatepickerI18n }\n    ]; };\n    NgbDatepickerDayView.propDecorators = {\n        currentMonth: [{ type: Input }],\n        date: [{ type: Input }],\n        disabled: [{ type: Input }],\n        focused: [{ type: Input }],\n        selected: [{ type: Input }]\n    };\n    return NgbDatepickerDayView;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbDatepickerNavigationSelect = /** @class */ (function () {\n    function NgbDatepickerNavigationSelect(i18n, _renderer) {\n        this.i18n = i18n;\n        this._renderer = _renderer;\n        this.select = new EventEmitter();\n        this._month = -1;\n        this._year = -1;\n    }\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    NgbDatepickerNavigationSelect.prototype.changeMonth = /**\n     * @param {?} month\n     * @return {?}\n     */\n    function (month) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); };\n    /**\n     * @param {?} year\n     * @return {?}\n     */\n    NgbDatepickerNavigationSelect.prototype.changeYear = /**\n     * @param {?} year\n     * @return {?}\n     */\n    function (year) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); };\n    /**\n     * @return {?}\n     */\n    NgbDatepickerNavigationSelect.prototype.ngAfterViewChecked = /**\n     * @return {?}\n     */\n    function () {\n        if (this.date) {\n            if (this.date.month !== this._month) {\n                this._month = this.date.month;\n                this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n            }\n            if (this.date.year !== this._year) {\n                this._year = this.date.year;\n                this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n            }\n        }\n    };\n    NgbDatepickerNavigationSelect.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-datepicker-navigation-select',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"\\n    <select #month\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      i18n-aria-label=\\\"@@ngb.datepicker.select-month\\\" aria-label=\\\"Select month\\\"\\n      i18n-title=\\\"@@ngb.datepicker.select-month\\\" title=\\\"Select month\\\"\\n      (change)=\\\"changeMonth($event.target.value)\\\">\\n        <option *ngFor=\\\"let m of months\\\" [attr.aria-label]=\\\"i18n.getMonthFullName(m, date?.year)\\\"\\n                [value]=\\\"m\\\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\\n    </select><select #year\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      i18n-aria-label=\\\"@@ngb.datepicker.select-year\\\" aria-label=\\\"Select year\\\"\\n      i18n-title=\\\"@@ngb.datepicker.select-year\\\" title=\\\"Select year\\\"\\n      (change)=\\\"changeYear($event.target.value)\\\">\\n        <option *ngFor=\\\"let y of years\\\" [value]=\\\"y\\\">{{ i18n.getYearNumerals(y) }}</option>\\n    </select>\\n  \",\n                    styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgbDatepickerNavigationSelect.ctorParameters = function () { return [\n        { type: NgbDatepickerI18n },\n        { type: Renderer2 }\n    ]; };\n    NgbDatepickerNavigationSelect.propDecorators = {\n        date: [{ type: Input }],\n        disabled: [{ type: Input }],\n        months: [{ type: Input }],\n        years: [{ type: Input }],\n        select: [{ type: Output }],\n        monthSelect: [{ type: ViewChild, args: ['month', { static: true, read: ElementRef },] }],\n        yearSelect: [{ type: ViewChild, args: ['year', { static: true, read: ElementRef },] }]\n    };\n    return NgbDatepickerNavigationSelect;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nvar NgbCalendarHijri = /** @class */ (function (_super) {\n    __extends(NgbCalendarHijri, _super);\n    function NgbCalendarHijri() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype.getDaysPerWeek = /**\n     * @return {?}\n     */\n    function () { return 7; };\n    /**\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype.getMonths = /**\n     * @return {?}\n     */\n    function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; };\n    /**\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype.getWeeksPerMonth = /**\n     * @return {?}\n     */\n    function () { return 6; };\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype.getNext = /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = this._setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this._setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this._setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    };\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype.getPrev = /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype.getWeekday = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype.getWeekNumber = /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    function (week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        /** @type {?} */\n        var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        /** @type {?} */\n        var date = week[thursdayIndex];\n        /** @type {?} */\n        var jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        // Thursday\n        /** @type {?} */\n        var time = jsDate.getTime();\n        /** @type {?} */\n        var MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    };\n    /**\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype.getToday = /**\n     * @return {?}\n     */\n    function () { return this.fromGregorian(new Date()); };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype.isValid = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n            !isNaN(this.toGregorian(date).getTime());\n    };\n    /**\n     * @private\n     * @param {?} date\n     * @param {?} day\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype._setDay = /**\n     * @private\n     * @param {?} date\n     * @param {?} day\n     * @return {?}\n     */\n    function (date, day) {\n        day = +day;\n        /** @type {?} */\n        var mDays = this.getDaysPerMonth(date.month, date.year);\n        if (day <= 0) {\n            while (day <= 0) {\n                date = this._setMonth(date, date.month - 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n                day += mDays;\n            }\n        }\n        else if (day > mDays) {\n            while (day > mDays) {\n                day -= mDays;\n                date = this._setMonth(date, date.month + 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n            }\n        }\n        date.day = day;\n        return date;\n    };\n    /**\n     * @private\n     * @param {?} date\n     * @param {?} month\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype._setMonth = /**\n     * @private\n     * @param {?} date\n     * @param {?} month\n     * @return {?}\n     */\n    function (date, month) {\n        month = +month;\n        date.year = date.year + Math.floor((month - 1) / 12);\n        date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n        return date;\n    };\n    /**\n     * @private\n     * @param {?} date\n     * @param {?} year\n     * @return {?}\n     */\n    NgbCalendarHijri.prototype._setYear = /**\n     * @private\n     * @param {?} date\n     * @param {?} year\n     * @return {?}\n     */\n    function (date, year) {\n        date.year = +year;\n        return date;\n    };\n    NgbCalendarHijri.decorators = [\n        { type: Injectable }\n    ];\n    return NgbCalendarHijri;\n}(NgbCalendar));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if islamic year is a leap year\n * @param {?} hYear\n * @return {?}\n */\nfunction isIslamicLeapYear(hYear) {\n    return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n * @param {?} gDate\n * @return {?}\n */\nfunction isGregorianLeapYear(gDate) {\n    /** @type {?} */\n    var year = gDate.getFullYear();\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n * @param {?} hYear\n * @param {?} hMonth\n * @return {?}\n */\nfunction getIslamicMonthStart(hYear, hMonth) {\n    return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n * @param {?} year\n * @return {?}\n */\nfunction getIslamicYearStart(year) {\n    return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction mod(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n * @type {?}\n */\nvar GREGORIAN_EPOCH = 1721425.5;\n/** @type {?} */\nvar ISLAMIC_EPOCH = 1948439.5;\nvar NgbCalendarIslamicCivil = /** @class */ (function (_super) {\n    __extends(NgbCalendarIslamicCivil, _super);\n    function NgbCalendarIslamicCivil() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     */\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     * @param {?} gDate\n     * @return {?}\n     */\n    NgbCalendarIslamicCivil.prototype.fromGregorian = /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     * @param {?} gDate\n     * @return {?}\n     */\n    function (gDate) {\n        /** @type {?} */\n        var gYear = gDate.getFullYear();\n        /** @type {?} */\n        var gMonth = gDate.getMonth();\n        /** @type {?} */\n        var gDay = gDate.getDate();\n        /** @type {?} */\n        var julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n            -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n            Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n        julianDay = Math.floor(julianDay) + 0.5;\n        /** @type {?} */\n        var days = julianDay - ISLAMIC_EPOCH;\n        /** @type {?} */\n        var hYear = Math.floor((30 * days + 10646) / 10631.0);\n        /** @type {?} */\n        var hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n        hMonth = Math.min(hMonth, 11);\n        /** @type {?} */\n        var hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n        return new NgbDate(hYear, hMonth + 1, hDay);\n    };\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     */\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     * @param {?} hDate\n     * @return {?}\n     */\n    NgbCalendarIslamicCivil.prototype.toGregorian = /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     * @param {?} hDate\n     * @return {?}\n     */\n    function (hDate) {\n        /** @type {?} */\n        var hYear = hDate.year;\n        /** @type {?} */\n        var hMonth = hDate.month - 1;\n        /** @type {?} */\n        var hDay = hDate.day;\n        /** @type {?} */\n        var julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n        /** @type {?} */\n        var wjd = Math.floor(julianDay - 0.5) + 0.5;\n        /** @type {?} */\n        var depoch = wjd - GREGORIAN_EPOCH;\n        /** @type {?} */\n        var quadricent = Math.floor(depoch / 146097);\n        /** @type {?} */\n        var dqc = mod(depoch, 146097);\n        /** @type {?} */\n        var cent = Math.floor(dqc / 36524);\n        /** @type {?} */\n        var dcent = mod(dqc, 36524);\n        /** @type {?} */\n        var quad = Math.floor(dcent / 1461);\n        /** @type {?} */\n        var dquad = mod(dcent, 1461);\n        /** @type {?} */\n        var yindex = Math.floor(dquad / 365);\n        /** @type {?} */\n        var year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n        if (!(cent === 4 || yindex === 4)) {\n            year++;\n        }\n        /** @type {?} */\n        var gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400);\n        /** @type {?} */\n        var yearday = wjd - gYearStart;\n        /** @type {?} */\n        var tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n        /** @type {?} */\n        var leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n        /** @type {?} */\n        var month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n        /** @type {?} */\n        var tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n                1);\n        /** @type {?} */\n        var day = wjd - tjd2 + 1;\n        return new Date(year, month - 1, day);\n    };\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     * @param {?} month\n     * @param {?} year\n     * @return {?}\n     */\n    NgbCalendarIslamicCivil.prototype.getDaysPerMonth = /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     * @param {?} month\n     * @param {?} year\n     * @return {?}\n     */\n    function (month, year) {\n        year = year + Math.floor(month / 13);\n        month = ((month - 1) % 12) + 1;\n        /** @type {?} */\n        var length = 29 + month % 2;\n        if (month === 12 && isIslamicLeapYear(year)) {\n            length++;\n        }\n        return length;\n    };\n    NgbCalendarIslamicCivil.decorators = [\n        { type: Injectable }\n    ];\n    return NgbCalendarIslamicCivil;\n}(NgbCalendarHijri));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * @type {?}\n */\nvar GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\n/** @type {?} */\nvar GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\n/** @type {?} */\nvar HIJRI_BEGIN = 1300;\n/** @type {?} */\nvar HIJRI_END = 1600;\n/** @type {?} */\nvar ONE_DAY = 1000 * 60 * 60 * 24;\n/** @type {?} */\nvar MONTH_LENGTH = [\n    // 1300-1304\n    '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n    // 1305-1309\n    '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n    // 1310-1314\n    '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n    // 1315-1319\n    '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n    // 1320-1324\n    '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n    // 1325-1329\n    '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n    // 1330-1334\n    '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n    // 1335-1339\n    '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n    // 1340-1344\n    '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n    // 1345-1349\n    '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n    // 1350-1354\n    '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n    // 1355-1359\n    '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n    // 1360-1364\n    '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n    // 1365-1369\n    '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n    // 1370-1374\n    '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n    // 1375-1379\n    '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n    // 1380-1384\n    '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n    // 1385-1389\n    '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n    // 1390-1394\n    '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n    // 1395-1399\n    '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n    // 1400-1404\n    '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n    // 1405-1409\n    '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n    // 1410-1414\n    '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n    // 1415-1419\n    '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n    // 1420-1424\n    '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n    // 1425-1429\n    '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n    // 1430-1434\n    '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n    // 1435-1439\n    '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n    // 1440-1444\n    '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n    // 1445-1449\n    '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n    // 1450-1454\n    '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n    // 1455-1459\n    '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n    // 1460-1464\n    '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n    // 1465-1469\n    '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n    // 1470-1474\n    '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n    // 1475-1479\n    '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n    // 1480-1484\n    '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n    // 1485-1489\n    '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n    // 1490-1494\n    '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n    // 1495-1499\n    '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n    // 1500-1504\n    '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n    // 1505-1509\n    '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n    // 1510-1514\n    '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n    // 1515-1519\n    '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n    // 1520-1524\n    '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n    // 1525-1529\n    '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n    // 1530-1534\n    '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n    // 1535-1539\n    '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n    // 1540-1544\n    '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n    // 1545-1549\n    '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n    // 1550-1554\n    '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n    // 1555-1559\n    '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n    // 1560-1564\n    '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n    // 1565-1569\n    '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n    // 1570-1574\n    '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n    // 1575-1579\n    '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n    // 1580-1584\n    '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n    // 1585-1589\n    '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n    // 1590-1594\n    '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n    // 1595-1599\n    '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n    // 1600\n    '001010011101'\n];\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nfunction getDaysDiff(date1, date2) {\n    // Ignores the time part in date1 and date2:\n    /** @type {?} */\n    var time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    /** @type {?} */\n    var time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    /** @type {?} */\n    var diff = Math.abs(time1 - time2);\n    return Math.round(diff / ONE_DAY);\n}\nvar NgbCalendarIslamicUmalqura = /** @class */ (function (_super) {\n    __extends(NgbCalendarIslamicUmalqura, _super);\n    function NgbCalendarIslamicUmalqura() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n    * `gdate` is s JS Date to be converted to Hijri.\n    */\n    /**\n     * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n     * `gdate` is s JS Date to be converted to Hijri.\n     * @param {?} gDate\n     * @return {?}\n     */\n    NgbCalendarIslamicUmalqura.prototype.fromGregorian = /**\n     * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n     * `gdate` is s JS Date to be converted to Hijri.\n     * @param {?} gDate\n     * @return {?}\n     */\n    function (gDate) {\n        /** @type {?} */\n        var hDay = 1;\n        /** @type {?} */\n        var hMonth = 0;\n        /** @type {?} */\n        var hYear = 1300;\n        /** @type {?} */\n        var daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n        if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n            /** @type {?} */\n            var year = 1300;\n            for (var i = 0; i < MONTH_LENGTH.length; i++, year++) {\n                for (var j = 0; j < 12; j++) {\n                    /** @type {?} */\n                    var numOfDays = +MONTH_LENGTH[i][j] + 29;\n                    if (daysDiff <= numOfDays) {\n                        hDay = daysDiff + 1;\n                        if (hDay > numOfDays) {\n                            hDay = 1;\n                            j++;\n                        }\n                        if (j > 11) {\n                            j = 0;\n                            year++;\n                        }\n                        hMonth = j;\n                        hYear = year;\n                        return new NgbDate(hYear, hMonth + 1, hDay);\n                    }\n                    daysDiff = daysDiff - numOfDays;\n                }\n            }\n        }\n        else {\n            return _super.prototype.fromGregorian.call(this, gDate);\n        }\n    };\n    /**\n    * Converts the current Hijri date to Gregorian.\n    */\n    /**\n     * Converts the current Hijri date to Gregorian.\n     * @param {?} hDate\n     * @return {?}\n     */\n    NgbCalendarIslamicUmalqura.prototype.toGregorian = /**\n     * Converts the current Hijri date to Gregorian.\n     * @param {?} hDate\n     * @return {?}\n     */\n    function (hDate) {\n        /** @type {?} */\n        var hYear = hDate.year;\n        /** @type {?} */\n        var hMonth = hDate.month - 1;\n        /** @type {?} */\n        var hDay = hDate.day;\n        /** @type {?} */\n        var gDate = new Date(GREGORIAN_FIRST_DATE);\n        /** @type {?} */\n        var dayDiff = hDay - 1;\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            for (var y = 0; y < hYear - HIJRI_BEGIN; y++) {\n                for (var m = 0; m < 12; m++) {\n                    dayDiff += +MONTH_LENGTH[y][m] + 29;\n                }\n            }\n            for (var m = 0; m < hMonth; m++) {\n                dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n            }\n            gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n        }\n        else {\n            gDate = _super.prototype.toGregorian.call(this, hDate);\n        }\n        return gDate;\n    };\n    /**\n    * Returns the number of days in a specific Hijri hMonth.\n    * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n    * `hYear` is any Hijri hYear.\n    */\n    /**\n     * Returns the number of days in a specific Hijri hMonth.\n     * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n     * `hYear` is any Hijri hYear.\n     * @param {?} hMonth\n     * @param {?} hYear\n     * @return {?}\n     */\n    NgbCalendarIslamicUmalqura.prototype.getDaysPerMonth = /**\n     * Returns the number of days in a specific Hijri hMonth.\n     * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n     * `hYear` is any Hijri hYear.\n     * @param {?} hMonth\n     * @param {?} hYear\n     * @return {?}\n     */\n    function (hMonth, hYear) {\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            /** @type {?} */\n            var pos = hYear - HIJRI_BEGIN;\n            return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n        }\n        return _super.prototype.getDaysPerMonth.call(this, hMonth, hYear);\n    };\n    NgbCalendarIslamicUmalqura.decorators = [\n        { type: Injectable }\n    ];\n    return NgbCalendarIslamicUmalqura;\n}(NgbCalendarIslamicCivil));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n * @param {?} jalaliDate\n * @return {?}\n */\nfunction toGregorian(jalaliDate) {\n    /** @type {?} */\n    var jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n    /** @type {?} */\n    var date = julianToGregorian(jdn);\n    date.setHours(6, 30, 3, 200);\n    return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n * @param {?} gdate\n * @return {?}\n */\nfunction fromGregorian(gdate) {\n    /** @type {?} */\n    var g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n    return julianToJalali(g2d);\n}\n/**\n * @param {?} date\n * @param {?} yearValue\n * @return {?}\n */\nfunction setJalaliYear(date, yearValue) {\n    date.year = +yearValue;\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} month\n * @return {?}\n */\nfunction setJalaliMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} day\n * @return {?}\n */\nfunction setJalaliDay(date, day) {\n    /** @type {?} */\n    var mDays = getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n        while (day <= 0) {\n            date = setJalaliMonth(date, date.month - 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n            day += mDays;\n        }\n    }\n    else if (day > mDays) {\n        while (day > mDays) {\n            day -= mDays;\n            date = setJalaliMonth(date, date.month + 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n        }\n    }\n    date.day = day;\n    return date;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction mod$1(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction div(a, b) {\n    return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\n/**\n * @param {?} jalaliYear\n * @return {?}\n */\nfunction jalCal(jalaliYear) {\n    // Jalali years starting the 33-year rule.\n    /** @type {?} */\n    var breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n    /** @type {?} */\n    var breaksLength = breaks.length;\n    /** @type {?} */\n    var gYear = jalaliYear + 621;\n    /** @type {?} */\n    var leapJ = -14;\n    /** @type {?} */\n    var jp = breaks[0];\n    if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n        throw new Error('Invalid Jalali year ' + jalaliYear);\n    }\n    // Find the limiting years for the Jalali year jalaliYear.\n    /** @type {?} */\n    var jump;\n    for (var i = 1; i < breaksLength; i += 1) {\n        /** @type {?} */\n        var jm = breaks[i];\n        jump = jm - jp;\n        if (jalaliYear < jm) {\n            break;\n        }\n        leapJ = leapJ + div(jump, 33) * 8 + div(mod$1(jump, 33), 4);\n        jp = jm;\n    }\n    /** @type {?} */\n    var n = jalaliYear - jp;\n    // Find the number of leap years from AD 621 to the beginning\n    // of the current Jalali year in the Persian calendar.\n    leapJ = leapJ + div(n, 33) * 8 + div(mod$1(n, 33) + 3, 4);\n    if (mod$1(jump, 33) === 4 && jump - n === 4) {\n        leapJ += 1;\n    }\n    // And the same in the Gregorian calendar (until the year gYear).\n    /** @type {?} */\n    var leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n    // Determine the Gregorian date of Farvardin the 1st.\n    /** @type {?} */\n    var march = 20 + leapJ - leapG;\n    // Find how many years have passed since the last leap year.\n    if (jump - n < 6) {\n        n = n - jump + div(jump + 4, 33) * 33;\n    }\n    /** @type {?} */\n    var leap = mod$1(mod$1(n + 1, 33) - 1, 4);\n    if (leap === -1) {\n        leap = 4;\n    }\n    return { leap: leap, gy: gYear, march: march };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\n/**\n * @param {?} julianDayNumber\n * @return {?}\n */\nfunction julianToGregorian(julianDayNumber) {\n    /** @type {?} */\n    var j = 4 * julianDayNumber + 139361631;\n    j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n    /** @type {?} */\n    var i = div(mod$1(j, 1461), 4) * 5 + 308;\n    /** @type {?} */\n    var gDay = div(mod$1(i, 153), 5) + 1;\n    /** @type {?} */\n    var gMonth = mod$1(div(i, 153), 12) + 1;\n    /** @type {?} */\n    var gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\n/**\n * @param {?} gy\n * @param {?} gm\n * @param {?} gd\n * @return {?}\n */\nfunction gregorianToJulian(gy, gm, gd) {\n    /** @type {?} */\n    var d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod$1(gm + 9, 12) + 2, 5) + gd - 34840408;\n    d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n    return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\n/**\n * @param {?} julianDayNumber\n * @return {?}\n */\nfunction julianToJalali(julianDayNumber) {\n    /** @type {?} */\n    var gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).\n    ;\n    /** @type {?} */\n    var jalaliYear = gy - 621;\n    /** @type {?} */\n    var r = jalCal(jalaliYear);\n    /** @type {?} */\n    var gregorianDay = gregorianToJulian(gy, 3, r.march);\n    /** @type {?} */\n    var jalaliDay;\n    /** @type {?} */\n    var jalaliMonth;\n    /** @type {?} */\n    var numberOfDays;\n    // Find number of days that passed since 1 Farvardin.\n    numberOfDays = julianDayNumber - gregorianDay;\n    if (numberOfDays >= 0) {\n        if (numberOfDays <= 185) {\n            // The first 6 months.\n            jalaliMonth = 1 + div(numberOfDays, 31);\n            jalaliDay = mod$1(numberOfDays, 31) + 1;\n            return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n        }\n        else {\n            // The remaining months.\n            numberOfDays -= 186;\n        }\n    }\n    else {\n        // Previous Jalali year.\n        jalaliYear -= 1;\n        numberOfDays += 179;\n        if (r.leap === 1) {\n            numberOfDays += 1;\n        }\n    }\n    jalaliMonth = 7 + div(numberOfDays, 30);\n    jalaliDay = mod$1(numberOfDays, 30) + 1;\n    return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\n/**\n * @param {?} jYear\n * @param {?} jMonth\n * @param {?} jDay\n * @return {?}\n */\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n    /** @type {?} */\n    var r = jalCal(jYear);\n    return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nfunction getDaysPerMonth(month, year) {\n    if (month <= 6) {\n        return 31;\n    }\n    if (month <= 11) {\n        return 30;\n    }\n    if (jalCal(year).leap === 0) {\n        return 30;\n    }\n    return 29;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbCalendarPersian = /** @class */ (function (_super) {\n    __extends(NgbCalendarPersian, _super);\n    function NgbCalendarPersian() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    NgbCalendarPersian.prototype.getDaysPerWeek = /**\n     * @return {?}\n     */\n    function () { return 7; };\n    /**\n     * @return {?}\n     */\n    NgbCalendarPersian.prototype.getMonths = /**\n     * @return {?}\n     */\n    function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; };\n    /**\n     * @return {?}\n     */\n    NgbCalendarPersian.prototype.getWeeksPerMonth = /**\n     * @return {?}\n     */\n    function () { return 6; };\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    NgbCalendarPersian.prototype.getNext = /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = setJalaliYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setJalaliMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setJalaliDay(date, date.day + number);\n            default:\n                return date;\n        }\n    };\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    NgbCalendarPersian.prototype.getPrev = /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbCalendarPersian.prototype.getWeekday = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var day = toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    NgbCalendarPersian.prototype.getWeekNumber = /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    function (week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        /** @type {?} */\n        var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        /** @type {?} */\n        var date = week[thursdayIndex];\n        /** @type {?} */\n        var jsDate = toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        // Thursday\n        /** @type {?} */\n        var time = jsDate.getTime();\n        /** @type {?} */\n        var startDate = toGregorian(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    };\n    /**\n     * @return {?}\n     */\n    NgbCalendarPersian.prototype.getToday = /**\n     * @return {?}\n     */\n    function () { return fromGregorian(new Date()); };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbCalendarPersian.prototype.isValid = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n            !isNaN(toGregorian(date).getTime());\n    };\n    NgbCalendarPersian.decorators = [\n        { type: Injectable }\n    ];\n    return NgbCalendarPersian;\n}(NgbCalendar));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar PARTS_PER_HOUR = 1080;\n/** @type {?} */\nvar PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\n/** @type {?} */\nvar PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\n/** @type {?} */\nvar PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\n/** @type {?} */\nvar BAHARAD = 11 * PARTS_PER_HOUR + 204;\n/** @type {?} */\nvar HEBREW_DAY_ON_JAN_1_1970 = 2092591;\n/** @type {?} */\nvar GREGORIAN_EPOCH$1 = 1721425.5;\n/**\n * @param {?} year\n * @return {?}\n */\nfunction isGregorianLeapYear$1(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction numberOfFirstDayInYear(year) {\n    /** @type {?} */\n    var monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n    /** @type {?} */\n    var fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n    /** @type {?} */\n    var dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n    /** @type {?} */\n    var timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n    /** @type {?} */\n    var dayOfWeek = dayNumber % 7;\n    if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n        dayNumber++;\n        dayOfWeek = dayNumber % 7;\n    }\n    if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n        dayNumber += 2;\n    }\n    else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n        dayNumber++;\n    }\n    return dayNumber;\n}\n/**\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nfunction getDaysInGregorianMonth(month, year) {\n    /** @type {?} */\n    var days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (isGregorianLeapYear$1(year)) {\n        days[1]++;\n    }\n    return days[month - 1];\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction getHebrewMonths(year) {\n    return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n * @param {?} year\n * @return {?}\n */\nfunction getDaysInHebrewYear(year) {\n    return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction isHebrewLeapYear(year) {\n    /** @type {?} */\n    var b = (year * 12 + 17) % 19;\n    return b >= ((b < 0) ? -7 : 12);\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nfunction getDaysInHebrewMonth(month, year) {\n    /** @type {?} */\n    var yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n    /** @type {?} */\n    var yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n    /** @type {?} */\n    var leapYear = isHebrewLeapYear(year);\n    /** @type {?} */\n    var daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n        [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n    if (yearType > 0) {\n        daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n    }\n    if (yearType > 1) {\n        daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n    }\n    return daysInMonth[month - 1];\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction getDayNumberInHebrewYear(date) {\n    /** @type {?} */\n    var numberOfDay = 0;\n    for (var i = 1; i < date.month; i++) {\n        numberOfDay += getDaysInHebrewMonth(i, date.year);\n    }\n    return numberOfDay + date.day;\n}\n/**\n * @param {?} date\n * @param {?} val\n * @return {?}\n */\nfunction setHebrewMonth(date, val) {\n    /** @type {?} */\n    var after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getHebrewMonths(date.year) - date.month) {\n                val -= getHebrewMonths(date.year) - date.month + 1;\n                date.year++;\n                date.month = 1;\n            }\n            else {\n                date.month += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.month) {\n                date.year--;\n                val -= date.month;\n                date.month = getHebrewMonths(date.year);\n            }\n            else {\n                date.month -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} val\n * @return {?}\n */\nfunction setHebrewDay(date, val) {\n    /** @type {?} */\n    var after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n                val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n                date.year++;\n                date.month = 1;\n                date.day = 1;\n            }\n            else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n                val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n                date.month++;\n                date.day = 1;\n            }\n            else {\n                date.day += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.day) {\n                val -= date.day;\n                date.month--;\n                if (date.month === 0) {\n                    date.year--;\n                    date.month = getHebrewMonths(date.year);\n                }\n                date.day = getDaysInHebrewMonth(date.month, date.year);\n            }\n            else {\n                date.day -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n * @param {?} gdate\n * @return {?}\n */\nfunction fromGregorian$1(gdate) {\n    /** @type {?} */\n    var date = new Date(gdate);\n    /** @type {?} */\n    var gYear = date.getFullYear();\n    /** @type {?} */\n    var gMonth = date.getMonth();\n    /** @type {?} */\n    var gDay = date.getDate();\n    /** @type {?} */\n    var julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n        Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gYear) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay + 0.5);\n    /** @type {?} */\n    var daysSinceHebEpoch = julianDay - 347997;\n    /** @type {?} */\n    var monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n    /** @type {?} */\n    var hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n    /** @type {?} */\n    var firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    /** @type {?} */\n    var dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    while (dayOfYear < 1) {\n        hYear--;\n        firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n        dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    }\n    /** @type {?} */\n    var hMonth = 1;\n    /** @type {?} */\n    var hDay = dayOfYear;\n    while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n        hDay -= getDaysInHebrewMonth(hMonth, hYear);\n        hMonth++;\n    }\n    return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n * @param {?} hebrewDate\n * @return {?}\n */\nfunction toGregorian$1(hebrewDate) {\n    /** @type {?} */\n    var hYear = hebrewDate.year;\n    /** @type {?} */\n    var hMonth = hebrewDate.month;\n    /** @type {?} */\n    var hDay = hebrewDate.day;\n    /** @type {?} */\n    var days = numberOfFirstDayInYear(hYear);\n    for (var i = 1; i < hMonth; i++) {\n        days += getDaysInHebrewMonth(i, hYear);\n    }\n    days += hDay;\n    /** @type {?} */\n    var diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n    /** @type {?} */\n    var after = diffDays >= 0;\n    if (!after) {\n        diffDays = -diffDays;\n    }\n    /** @type {?} */\n    var gYear = 1970;\n    /** @type {?} */\n    var gMonth = 1;\n    /** @type {?} */\n    var gDay = 1;\n    while (diffDays > 0) {\n        if (after) {\n            if (diffDays >= (isGregorianLeapYear$1(gYear) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear$1(gYear) ? 366 : 365;\n                gYear++;\n            }\n            else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                gMonth++;\n            }\n            else {\n                gDay += diffDays;\n                diffDays = 0;\n            }\n        }\n        else {\n            if (diffDays >= (isGregorianLeapYear$1(gYear - 1) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear$1(gYear - 1) ? 366 : 365;\n                gYear--;\n            }\n            else {\n                if (gMonth > 1) {\n                    gMonth--;\n                }\n                else {\n                    gMonth = 12;\n                    gYear--;\n                }\n                if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                    diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                }\n                else {\n                    gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n                    diffDays = 0;\n                }\n            }\n        }\n    }\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/**\n * @param {?} numerals\n * @return {?}\n */\nfunction hebrewNumerals(numerals) {\n    if (!numerals) {\n        return '';\n    }\n    /** @type {?} */\n    var hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n    /** @type {?} */\n    var hArray10_19 = [\n        '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n        '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n    ];\n    /** @type {?} */\n    var hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n    /** @type {?} */\n    var hArray100_900 = [\n        '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n        '\\u05ea\\u05ea\\u05e7'\n    ];\n    /** @type {?} */\n    var hArray1000_9000 = [\n        '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n        '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n    ];\n    /** @type {?} */\n    var geresh = '\\u05f3';\n    /** @type {?} */\n    var gershaim = '\\u05f4';\n    /** @type {?} */\n    var mem = 0;\n    /** @type {?} */\n    var result = [];\n    /** @type {?} */\n    var step = 0;\n    while (numerals > 0) {\n        /** @type {?} */\n        var m = numerals % 10;\n        if (step === 0) {\n            mem = m;\n        }\n        else if (step === 1) {\n            if (m !== 1) {\n                result.unshift(hArray20_90[m], hArray0_9[mem]);\n            }\n            else {\n                result.unshift(hArray10_19[mem]);\n            }\n        }\n        else if (step === 2) {\n            result.unshift(hArray100_900[m]);\n        }\n        else {\n            if (m !== 5) {\n                result.unshift(hArray1000_9000[m], geresh, ' ');\n            }\n            break;\n        }\n        numerals = Math.floor(numerals / 10);\n        if (step === 0 && numerals === 0) {\n            result.unshift(hArray0_9[m]);\n        }\n        step++;\n    }\n    result = result.join('').split('');\n    if (result.length === 1) {\n        result.push(geresh);\n    }\n    else if (result.length > 1) {\n        result.splice(result.length - 1, 0, gershaim);\n    }\n    return result.join('');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@since 3.2.0\n */\nvar NgbCalendarHebrew = /** @class */ (function (_super) {\n    __extends(NgbCalendarHebrew, _super);\n    function NgbCalendarHebrew() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.getDaysPerWeek = /**\n     * @return {?}\n     */\n    function () { return 7; };\n    /**\n     * @param {?=} year\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.getMonths = /**\n     * @param {?=} year\n     * @return {?}\n     */\n    function (year) {\n        if (year && isHebrewLeapYear(year)) {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n        }\n        else {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.getWeeksPerMonth = /**\n     * @return {?}\n     */\n    function () { return 6; };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.isValid = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n        b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n        b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n        return b && !isNaN(toGregorian$1(date).getTime());\n    };\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.getNext = /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date.year += number;\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setHebrewMonth(date, number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setHebrewDay(date, number);\n            default:\n                return date;\n        }\n    };\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.getPrev = /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.getWeekday = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var day = toGregorian$1(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.getWeekNumber = /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    function (week, firstDayOfWeek) {\n        /** @type {?} */\n        var date = week[week.length - 1];\n        return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    };\n    /**\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.getToday = /**\n     * @return {?}\n     */\n    function () { return fromGregorian$1(new Date()); };\n    /**\n     * @since 3.4.0\n     */\n    /**\n     * \\@since 3.4.0\n     * @param {?} date\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.toGregorian = /**\n     * \\@since 3.4.0\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) { return fromJSDate(toGregorian$1(date)); };\n    /**\n     * @since 3.4.0\n     */\n    /**\n     * \\@since 3.4.0\n     * @param {?} date\n     * @return {?}\n     */\n    NgbCalendarHebrew.prototype.fromGregorian = /**\n     * \\@since 3.4.0\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) { return fromGregorian$1(toJSDate(date)); };\n    NgbCalendarHebrew.decorators = [\n        { type: Injectable }\n    ];\n    return NgbCalendarHebrew;\n}(NgbCalendar));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\n/** @type {?} */\nvar MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/** @type {?} */\nvar MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\n * \\@since 3.2.0\n */\nvar NgbDatepickerI18nHebrew = /** @class */ (function (_super) {\n    __extends(NgbDatepickerI18nHebrew, _super);\n    function NgbDatepickerI18nHebrew() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} month\n     * @param {?=} year\n     * @return {?}\n     */\n    NgbDatepickerI18nHebrew.prototype.getMonthShortName = /**\n     * @param {?} month\n     * @param {?=} year\n     * @return {?}\n     */\n    function (month, year) { return this.getMonthFullName(month, year); };\n    /**\n     * @param {?} month\n     * @param {?=} year\n     * @return {?}\n     */\n    NgbDatepickerI18nHebrew.prototype.getMonthFullName = /**\n     * @param {?} month\n     * @param {?=} year\n     * @return {?}\n     */\n    function (month, year) {\n        return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n    };\n    /**\n     * @param {?} weekday\n     * @return {?}\n     */\n    NgbDatepickerI18nHebrew.prototype.getWeekdayShortName = /**\n     * @param {?} weekday\n     * @return {?}\n     */\n    function (weekday) { return WEEKDAYS[weekday - 1]; };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDatepickerI18nHebrew.prototype.getDayAriaLabel = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return hebrewNumerals(date.day) + \" \" + this.getMonthFullName(date.month, date.year) + \" \" + hebrewNumerals(date.year);\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDatepickerI18nHebrew.prototype.getDayNumerals = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) { return hebrewNumerals(date.day); };\n    /**\n     * @param {?} weekNumber\n     * @return {?}\n     */\n    NgbDatepickerI18nHebrew.prototype.getWeekNumerals = /**\n     * @param {?} weekNumber\n     * @return {?}\n     */\n    function (weekNumber) { return hebrewNumerals(weekNumber); };\n    /**\n     * @param {?} year\n     * @return {?}\n     */\n    NgbDatepickerI18nHebrew.prototype.getYearNumerals = /**\n     * @param {?} year\n     * @return {?}\n     */\n    function (year) { return hebrewNumerals(year); };\n    NgbDatepickerI18nHebrew.decorators = [\n        { type: Injectable }\n    ];\n    return NgbDatepickerI18nHebrew;\n}(NgbDatepickerI18n));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\nvar NgbDateNativeAdapter = /** @class */ (function (_super) {\n    __extends(NgbDateNativeAdapter, _super);\n    function NgbDateNativeAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     */\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDateNativeAdapter.prototype.fromModel = /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n    };\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     */\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDateNativeAdapter.prototype.toModel = /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n            null;\n    };\n    /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDateNativeAdapter.prototype._fromNativeDate = /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n    };\n    /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDateNativeAdapter.prototype._toNativeDate = /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var jsDate = new Date(date.year, date.month - 1, date.day, 12);\n        // avoid 30 -> 1930 conversion\n        jsDate.setFullYear(date.year);\n        return jsDate;\n    };\n    NgbDateNativeAdapter.decorators = [\n        { type: Injectable }\n    ];\n    return NgbDateNativeAdapter;\n}(NgbDateAdapter));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * \\@since 3.2.0\n */\nvar NgbDateNativeUTCAdapter = /** @class */ (function (_super) {\n    __extends(NgbDateNativeUTCAdapter, _super);\n    function NgbDateNativeUTCAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDateNativeUTCAdapter.prototype._fromNativeDate = /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\n    };\n    /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    NgbDateNativeUTCAdapter.prototype._toNativeDate = /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        /** @type {?} */\n        var jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n        // avoid 30 -> 1930 conversion\n        jsDate.setUTCFullYear(date.year);\n        return jsDate;\n    };\n    NgbDateNativeUTCAdapter.decorators = [\n        { type: Injectable }\n    ];\n    return NgbDateNativeUTCAdapter;\n}(NgbDateNativeAdapter));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbDatepickerModule = /** @class */ (function () {\n    function NgbDatepickerModule() {\n    }\n    NgbDatepickerModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\n                        NgbDatepickerDayView, NgbInputDatepicker\n                    ],\n                    exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n                    imports: [CommonModule, FormsModule],\n                    entryComponents: [NgbDatepicker]\n                },] }\n    ];\n    return NgbDatepickerModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nvar NgbDropdownConfig = /** @class */ (function () {\n    function NgbDropdownConfig() {\n        this.autoClose = true;\n        this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    }\n    NgbDropdownConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbDropdownConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbDropdownConfig_Factory() { return new NgbDropdownConfig(); }, token: NgbDropdownConfig, providedIn: \"root\" });\n    return NgbDropdownConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbNavbar = /** @class */ (function () {\n    function NgbNavbar() {\n    }\n    NgbNavbar.decorators = [\n        { type: Directive, args: [{ selector: '.navbar' },] }\n    ];\n    return NgbNavbar;\n}());\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * \\@since 4.1.0\n */\nvar NgbDropdownItem = /** @class */ (function () {\n    function NgbDropdownItem(elementRef) {\n        this.elementRef = elementRef;\n        this._disabled = false;\n    }\n    Object.defineProperty(NgbDropdownItem.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = (/** @type {?} */ (value)) === '' || value === true; // accept an empty attribute as true\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgbDropdownItem.decorators = [\n        { type: Directive, args: [{ selector: '[ngbDropdownItem]', host: { 'class': 'dropdown-item', '[class.disabled]': 'disabled' } },] }\n    ];\n    /** @nocollapse */\n    NgbDropdownItem.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    NgbDropdownItem.propDecorators = {\n        disabled: [{ type: Input }]\n    };\n    return NgbDropdownItem;\n}());\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\nvar NgbDropdownMenu = /** @class */ (function () {\n    function NgbDropdownMenu(dropdown) {\n        this.dropdown = dropdown;\n        this.placement = 'bottom';\n        this.isOpen = false;\n    }\n    NgbDropdownMenu.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbDropdownMenu]',\n                    host: {\n                        '[class.dropdown-menu]': 'true',\n                        '[class.show]': 'dropdown.isOpen()',\n                        '[attr.x-placement]': 'placement',\n                        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                        '(keydown.End)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Space)': 'dropdown.onKeyDown($event)'\n                    }\n                },] }\n    ];\n    /** @nocollapse */\n    NgbDropdownMenu.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**\n                         * @return {?}\n                         */\n                        function () { return NgbDropdown; })),] }] }\n    ]; };\n    NgbDropdownMenu.propDecorators = {\n        menuItems: [{ type: ContentChildren, args: [NgbDropdownItem,] }]\n    };\n    return NgbDropdownMenu;\n}());\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * \\@since 1.1.0\n */\nvar NgbDropdownAnchor = /** @class */ (function () {\n    function NgbDropdownAnchor(dropdown, _elementRef) {\n        this.dropdown = dropdown;\n        this._elementRef = _elementRef;\n        this.anchorEl = _elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    NgbDropdownAnchor.prototype.getNativeElement = /**\n     * @return {?}\n     */\n    function () { return this._elementRef.nativeElement; };\n    NgbDropdownAnchor.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbDropdownAnchor]',\n                    host: { 'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()' }\n                },] }\n    ];\n    /** @nocollapse */\n    NgbDropdownAnchor.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**\n                         * @return {?}\n                         */\n                        function () { return NgbDropdown; })),] }] },\n        { type: ElementRef }\n    ]; };\n    return NgbDropdownAnchor;\n}());\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\nvar NgbDropdownToggle = /** @class */ (function (_super) {\n    __extends(NgbDropdownToggle, _super);\n    function NgbDropdownToggle(dropdown, elementRef) {\n        return _super.call(this, dropdown, elementRef) || this;\n    }\n    NgbDropdownToggle.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbDropdownToggle]',\n                    host: {\n                        'class': 'dropdown-toggle',\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'dropdown.isOpen()',\n                        '(click)': 'dropdown.toggle()',\n                        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                        '(keydown.End)': 'dropdown.onKeyDown($event)'\n                    },\n                    providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef((/**\n                             * @return {?}\n                             */\n                            function () { return NgbDropdownToggle; })) }]\n                },] }\n    ];\n    /** @nocollapse */\n    NgbDropdownToggle.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**\n                         * @return {?}\n                         */\n                        function () { return NgbDropdown; })),] }] },\n        { type: ElementRef }\n    ]; };\n    return NgbDropdownToggle;\n}(NgbDropdownAnchor));\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\nvar NgbDropdown = /** @class */ (function () {\n    function NgbDropdown(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, ngbNavbar) {\n        var _this = this;\n        this._changeDetector = _changeDetector;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._closed$ = new Subject();\n        /**\n         * Defines whether or not the dropdown menu is opened initially.\n         */\n        this._open = false;\n        /**\n         * An event fired when the dropdown is opened or closed.\n         *\n         * The event payload is a `boolean`:\n         * * `true` - the dropdown was opened\n         * * `false` - the dropdown was closed\n         */\n        this.openChange = new EventEmitter();\n        this.placement = config.placement;\n        this.container = config.container;\n        this.autoClose = config.autoClose;\n        this.display = ngbNavbar ? 'static' : 'dynamic';\n        this._zoneSubscription = _ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        function () { _this._positionMenu(); }));\n    }\n    /**\n     * @return {?}\n     */\n    NgbDropdown.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onStable.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._applyPlacementClasses();\n            if (_this._open) {\n                _this._setCloseHandlers();\n            }\n        }));\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgbDropdown.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes.container && this._open) {\n            this._applyContainer(this.container);\n        }\n        if (changes.placement && !changes.placement.isFirstChange) {\n            this._applyPlacementClasses();\n        }\n    };\n    /**\n     * Checks if the dropdown menu is open.\n     */\n    /**\n     * Checks if the dropdown menu is open.\n     * @return {?}\n     */\n    NgbDropdown.prototype.isOpen = /**\n     * Checks if the dropdown menu is open.\n     * @return {?}\n     */\n    function () { return this._open; };\n    /**\n     * Opens the dropdown menu.\n     */\n    /**\n     * Opens the dropdown menu.\n     * @return {?}\n     */\n    NgbDropdown.prototype.open = /**\n     * Opens the dropdown menu.\n     * @return {?}\n     */\n    function () {\n        if (!this._open) {\n            this._open = true;\n            this._applyContainer(this.container);\n            this.openChange.emit(true);\n            this._setCloseHandlers();\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbDropdown.prototype._setCloseHandlers = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var anchor = this._anchor;\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, (/**\n         * @return {?}\n         */\n        function () { return _this.close(); }), this._closed$, this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [], '.dropdown-item,.dropdown-divider');\n    };\n    /**\n     * Closes the dropdown menu.\n     */\n    /**\n     * Closes the dropdown menu.\n     * @return {?}\n     */\n    NgbDropdown.prototype.close = /**\n     * Closes the dropdown menu.\n     * @return {?}\n     */\n    function () {\n        if (this._open) {\n            this._open = false;\n            this._resetContainer();\n            this._closed$.next();\n            this.openChange.emit(false);\n            this._changeDetector.markForCheck();\n        }\n    };\n    /**\n     * Toggles the dropdown menu.\n     */\n    /**\n     * Toggles the dropdown menu.\n     * @return {?}\n     */\n    NgbDropdown.prototype.toggle = /**\n     * Toggles the dropdown menu.\n     * @return {?}\n     */\n    function () {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbDropdown.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._resetContainer();\n        this._closed$.next();\n        this._zoneSubscription.unsubscribe();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NgbDropdown.prototype.onKeyDown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        // tslint:disable-next-line:deprecation\n        /** @type {?} */\n        var key = event.which;\n        /** @type {?} */\n        var itemElements = this._getMenuElements();\n        /** @type {?} */\n        var position = -1;\n        /** @type {?} */\n        var isEventFromItems = false;\n        /** @type {?} */\n        var itemElement = null;\n        /** @type {?} */\n        var isEventFromToggle = this._isEventFromToggle(event);\n        if (!isEventFromToggle && itemElements.length) {\n            itemElements.forEach((/**\n             * @param {?} item\n             * @param {?} index\n             * @return {?}\n             */\n            function (item, index) {\n                if (item.contains((/** @type {?} */ (event.target)))) {\n                    isEventFromItems = true;\n                    itemElement = item;\n                }\n                if (item === _this._document.activeElement) {\n                    position = index;\n                }\n            }));\n        }\n        // closing on Enter / Space\n        if (key === Key.Space || key === Key.Enter) {\n            if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n                // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n                // So we have to register a one-time click handler that will fire after any user defined click handlers\n                // to close the dropdown\n                fromEvent(itemElement, 'click').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                function () { return _this.close(); }));\n            }\n            return;\n        }\n        // opening / navigating\n        if (isEventFromToggle || isEventFromItems) {\n            this.open();\n            if (itemElements.length) {\n                switch (key) {\n                    case Key.ArrowDown:\n                        position = Math.min(position + 1, itemElements.length - 1);\n                        break;\n                    case Key.ArrowUp:\n                        if (this._isDropup() && position === -1) {\n                            position = itemElements.length - 1;\n                            break;\n                        }\n                        position = Math.max(position - 1, 0);\n                        break;\n                    case Key.Home:\n                        position = 0;\n                        break;\n                    case Key.End:\n                        position = itemElements.length - 1;\n                        break;\n                }\n                itemElements[position].focus();\n            }\n            event.preventDefault();\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbDropdown.prototype._isDropup = /**\n     * @private\n     * @return {?}\n     */\n    function () { return this._elementRef.nativeElement.classList.contains('dropup'); };\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    NgbDropdown.prototype._isEventFromToggle = /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        return this._anchor.getNativeElement().contains((/** @type {?} */ (event.target)));\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbDropdown.prototype._getMenuElements = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var menu = this._menu;\n        if (menu == null) {\n            return [];\n        }\n        return menu.menuItems.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) { return !item.disabled; })).map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) { return item.elementRef.nativeElement; }));\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbDropdown.prototype._positionMenu = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var menu = this._menu;\n        if (this.isOpen() && menu) {\n            this._applyPlacementClasses(this.display === 'dynamic' ?\n                positionElements(this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement, this.container === 'body') :\n                this._getFirstPlacement(this.placement));\n        }\n    };\n    /**\n     * @private\n     * @param {?} placement\n     * @return {?}\n     */\n    NgbDropdown.prototype._getFirstPlacement = /**\n     * @private\n     * @param {?} placement\n     * @return {?}\n     */\n    function (placement) {\n        return Array.isArray(placement) ? placement[0] : (/** @type {?} */ (placement.split(' ')[0]));\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbDropdown.prototype._resetContainer = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var renderer = this._renderer;\n        /** @type {?} */\n        var menuElement = this._menuElement;\n        if (menuElement) {\n            /** @type {?} */\n            var dropdownElement = this._elementRef.nativeElement;\n            /** @type {?} */\n            var dropdownMenuElement = menuElement.nativeElement;\n            renderer.appendChild(dropdownElement, dropdownMenuElement);\n            renderer.removeStyle(dropdownMenuElement, 'position');\n            renderer.removeStyle(dropdownMenuElement, 'transform');\n        }\n        if (this._bodyContainer) {\n            renderer.removeChild(this._document.body, this._bodyContainer);\n            this._bodyContainer = null;\n        }\n    };\n    /**\n     * @private\n     * @param {?=} container\n     * @return {?}\n     */\n    NgbDropdown.prototype._applyContainer = /**\n     * @private\n     * @param {?=} container\n     * @return {?}\n     */\n    function (container) {\n        if (container === void 0) { container = null; }\n        this._resetContainer();\n        if (container === 'body') {\n            /** @type {?} */\n            var renderer = this._renderer;\n            /** @type {?} */\n            var dropdownMenuElement = this._menuElement.nativeElement;\n            /** @type {?} */\n            var bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n            // Override some styles to have the positionning working\n            renderer.setStyle(bodyContainer, 'position', 'absolute');\n            renderer.setStyle(dropdownMenuElement, 'position', 'static');\n            renderer.setStyle(bodyContainer, 'z-index', '1050');\n            renderer.appendChild(bodyContainer, dropdownMenuElement);\n            renderer.appendChild(this._document.body, bodyContainer);\n        }\n    };\n    /**\n     * @private\n     * @param {?=} placement\n     * @return {?}\n     */\n    NgbDropdown.prototype._applyPlacementClasses = /**\n     * @private\n     * @param {?=} placement\n     * @return {?}\n     */\n    function (placement) {\n        /** @type {?} */\n        var menu = this._menu;\n        if (menu) {\n            if (!placement) {\n                placement = this._getFirstPlacement(this.placement);\n            }\n            /** @type {?} */\n            var renderer = this._renderer;\n            /** @type {?} */\n            var dropdownElement = this._elementRef.nativeElement;\n            // remove the current placement classes\n            renderer.removeClass(dropdownElement, 'dropup');\n            renderer.removeClass(dropdownElement, 'dropdown');\n            menu.placement = this.display === 'static' ? null : placement;\n            /*\n                  * apply the new placement\n                  * in case of top use up-arrow or down-arrow otherwise\n                  */\n            /** @type {?} */\n            var dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n            renderer.addClass(dropdownElement, dropdownClass);\n            /** @type {?} */\n            var bodyContainer = this._bodyContainer;\n            if (bodyContainer) {\n                renderer.removeClass(bodyContainer, 'dropup');\n                renderer.removeClass(bodyContainer, 'dropdown');\n                renderer.addClass(bodyContainer, dropdownClass);\n            }\n        }\n    };\n    NgbDropdown.decorators = [\n        { type: Directive, args: [{ selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: { '[class.show]': 'isOpen()' } },] }\n    ];\n    /** @nocollapse */\n    NgbDropdown.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: NgbDropdownConfig },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: NgZone },\n        { type: ElementRef },\n        { type: Renderer2 },\n        { type: NgbNavbar, decorators: [{ type: Optional }] }\n    ]; };\n    NgbDropdown.propDecorators = {\n        _menu: [{ type: ContentChild, args: [NgbDropdownMenu, { static: false },] }],\n        _menuElement: [{ type: ContentChild, args: [NgbDropdownMenu, { read: ElementRef, static: false },] }],\n        _anchor: [{ type: ContentChild, args: [NgbDropdownAnchor, { static: false },] }],\n        autoClose: [{ type: Input }],\n        _open: [{ type: Input, args: ['open',] }],\n        placement: [{ type: Input }],\n        container: [{ type: Input }],\n        display: [{ type: Input }],\n        openChange: [{ type: Output }]\n    };\n    return NgbDropdown;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\nvar NgbDropdownModule = /** @class */ (function () {\n    function NgbDropdownModule() {\n    }\n    NgbDropdownModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES },] }\n    ];\n    return NgbDropdownModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n *\n * \\@since 3.1.0\n */\nvar NgbModalConfig = /** @class */ (function () {\n    function NgbModalConfig() {\n        this.backdrop = true;\n        this.keyboard = true;\n    }\n    NgbModalConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbModalConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbModalConfig_Factory() { return new NgbModalConfig(); }, token: NgbModalConfig, providedIn: \"root\" });\n    return NgbModalConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ContentRef = /** @class */ (function () {\n    function ContentRef(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n    return ContentRef;\n}());\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nPopupService = /** @class */ (function () {\n    function PopupService(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver, _applicationRef) {\n        this._type = _type;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._applicationRef = _applicationRef;\n    }\n    /**\n     * @param {?=} content\n     * @param {?=} context\n     * @return {?}\n     */\n    PopupService.prototype.open = /**\n     * @param {?=} content\n     * @param {?=} context\n     * @return {?}\n     */\n    function (content, context) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, context);\n            this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), 0, this._injector, this._contentRef.nodes);\n        }\n        return this._windowRef;\n    };\n    /**\n     * @return {?}\n     */\n    PopupService.prototype.close = /**\n     * @return {?}\n     */\n    function () {\n        if (this._windowRef) {\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n            this._windowRef = null;\n            if (this._contentRef.viewRef) {\n                this._applicationRef.detachView(this._contentRef.viewRef);\n                this._contentRef.viewRef.destroy();\n                this._contentRef = null;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {?} content\n     * @param {?=} context\n     * @return {?}\n     */\n    PopupService.prototype._getContentRef = /**\n     * @private\n     * @param {?} content\n     * @param {?=} context\n     * @return {?}\n     */\n    function (content, context) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            /** @type {?} */\n            var viewRef = content.createEmbeddedView(context);\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._renderer.createText(\"\" + content)]]);\n        }\n    };\n    return PopupService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar noop = (/**\n * @return {?}\n */\nfunction () { });\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\nvar ScrollBar = /** @class */ (function () {\n    function ScrollBar(_document) {\n        this._document = _document;\n    }\n    /**\n     * To be called right before a potential vertical scrollbar would be removed:\n     *\n     * - if there was a scrollbar, adds some compensation padding to the body\n     * to keep the same layout as when the scrollbar is there\n     * - if there was none, there is nothing to do\n     *\n     * @return a callback used to revert the compensation (noop if there was none,\n     * otherwise a function removing the padding)\n     */\n    /**\n     * To be called right before a potential vertical scrollbar would be removed:\n     *\n     * - if there was a scrollbar, adds some compensation padding to the body\n     * to keep the same layout as when the scrollbar is there\n     * - if there was none, there is nothing to do\n     *\n     * @return {?} a callback used to revert the compensation (noop if there was none,\n     * otherwise a function removing the padding)\n     */\n    ScrollBar.prototype.compensate = /**\n     * To be called right before a potential vertical scrollbar would be removed:\n     *\n     * - if there was a scrollbar, adds some compensation padding to the body\n     * to keep the same layout as when the scrollbar is there\n     * - if there was none, there is nothing to do\n     *\n     * @return {?} a callback used to revert the compensation (noop if there was none,\n     * otherwise a function removing the padding)\n     */\n    function () {\n        /** @type {?} */\n        var width = this._getWidth();\n        return !this._isPresent(width) ? noop : this._adjustBody(width);\n    };\n    /**\n     * Adds a padding of the given width on the right of the body.\n     *\n     * @return a callback used to revert the padding to its previous value\n     */\n    /**\n     * Adds a padding of the given width on the right of the body.\n     *\n     * @private\n     * @param {?} scrollbarWidth\n     * @return {?} a callback used to revert the padding to its previous value\n     */\n    ScrollBar.prototype._adjustBody = /**\n     * Adds a padding of the given width on the right of the body.\n     *\n     * @private\n     * @param {?} scrollbarWidth\n     * @return {?} a callback used to revert the padding to its previous value\n     */\n    function (scrollbarWidth) {\n        /** @type {?} */\n        var body = this._document.body;\n        /** @type {?} */\n        var userSetPaddingStyle = body.style.paddingRight;\n        /** @type {?} */\n        var actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n        body.style['padding-right'] = actualPadding + scrollbarWidth + \"px\";\n        return (/**\n         * @return {?}\n         */\n        function () { return body.style['padding-right'] = userSetPaddingStyle; });\n    };\n    /**\n     * Tells whether a scrollbar is currently present on the body.\n     *\n     * @return true if scrollbar is present, false otherwise\n     */\n    /**\n     * Tells whether a scrollbar is currently present on the body.\n     *\n     * @private\n     * @param {?} scrollbarWidth\n     * @return {?} true if scrollbar is present, false otherwise\n     */\n    ScrollBar.prototype._isPresent = /**\n     * Tells whether a scrollbar is currently present on the body.\n     *\n     * @private\n     * @param {?} scrollbarWidth\n     * @return {?} true if scrollbar is present, false otherwise\n     */\n    function (scrollbarWidth) {\n        /** @type {?} */\n        var rect = this._document.body.getBoundingClientRect();\n        /** @type {?} */\n        var bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n        /** @type {?} */\n        var uncertainty = 0.1 * scrollbarWidth;\n        return bodyToViewportGap >= scrollbarWidth - uncertainty;\n    };\n    /**\n     * Calculates and returns the width of a scrollbar.\n     *\n     * @return the width of a scrollbar on this page\n     */\n    /**\n     * Calculates and returns the width of a scrollbar.\n     *\n     * @private\n     * @return {?} the width of a scrollbar on this page\n     */\n    ScrollBar.prototype._getWidth = /**\n     * Calculates and returns the width of a scrollbar.\n     *\n     * @private\n     * @return {?} the width of a scrollbar on this page\n     */\n    function () {\n        /** @type {?} */\n        var measurer = this._document.createElement('div');\n        measurer.className = 'modal-scrollbar-measure';\n        /** @type {?} */\n        var body = this._document.body;\n        body.appendChild(measurer);\n        /** @type {?} */\n        var width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n        body.removeChild(measurer);\n        return width;\n    };\n    ScrollBar.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */\n    ScrollBar.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ ScrollBar.ngInjectableDef = ɵɵdefineInjectable({ factory: function ScrollBar_Factory() { return new ScrollBar(ɵɵinject(DOCUMENT)); }, token: ScrollBar, providedIn: \"root\" });\n    return ScrollBar;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbModalBackdrop = /** @class */ (function () {\n    function NgbModalBackdrop() {\n    }\n    NgbModalBackdrop.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-modal-backdrop',\n                    encapsulation: ViewEncapsulation.None,\n                    template: '',\n                    host: { '[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050' }\n                }] }\n    ];\n    NgbModalBackdrop.propDecorators = {\n        backdropClass: [{ type: Input }]\n    };\n    return NgbModalBackdrop;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nvar  /**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nNgbActiveModal = /** @class */ (function () {\n    function NgbActiveModal() {\n    }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     * @param {?=} result\n     * @return {?}\n     */\n    NgbActiveModal.prototype.close = /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     * @param {?=} result\n     * @return {?}\n     */\n    function (result) { };\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     * @param {?=} reason\n     * @return {?}\n     */\n    NgbActiveModal.prototype.dismiss = /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     * @param {?=} reason\n     * @return {?}\n     */\n    function (reason) { };\n    return NgbActiveModal;\n}());\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nvar  /**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nNgbModalRef = /** @class */ (function () {\n    function NgbModalRef(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        var _this = this;\n        this._windowCmptRef = _windowCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        _windowCmptRef.instance.dismissEvent.subscribe((/**\n         * @param {?} reason\n         * @return {?}\n         */\n        function (reason) { _this.dismiss(reason); }));\n        this.result = new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        }));\n        this.result.then(null, (/**\n         * @return {?}\n         */\n        function () { }));\n    }\n    Object.defineProperty(NgbModalRef.prototype, \"componentInstance\", {\n        /**\n         * The instance of a component used for the modal content.\n         *\n         * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n         */\n        get: /**\n         * The instance of a component used for the modal content.\n         *\n         * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n         * @return {?}\n         */\n        function () {\n            if (this._contentRef && this._contentRef.componentRef) {\n                return this._contentRef.componentRef.instance;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     * @param {?=} result\n     * @return {?}\n     */\n    NgbModalRef.prototype.close = /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     * @param {?=} result\n     * @return {?}\n     */\n    function (result) {\n        if (this._windowCmptRef) {\n            this._resolve(result);\n            this._removeModalElements();\n        }\n    };\n    /**\n     * @private\n     * @param {?=} reason\n     * @return {?}\n     */\n    NgbModalRef.prototype._dismiss = /**\n     * @private\n     * @param {?=} reason\n     * @return {?}\n     */\n    function (reason) {\n        this._reject(reason);\n        this._removeModalElements();\n    };\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     * @param {?=} reason\n     * @return {?}\n     */\n    NgbModalRef.prototype.dismiss = /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     * @param {?=} reason\n     * @return {?}\n     */\n    function (reason) {\n        var _this = this;\n        if (this._windowCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                /** @type {?} */\n                var dismiss = this._beforeDismiss();\n                if (dismiss && dismiss.then) {\n                    dismiss.then((/**\n                     * @param {?} result\n                     * @return {?}\n                     */\n                    function (result) {\n                        if (result !== false) {\n                            _this._dismiss(reason);\n                        }\n                    }), (/**\n                     * @return {?}\n                     */\n                    function () { }));\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbModalRef.prototype._removeModalElements = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var windowNativeEl = this._windowCmptRef.location.nativeElement;\n        windowNativeEl.parentNode.removeChild(windowNativeEl);\n        this._windowCmptRef.destroy();\n        if (this._backdropCmptRef) {\n            /** @type {?} */\n            var backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n            backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n            this._backdropCmptRef.destroy();\n        }\n        if (this._contentRef && this._contentRef.viewRef) {\n            this._contentRef.viewRef.destroy();\n        }\n        this._windowCmptRef = null;\n        this._backdropCmptRef = null;\n        this._contentRef = null;\n    };\n    return NgbModalRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nvar ModalDismissReasons = {\n    BACKDROP_CLICK: 0,\n    ESC: 1,\n};\nModalDismissReasons[ModalDismissReasons.BACKDROP_CLICK] = 'BACKDROP_CLICK';\nModalDismissReasons[ModalDismissReasons.ESC] = 'ESC';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbModalWindow = /** @class */ (function () {\n    function NgbModalWindow(_document, _elRef, _zone) {\n        this._document = _document;\n        this._elRef = _elRef;\n        this._zone = _zone;\n        this._closed$ = new Subject();\n        this.backdrop = true;\n        this.keyboard = true;\n        this.dismissEvent = new EventEmitter();\n    }\n    /**\n     * @param {?} reason\n     * @return {?}\n     */\n    NgbModalWindow.prototype.dismiss = /**\n     * @param {?} reason\n     * @return {?}\n     */\n    function (reason) { this.dismissEvent.emit(reason); };\n    /**\n     * @return {?}\n     */\n    NgbModalWindow.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () { this._elWithFocus = this._document.activeElement; };\n    /**\n     * @return {?}\n     */\n    NgbModalWindow.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var nativeElement = this._elRef.nativeElement;\n        this._zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            fromEvent(nativeElement, 'keydown')\n                .pipe(takeUntil(_this._closed$), \n            // tslint:disable-next-line:deprecation\n            filter((/**\n             * @param {?} e\n             * @return {?}\n             */\n            function (e) { return e.which === Key.Escape && _this.keyboard; })))\n                .subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            function (event) { return requestAnimationFrame((/**\n             * @return {?}\n             */\n            function () {\n                if (!event.defaultPrevented) {\n                    _this._zone.run((/**\n                     * @return {?}\n                     */\n                    function () { return _this.dismiss(ModalDismissReasons.ESC); }));\n                }\n            })); }));\n            // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n            // inside the modal dialog and releasing it outside\n            /** @type {?} */\n            var preventClose = false;\n            fromEvent(_this._dialogEl.nativeElement, 'mousedown')\n                .pipe(takeUntil(_this._closed$), tap((/**\n             * @return {?}\n             */\n            function () { return preventClose = false; })), switchMap((/**\n             * @return {?}\n             */\n            function () { return fromEvent(nativeElement, 'mouseup').pipe(takeUntil(_this._closed$), take(1)); })), filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            function (_a) {\n                var target = _a.target;\n                return nativeElement === target;\n            })))\n                .subscribe((/**\n             * @return {?}\n             */\n            function () { preventClose = true; }));\n            // We're listening to 'click' to dismiss modal on modal window click, except when:\n            // 1. clicking on modal dialog itself\n            // 2. closing was prevented by mousedown/up handlers\n            // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n            fromEvent(nativeElement, 'click').pipe(takeUntil(_this._closed$)).subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            function (_a) {\n                var target = _a.target;\n                if (_this.backdrop === true && nativeElement === target && !preventClose) {\n                    _this._zone.run((/**\n                     * @return {?}\n                     */\n                    function () { return _this.dismiss(ModalDismissReasons.BACKDROP_CLICK); }));\n                }\n                preventClose = false;\n            }));\n        }));\n        if (!nativeElement.contains(document.activeElement)) {\n            /** @type {?} */\n            var autoFocusable = (/** @type {?} */ (nativeElement.querySelector(\"[ngbAutofocus]\")));\n            /** @type {?} */\n            var firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n            /** @type {?} */\n            var elementToFocus = autoFocusable || firstFocusable || nativeElement;\n            elementToFocus.focus();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbModalWindow.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var body = this._document.body;\n        /** @type {?} */\n        var elWithFocus = this._elWithFocus;\n        /** @type {?} */\n        var elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        this._zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            setTimeout((/**\n             * @return {?}\n             */\n            function () { return elementToFocus.focus(); }));\n            _this._elWithFocus = null;\n        }));\n        this._closed$.next();\n    };\n    NgbModalWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-modal-window',\n                    host: {\n                        '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n                        'role': 'dialog',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': 'true',\n                        '[attr.aria-labelledby]': 'ariaLabelledBy',\n                    },\n                    template: \"\\n    <div #dialog [class]=\\\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\\n     (scrollable ? ' modal-dialog-scrollable' : '')\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\"><ng-content></ng-content></div>\\n    </div>\\n    \",\n                    encapsulation: ViewEncapsulation.None,\n                    styles: [\"ngb-modal-window .component-host-scrollable{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgbModalWindow.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: ElementRef },\n        { type: NgZone }\n    ]; };\n    NgbModalWindow.propDecorators = {\n        _dialogEl: [{ type: ViewChild, args: ['dialog', { static: true },] }],\n        ariaLabelledBy: [{ type: Input }],\n        backdrop: [{ type: Input }],\n        centered: [{ type: Input }],\n        keyboard: [{ type: Input }],\n        scrollable: [{ type: Input }],\n        size: [{ type: Input }],\n        windowClass: [{ type: Input }],\n        dismissEvent: [{ type: Output, args: ['dismiss',] }]\n    };\n    return NgbModalWindow;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbModalStack = /** @class */ (function () {\n    function NgbModalStack(_applicationRef, _injector, _document, _scrollBar, _rendererFactory, _ngZone) {\n        var _this = this;\n        this._applicationRef = _applicationRef;\n        this._injector = _injector;\n        this._document = _document;\n        this._scrollBar = _scrollBar;\n        this._rendererFactory = _rendererFactory;\n        this._ngZone = _ngZone;\n        this._activeWindowCmptHasChanged = new Subject();\n        this._ariaHiddenValues = new Map();\n        this._backdropAttributes = ['backdropClass'];\n        this._modalRefs = [];\n        this._windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n        this._windowCmpts = [];\n        // Trap focus on active WindowCmpt\n        this._activeWindowCmptHasChanged.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (_this._windowCmpts.length) {\n                /** @type {?} */\n                var activeWindowCmpt = _this._windowCmpts[_this._windowCmpts.length - 1];\n                ngbFocusTrap(_this._ngZone, activeWindowCmpt.location.nativeElement, _this._activeWindowCmptHasChanged);\n                _this._revertAriaHidden();\n                _this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n            }\n        }));\n    }\n    /**\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} options\n     * @return {?}\n     */\n    NgbModalStack.prototype.open = /**\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} options\n     * @return {?}\n     */\n    function (moduleCFR, contentInjector, content, options) {\n        var _this = this;\n        /** @type {?} */\n        var containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n            this._document.querySelector(options.container) :\n            this._document.body;\n        /** @type {?} */\n        var renderer = this._rendererFactory.createRenderer(null, null);\n        /** @type {?} */\n        var revertPaddingForScrollBar = this._scrollBar.compensate();\n        /** @type {?} */\n        var removeBodyClass = (/**\n         * @return {?}\n         */\n        function () {\n            if (!_this._modalRefs.length) {\n                renderer.removeClass(_this._document.body, 'modal-open');\n                _this._revertAriaHidden();\n            }\n        });\n        if (!containerEl) {\n            throw new Error(\"The specified modal container \\\"\" + (options.container || 'body') + \"\\\" was not found in the DOM.\");\n        }\n        /** @type {?} */\n        var activeModal = new NgbActiveModal();\n        /** @type {?} */\n        var contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n        /** @type {?} */\n        var backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n        /** @type {?} */\n        var windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n        /** @type {?} */\n        var ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerModalRef(ngbModalRef);\n        this._registerWindowCmpt(windowCmptRef);\n        ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n        ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n        activeModal.close = (/**\n         * @param {?} result\n         * @return {?}\n         */\n        function (result) { ngbModalRef.close(result); });\n        activeModal.dismiss = (/**\n         * @param {?} reason\n         * @return {?}\n         */\n        function (reason) { ngbModalRef.dismiss(reason); });\n        this._applyWindowOptions(windowCmptRef.instance, options);\n        if (this._modalRefs.length === 1) {\n            renderer.addClass(this._document.body, 'modal-open');\n        }\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            this._applyBackdropOptions(backdropCmptRef.instance, options);\n        }\n        return ngbModalRef;\n    };\n    /**\n     * @param {?=} reason\n     * @return {?}\n     */\n    NgbModalStack.prototype.dismissAll = /**\n     * @param {?=} reason\n     * @return {?}\n     */\n    function (reason) { this._modalRefs.forEach((/**\n     * @param {?} ngbModalRef\n     * @return {?}\n     */\n    function (ngbModalRef) { return ngbModalRef.dismiss(reason); })); };\n    /**\n     * @return {?}\n     */\n    NgbModalStack.prototype.hasOpenModals = /**\n     * @return {?}\n     */\n    function () { return this._modalRefs.length > 0; };\n    /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} containerEl\n     * @return {?}\n     */\n    NgbModalStack.prototype._attachBackdrop = /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} containerEl\n     * @return {?}\n     */\n    function (moduleCFR, containerEl) {\n        /** @type {?} */\n        var backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n        /** @type {?} */\n        var backdropCmptRef = backdropFactory.create(this._injector);\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    };\n    /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} containerEl\n     * @param {?} contentRef\n     * @return {?}\n     */\n    NgbModalStack.prototype._attachWindowComponent = /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} containerEl\n     * @param {?} contentRef\n     * @return {?}\n     */\n    function (moduleCFR, containerEl, contentRef) {\n        /** @type {?} */\n        var windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n        /** @type {?} */\n        var windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n        this._applicationRef.attachView(windowCmptRef.hostView);\n        containerEl.appendChild(windowCmptRef.location.nativeElement);\n        return windowCmptRef;\n    };\n    /**\n     * @private\n     * @param {?} windowInstance\n     * @param {?} options\n     * @return {?}\n     */\n    NgbModalStack.prototype._applyWindowOptions = /**\n     * @private\n     * @param {?} windowInstance\n     * @param {?} options\n     * @return {?}\n     */\n    function (windowInstance, options) {\n        this._windowAttributes.forEach((/**\n         * @param {?} optionName\n         * @return {?}\n         */\n        function (optionName) {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        }));\n    };\n    /**\n     * @private\n     * @param {?} backdropInstance\n     * @param {?} options\n     * @return {?}\n     */\n    NgbModalStack.prototype._applyBackdropOptions = /**\n     * @private\n     * @param {?} backdropInstance\n     * @param {?} options\n     * @return {?}\n     */\n    function (backdropInstance, options) {\n        this._backdropAttributes.forEach((/**\n         * @param {?} optionName\n         * @return {?}\n         */\n        function (optionName) {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        }));\n    };\n    /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} activeModal\n     * @param {?} options\n     * @return {?}\n     */\n    NgbModalStack.prototype._getContentRef = /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} activeModal\n     * @param {?} options\n     * @return {?}\n     */\n    function (moduleCFR, contentInjector, content, activeModal, options) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeModal);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n        }\n    };\n    /**\n     * @private\n     * @param {?} content\n     * @param {?} activeModal\n     * @return {?}\n     */\n    NgbModalStack.prototype._createFromTemplateRef = /**\n     * @private\n     * @param {?} content\n     * @param {?} activeModal\n     * @return {?}\n     */\n    function (content, activeModal) {\n        /** @type {?} */\n        var context = {\n            $implicit: activeModal,\n            close: /**\n             * @param {?} result\n             * @return {?}\n             */\n            function (result) { activeModal.close(result); },\n            dismiss: /**\n             * @param {?} reason\n             * @return {?}\n             */\n            function (reason) { activeModal.dismiss(reason); }\n        };\n        /** @type {?} */\n        var viewRef = content.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    };\n    /**\n     * @private\n     * @param {?} content\n     * @return {?}\n     */\n    NgbModalStack.prototype._createFromString = /**\n     * @private\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        /** @type {?} */\n        var component = this._document.createTextNode(\"\" + content);\n        return new ContentRef([[component]]);\n    };\n    /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    NgbModalStack.prototype._createFromComponent = /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    function (moduleCFR, contentInjector, content, context, options) {\n        /** @type {?} */\n        var contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n        /** @type {?} */\n        var modalContentInjector = Injector.create({ providers: [{ provide: NgbActiveModal, useValue: context }], parent: contentInjector });\n        /** @type {?} */\n        var componentRef = contentCmptFactory.create(modalContentInjector);\n        /** @type {?} */\n        var componentNativeEl = componentRef.location.nativeElement;\n        if (options.scrollable) {\n            ((/** @type {?} */ (componentNativeEl))).classList.add('component-host-scrollable');\n        }\n        this._applicationRef.attachView(componentRef.hostView);\n        // FIXME: we should here get rid of the component nativeElement\n        // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n        return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    };\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    NgbModalStack.prototype._setAriaHidden = /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        /** @type {?} */\n        var parent = element.parentElement;\n        if (parent && element !== this._document.body) {\n            Array.from(parent.children).forEach((/**\n             * @param {?} sibling\n             * @return {?}\n             */\n            function (sibling) {\n                if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n                    _this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }));\n            this._setAriaHidden(parent);\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbModalStack.prototype._revertAriaHidden = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._ariaHiddenValues.forEach((/**\n         * @param {?} value\n         * @param {?} element\n         * @return {?}\n         */\n        function (value, element) {\n            if (value) {\n                element.setAttribute('aria-hidden', value);\n            }\n            else {\n                element.removeAttribute('aria-hidden');\n            }\n        }));\n        this._ariaHiddenValues.clear();\n    };\n    /**\n     * @private\n     * @param {?} ngbModalRef\n     * @return {?}\n     */\n    NgbModalStack.prototype._registerModalRef = /**\n     * @private\n     * @param {?} ngbModalRef\n     * @return {?}\n     */\n    function (ngbModalRef) {\n        var _this = this;\n        /** @type {?} */\n        var unregisterModalRef = (/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var index = _this._modalRefs.indexOf(ngbModalRef);\n            if (index > -1) {\n                _this._modalRefs.splice(index, 1);\n            }\n        });\n        this._modalRefs.push(ngbModalRef);\n        ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    };\n    /**\n     * @private\n     * @param {?} ngbWindowCmpt\n     * @return {?}\n     */\n    NgbModalStack.prototype._registerWindowCmpt = /**\n     * @private\n     * @param {?} ngbWindowCmpt\n     * @return {?}\n     */\n    function (ngbWindowCmpt) {\n        var _this = this;\n        this._windowCmpts.push(ngbWindowCmpt);\n        this._activeWindowCmptHasChanged.next();\n        ngbWindowCmpt.onDestroy((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var index = _this._windowCmpts.indexOf(ngbWindowCmpt);\n            if (index > -1) {\n                _this._windowCmpts.splice(index, 1);\n                _this._activeWindowCmptHasChanged.next();\n            }\n        }));\n    };\n    NgbModalStack.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */\n    NgbModalStack.ctorParameters = function () { return [\n        { type: ApplicationRef },\n        { type: Injector },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: ScrollBar },\n        { type: RendererFactory2 },\n        { type: NgZone }\n    ]; };\n    /** @nocollapse */ NgbModalStack.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbModalStack_Factory() { return new NgbModalStack(ɵɵinject(ApplicationRef), ɵɵinject(INJECTOR), ɵɵinject(DOCUMENT), ɵɵinject(ScrollBar), ɵɵinject(RendererFactory2), ɵɵinject(NgZone)); }, token: NgbModalStack, providedIn: \"root\" });\n    return NgbModalStack;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\nvar NgbModal = /** @class */ (function () {\n    function NgbModal(_moduleCFR, _injector, _modalStack, _config) {\n        this._moduleCFR = _moduleCFR;\n        this._injector = _injector;\n        this._modalStack = _modalStack;\n        this._config = _config;\n    }\n    /**\n     * Opens a new modal window with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n     * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n     *\n     * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n     */\n    /**\n     * Opens a new modal window with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n     * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n     *\n     * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    NgbModal.prototype.open = /**\n     * Opens a new modal window with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n     * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n     *\n     * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    function (content, options) {\n        if (options === void 0) { options = {}; }\n        /** @type {?} */\n        var combinedOptions = Object.assign({}, this._config, options);\n        return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n    };\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * @since 3.1.0\n     */\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * \\@since 3.1.0\n     * @param {?=} reason\n     * @return {?}\n     */\n    NgbModal.prototype.dismissAll = /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * \\@since 3.1.0\n     * @param {?=} reason\n     * @return {?}\n     */\n    function (reason) { this._modalStack.dismissAll(reason); };\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * @since 3.3.0\n     */\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * \\@since 3.3.0\n     * @return {?}\n     */\n    NgbModal.prototype.hasOpenModals = /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * \\@since 3.3.0\n     * @return {?}\n     */\n    function () { return this._modalStack.hasOpenModals(); };\n    NgbModal.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */\n    NgbModal.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver },\n        { type: Injector },\n        { type: NgbModalStack },\n        { type: NgbModalConfig }\n    ]; };\n    /** @nocollapse */ NgbModal.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbModal_Factory() { return new NgbModal(ɵɵinject(ComponentFactoryResolver), ɵɵinject(INJECTOR), ɵɵinject(NgbModalStack), ɵɵinject(NgbModalConfig)); }, token: NgbModal, providedIn: \"root\" });\n    return NgbModal;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbModalModule = /** @class */ (function () {\n    function NgbModalModule() {\n    }\n    NgbModalModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [NgbModalBackdrop, NgbModalWindow],\n                    entryComponents: [NgbModalBackdrop, NgbModalWindow],\n                    providers: [NgbModal]\n                },] }\n    ];\n    return NgbModalModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * \\@since 5.2.0\n */\nvar NgbNavConfig = /** @class */ (function () {\n    function NgbNavConfig() {\n        this.destroyOnHide = true;\n        this.orientation = 'horizontal';\n        this.roles = 'tablist';\n    }\n    NgbNavConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbNavConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbNavConfig_Factory() { return new NgbNavConfig(); }, token: NgbNavConfig, providedIn: \"root\" });\n    return NgbNavConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar isValidNavId = (/**\n * @param {?} id\n * @return {?}\n */\nfunction (id) { return isDefined(id) && id !== ''; });\n/** @type {?} */\nvar navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * \\@since 5.2.0\n */\nvar NgbNavContent = /** @class */ (function () {\n    function NgbNavContent(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbNavContent.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbNavContent]' },] }\n    ];\n    /** @nocollapse */\n    NgbNavContent.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbNavContent;\n}());\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * \\@since 5.2.0\n */\nvar NgbNavItem = /** @class */ (function () {\n    function NgbNavItem(nav, elementRef) {\n        this.elementRef = elementRef;\n        /**\n         * If `true`, the current nav item is disabled and can't be toggled by user.\n         *\n         * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n         */\n        this.disabled = false;\n        // TODO: cf https://github.com/angular/angular/issues/30106\n        this._nav = nav;\n    }\n    /**\n     * @return {?}\n     */\n    NgbNavItem.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.contentTpl = this.contentTpls.first;\n    };\n    /**\n     * @return {?}\n     */\n    NgbNavItem.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!isDefined(this.domId)) {\n            this.domId = \"ngb-nav-\" + navCounter++;\n        }\n    };\n    Object.defineProperty(NgbNavItem.prototype, \"active\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._nav.activeId === this.id; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbNavItem.prototype, \"id\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return isValidNavId(this._id) ? this._id : this.domId; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbNavItem.prototype, \"panelDomId\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.domId + \"-panel\"; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgbNavItem.prototype.isPanelInDom = /**\n     * @return {?}\n     */\n    function () {\n        return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n    };\n    NgbNavItem.decorators = [\n        { type: Directive, args: [{ selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: { '[class.nav-item]': 'true' } },] }\n    ];\n    /** @nocollapse */\n    NgbNavItem.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**\n                         * @return {?}\n                         */\n                        function () { return NgbNav; })),] }] },\n        { type: ElementRef }\n    ]; };\n    NgbNavItem.propDecorators = {\n        destroyOnHide: [{ type: Input }],\n        disabled: [{ type: Input }],\n        domId: [{ type: Input }],\n        _id: [{ type: Input, args: ['ngbNavItem',] }],\n        contentTpls: [{ type: ContentChildren, args: [NgbNavContent, { descendants: false },] }]\n    };\n    return NgbNavItem;\n}());\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * \\@since 5.2.0\n */\nvar NgbNav = /** @class */ (function () {\n    function NgbNav(role, config, _cd) {\n        this.role = role;\n        this._cd = _cd;\n        /**\n         * The event emitted after the active nav changes\n         * The payload of the event is the newly active nav id\n         *\n         * If you want to prevent nav change, you should use `(navChange)` event\n         */\n        this.activeIdChange = new EventEmitter();\n        /**\n         * The nav change event emitted right before the nav change happens on user click.\n         *\n         * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n         *\n         * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n         */\n        this.navChange = new EventEmitter();\n        this.destroyOnHide = config.destroyOnHide;\n        this.orientation = config.orientation;\n        this.roles = config.roles;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    NgbNav.prototype.click = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        if (!item.disabled) {\n            this._updateActiveId(item.id);\n        }\n    };\n    /**\n     * Selects the nav with the given id and shows its associated pane.\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n     */\n    /**\n     * Selects the nav with the given id and shows its associated pane.\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n     * @param {?} id\n     * @return {?}\n     */\n    NgbNav.prototype.select = /**\n     * Selects the nav with the given id and shows its associated pane.\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) { this._updateActiveId(id, false); };\n    /**\n     * @return {?}\n     */\n    NgbNav.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!isDefined(this.activeId)) {\n            /** @type {?} */\n            var nextId = this.items.first ? this.items.first.id : null;\n            if (isValidNavId(nextId)) {\n                this._updateActiveId(nextId, false);\n                this._cd.detectChanges();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {?} nextId\n     * @param {?=} emitNavChange\n     * @return {?}\n     */\n    NgbNav.prototype._updateActiveId = /**\n     * @private\n     * @param {?} nextId\n     * @param {?=} emitNavChange\n     * @return {?}\n     */\n    function (nextId, emitNavChange) {\n        if (emitNavChange === void 0) { emitNavChange = true; }\n        if (this.activeId !== nextId) {\n            /** @type {?} */\n            var defaultPrevented_1 = false;\n            if (emitNavChange) {\n                this.navChange.emit({ activeId: this.activeId, nextId: nextId, preventDefault: (/**\n                     * @return {?}\n                     */\n                    function () { defaultPrevented_1 = true; }) });\n            }\n            if (!defaultPrevented_1) {\n                this.activeId = nextId;\n                this.activeIdChange.emit(nextId);\n            }\n        }\n    };\n    NgbNav.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbNav]',\n                    exportAs: 'ngbNav',\n                    host: {\n                        '[class.nav]': 'true',\n                        '[class.flex-column]': \"orientation === 'vertical'\",\n                        '[attr.aria-orientation]': \"orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined\",\n                        '[attr.role]': \"role ? role : roles ? 'tablist' : undefined\",\n                    }\n                },] }\n    ];\n    /** @nocollapse */\n    NgbNav.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n        { type: NgbNavConfig },\n        { type: ChangeDetectorRef }\n    ]; };\n    NgbNav.propDecorators = {\n        activeId: [{ type: Input }],\n        activeIdChange: [{ type: Output }],\n        destroyOnHide: [{ type: Input }],\n        orientation: [{ type: Input }],\n        roles: [{ type: Input }],\n        items: [{ type: ContentChildren, args: [NgbNavItem,] }],\n        navChange: [{ type: Output }]\n    };\n    return NgbNav;\n}());\n/**\n * A directive to put on the nav link.\n *\n * \\@since 5.2.0\n */\nvar NgbNavLink = /** @class */ (function () {\n    function NgbNavLink(role, navItem, nav) {\n        this.role = role;\n        this.navItem = navItem;\n        this.nav = nav;\n    }\n    /**\n     * @return {?}\n     */\n    NgbNavLink.prototype.hasNavItemClass = /**\n     * @return {?}\n     */\n    function () {\n        // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n        return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n    };\n    NgbNavLink.decorators = [\n        { type: Directive, args: [{\n                    selector: 'a[ngbNavLink]',\n                    host: {\n                        '[id]': 'navItem.domId',\n                        '[class.nav-link]': 'true',\n                        '[class.nav-item]': 'hasNavItemClass()',\n                        '[attr.role]': \"role ? role : nav.roles ? 'tab' : undefined\",\n                        'href': '',\n                        '[class.active]': 'navItem.active',\n                        '[class.disabled]': 'navItem.disabled',\n                        '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n                        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n                        '[attr.aria-selected]': 'navItem.active',\n                        '[attr.aria-disabled]': 'navItem.disabled',\n                        '(click)': 'nav.click(navItem); $event.preventDefault()'\n                    }\n                },] }\n    ];\n    /** @nocollapse */\n    NgbNavLink.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n        { type: NgbNavItem },\n        { type: NgbNav }\n    ]; };\n    return NgbNavLink;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * \\@since 5.2.0\n */\nvar NgbNavOutlet = /** @class */ (function () {\n    function NgbNavOutlet() {\n    }\n    NgbNavOutlet.decorators = [\n        { type: Component, args: [{\n                    selector: '[ngbNavOutlet]',\n                    host: { '[class.tab-content]': 'true' },\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"\\n      <ng-template ngFor let-item [ngForOf]=\\\"nav.items\\\">\\n          <div class=\\\"tab-pane\\\"\\n               *ngIf=\\\"item.isPanelInDom()\\\"\\n               [id]=\\\"item.panelDomId\\\"\\n               [class.active]=\\\"item.active\\\"\\n               [attr.role]=\\\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\\\"\\n               [attr.aria-labelledby]=\\\"item.domId\\\">\\n              <ng-template [ngTemplateOutlet]=\\\"item.contentTpl?.templateRef\\\" [ngTemplateOutletContext]=\\\"{$implicit: item.active}\\\"></ng-template>\\n          </div>\\n      </ng-template>\\n  \"\n                }] }\n    ];\n    NgbNavOutlet.propDecorators = {\n        paneRole: [{ type: Input }],\n        nav: [{ type: Input, args: ['ngbNavOutlet',] }]\n    };\n    return NgbNavOutlet;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\nvar NgbNavModule = /** @class */ (function () {\n    function NgbNavModule() {\n    }\n    NgbNavModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule] },] }\n    ];\n    return NgbNavModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nvar NgbPaginationConfig = /** @class */ (function () {\n    function NgbPaginationConfig() {\n        this.disabled = false;\n        this.boundaryLinks = false;\n        this.directionLinks = true;\n        this.ellipses = true;\n        this.maxSize = 0;\n        this.pageSize = 10;\n        this.rotate = false;\n    }\n    NgbPaginationConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbPaginationConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbPaginationConfig_Factory() { return new NgbPaginationConfig(); }, token: NgbPaginationConfig, providedIn: \"root\" });\n    return NgbPaginationConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A directive to match the 'ellipsis' link template\n *\n * \\@since 4.1.0\n */\nvar NgbPaginationEllipsis = /** @class */ (function () {\n    function NgbPaginationEllipsis(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPaginationEllipsis.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPaginationEllipsis]' },] }\n    ];\n    /** @nocollapse */\n    NgbPaginationEllipsis.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbPaginationEllipsis;\n}());\n/**\n * A directive to match the 'first' link template\n *\n * \\@since 4.1.0\n */\nvar NgbPaginationFirst = /** @class */ (function () {\n    function NgbPaginationFirst(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPaginationFirst.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPaginationFirst]' },] }\n    ];\n    /** @nocollapse */\n    NgbPaginationFirst.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbPaginationFirst;\n}());\n/**\n * A directive to match the 'last' link template\n *\n * \\@since 4.1.0\n */\nvar NgbPaginationLast = /** @class */ (function () {\n    function NgbPaginationLast(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPaginationLast.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPaginationLast]' },] }\n    ];\n    /** @nocollapse */\n    NgbPaginationLast.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbPaginationLast;\n}());\n/**\n * A directive to match the 'next' link template\n *\n * \\@since 4.1.0\n */\nvar NgbPaginationNext = /** @class */ (function () {\n    function NgbPaginationNext(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPaginationNext.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPaginationNext]' },] }\n    ];\n    /** @nocollapse */\n    NgbPaginationNext.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbPaginationNext;\n}());\n/**\n * A directive to match the page 'number' link template\n *\n * \\@since 4.1.0\n */\nvar NgbPaginationNumber = /** @class */ (function () {\n    function NgbPaginationNumber(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPaginationNumber.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPaginationNumber]' },] }\n    ];\n    /** @nocollapse */\n    NgbPaginationNumber.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbPaginationNumber;\n}());\n/**\n * A directive to match the 'previous' link template\n *\n * \\@since 4.1.0\n */\nvar NgbPaginationPrevious = /** @class */ (function () {\n    function NgbPaginationPrevious(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPaginationPrevious.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPaginationPrevious]' },] }\n    ];\n    /** @nocollapse */\n    NgbPaginationPrevious.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbPaginationPrevious;\n}());\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\nvar NgbPagination = /** @class */ (function () {\n    function NgbPagination(config) {\n        this.pageCount = 0;\n        this.pages = [];\n        /**\n         *  The current page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.page = 1;\n        /**\n         *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n         *\n         *  Event payload is the number of the newly selected page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.pageChange = new EventEmitter(true);\n        this.disabled = config.disabled;\n        this.boundaryLinks = config.boundaryLinks;\n        this.directionLinks = config.directionLinks;\n        this.ellipses = config.ellipses;\n        this.maxSize = config.maxSize;\n        this.pageSize = config.pageSize;\n        this.rotate = config.rotate;\n        this.size = config.size;\n    }\n    /**\n     * @return {?}\n     */\n    NgbPagination.prototype.hasPrevious = /**\n     * @return {?}\n     */\n    function () { return this.page > 1; };\n    /**\n     * @return {?}\n     */\n    NgbPagination.prototype.hasNext = /**\n     * @return {?}\n     */\n    function () { return this.page < this.pageCount; };\n    /**\n     * @return {?}\n     */\n    NgbPagination.prototype.nextDisabled = /**\n     * @return {?}\n     */\n    function () { return !this.hasNext() || this.disabled; };\n    /**\n     * @return {?}\n     */\n    NgbPagination.prototype.previousDisabled = /**\n     * @return {?}\n     */\n    function () { return !this.hasPrevious() || this.disabled; };\n    /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    NgbPagination.prototype.selectPage = /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    function (pageNumber) { this._updatePages(pageNumber); };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgbPagination.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) { this._updatePages(this.page); };\n    /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    NgbPagination.prototype.isEllipsis = /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    function (pageNumber) { return pageNumber === -1; };\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     * @private\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    NgbPagination.prototype._applyEllipses = /**\n     * Appends ellipses and first/last page number to the displayed pages\n     * @private\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (this.ellipses) {\n            if (start > 0) {\n                // The first page will always be included. If the displayed range\n                // starts after the third page, then add ellipsis. But if the range\n                // starts on the third page, then add the second page instead of\n                // an ellipsis, because the ellipsis would only hide a single page.\n                if (start > 2) {\n                    this.pages.unshift(-1);\n                }\n                else if (start === 2) {\n                    this.pages.unshift(2);\n                }\n                this.pages.unshift(1);\n            }\n            if (end < this.pageCount) {\n                // The last page will always be included. If the displayed range\n                // ends before the third-last page, then add ellipsis. But if the range\n                // ends on third-last page, then add the second-last page instead of\n                // an ellipsis, because the ellipsis would only hide a single page.\n                if (end < (this.pageCount - 2)) {\n                    this.pages.push(-1);\n                }\n                else if (end === (this.pageCount - 2)) {\n                    this.pages.push(this.pageCount - 1);\n                }\n                this.pages.push(this.pageCount);\n            }\n        }\n    };\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     * @private\n     * @return {?}\n     */\n    NgbPagination.prototype._applyRotation = /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var start = 0;\n        /** @type {?} */\n        var end = this.pageCount;\n        /** @type {?} */\n        var leftOffset = Math.floor(this.maxSize / 2);\n        /** @type {?} */\n        var rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n        if (this.page <= leftOffset) {\n            // very beginning, no rotation -> [0..maxSize]\n            end = this.maxSize;\n        }\n        else if (this.pageCount - this.page < leftOffset) {\n            // very end, no rotation -> [len-maxSize..len]\n            start = this.pageCount - this.maxSize;\n        }\n        else {\n            // rotate\n            start = this.page - leftOffset - 1;\n            end = this.page + rightOffset;\n        }\n        return [start, end];\n    };\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     */\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     * @private\n     * @return {?}\n     */\n    NgbPagination.prototype._applyPagination = /**\n     * Paginates page numbers based on maxSize items per page.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var page = Math.ceil(this.page / this.maxSize) - 1;\n        /** @type {?} */\n        var start = page * this.maxSize;\n        /** @type {?} */\n        var end = start + this.maxSize;\n        return [start, end];\n    };\n    /**\n     * @private\n     * @param {?} newPageNo\n     * @return {?}\n     */\n    NgbPagination.prototype._setPageInRange = /**\n     * @private\n     * @param {?} newPageNo\n     * @return {?}\n     */\n    function (newPageNo) {\n        /** @type {?} */\n        var prevPageNo = this.page;\n        this.page = getValueInRange(newPageNo, this.pageCount, 1);\n        if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n            this.pageChange.emit(this.page);\n        }\n    };\n    /**\n     * @private\n     * @param {?} newPage\n     * @return {?}\n     */\n    NgbPagination.prototype._updatePages = /**\n     * @private\n     * @param {?} newPage\n     * @return {?}\n     */\n    function (newPage) {\n        var _a, _b;\n        this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n        if (!isNumber(this.pageCount)) {\n            this.pageCount = 0;\n        }\n        // fill-in model needed to render pages\n        this.pages.length = 0;\n        for (var i = 1; i <= this.pageCount; i++) {\n            this.pages.push(i);\n        }\n        // set page within 1..max range\n        this._setPageInRange(newPage);\n        // apply maxSize if necessary\n        if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n            /** @type {?} */\n            var start = 0;\n            /** @type {?} */\n            var end = this.pageCount;\n            // either paginating or rotating page numbers\n            if (this.rotate) {\n                _a = __read(this._applyRotation(), 2), start = _a[0], end = _a[1];\n            }\n            else {\n                _b = __read(this._applyPagination(), 2), start = _b[0], end = _b[1];\n            }\n            this.pages = this.pages.slice(start, end);\n            // adding ellipses\n            this._applyEllipses(start, end);\n        }\n    };\n    NgbPagination.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-pagination',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'role': 'navigation' },\n                    template: \"\\n    <ng-template #first><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.first\\\">&laquo;&laquo;</span></ng-template>\\n    <ng-template #previous><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.previous\\\">&laquo;</span></ng-template>\\n    <ng-template #next><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.next\\\">&raquo;</span></ng-template>\\n    <ng-template #last><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.last\\\">&raquo;&raquo;</span></ng-template>\\n    <ng-template #ellipsis>...</ng-template>\\n    <ng-template #defaultNumber let-page let-currentPage=\\\"currentPage\\\">\\n      {{ page }}\\n      <span *ngIf=\\\"page === currentPage\\\" class=\\\"sr-only\\\">(current)</span>\\n    </ng-template>\\n    <ul [class]=\\\"'pagination' + (size ? ' pagination-' + size : '')\\\">\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"previousDisabled()\\\">\\n        <a aria-label=\\\"First\\\" i18n-aria-label=\\\"@@ngb.pagination.first-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(1); $event.preventDefault()\\\" [attr.tabindex]=\\\"previousDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"previousDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplFirst?.templateRef || first\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: previousDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"previousDisabled()\\\">\\n        <a aria-label=\\\"Previous\\\" i18n-aria-label=\\\"@@ngb.pagination.previous-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(page-1); $event.preventDefault()\\\" [attr.tabindex]=\\\"previousDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"previousDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplPrevious?.templateRef || previous\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: previousDisabled()}\\\"></ng-template>\\n        </a>\\n      </li>\\n      <li *ngFor=\\\"let pageNumber of pages\\\" class=\\\"page-item\\\" [class.active]=\\\"pageNumber === page\\\"\\n        [class.disabled]=\\\"isEllipsis(pageNumber) || disabled\\\" [attr.aria-current]=\\\"(pageNumber === page ? 'page' : null)\\\">\\n        <a *ngIf=\\\"isEllipsis(pageNumber)\\\" class=\\\"page-link\\\" tabindex=\\\"-1\\\" aria-disabled=\\\"true\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplEllipsis?.templateRef || ellipsis\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: true, currentPage: page}\\\"></ng-template>\\n        </a>\\n        <a *ngIf=\\\"!isEllipsis(pageNumber)\\\" class=\\\"page-link\\\" href (click)=\\\"selectPage(pageNumber); $event.preventDefault()\\\" [attr.tabindex]=\\\"disabled ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"disabled ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplNumber?.templateRef || defaultNumber\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"nextDisabled()\\\">\\n        <a aria-label=\\\"Next\\\" i18n-aria-label=\\\"@@ngb.pagination.next-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(page+1); $event.preventDefault()\\\" [attr.tabindex]=\\\"nextDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"nextDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplNext?.templateRef || next\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: nextDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"nextDisabled()\\\">\\n        <a aria-label=\\\"Last\\\" i18n-aria-label=\\\"@@ngb.pagination.last-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(pageCount); $event.preventDefault()\\\" [attr.tabindex]=\\\"nextDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"nextDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplLast?.templateRef || last\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: nextDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n    </ul>\\n  \"\n                }] }\n    ];\n    /** @nocollapse */\n    NgbPagination.ctorParameters = function () { return [\n        { type: NgbPaginationConfig }\n    ]; };\n    NgbPagination.propDecorators = {\n        tplEllipsis: [{ type: ContentChild, args: [NgbPaginationEllipsis, { static: false },] }],\n        tplFirst: [{ type: ContentChild, args: [NgbPaginationFirst, { static: false },] }],\n        tplLast: [{ type: ContentChild, args: [NgbPaginationLast, { static: false },] }],\n        tplNext: [{ type: ContentChild, args: [NgbPaginationNext, { static: false },] }],\n        tplNumber: [{ type: ContentChild, args: [NgbPaginationNumber, { static: false },] }],\n        tplPrevious: [{ type: ContentChild, args: [NgbPaginationPrevious, { static: false },] }],\n        disabled: [{ type: Input }],\n        boundaryLinks: [{ type: Input }],\n        directionLinks: [{ type: Input }],\n        ellipses: [{ type: Input }],\n        rotate: [{ type: Input }],\n        collectionSize: [{ type: Input }],\n        maxSize: [{ type: Input }],\n        page: [{ type: Input }],\n        pageSize: [{ type: Input }],\n        pageChange: [{ type: Output }],\n        size: [{ type: Input }]\n    };\n    return NgbPagination;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar DIRECTIVES = [\n    NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n    NgbPaginationPrevious\n];\nvar NgbPaginationModule = /** @class */ (function () {\n    function NgbPaginationModule() {\n    }\n    NgbPaginationModule.decorators = [\n        { type: NgModule, args: [{ declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule] },] }\n    ];\n    return NgbPaginationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar Trigger = /** @class */ (function () {\n    function Trigger(open, close) {\n        this.open = open;\n        this.close = close;\n        if (!close) {\n            this.close = open;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Trigger.prototype.isManual = /**\n     * @return {?}\n     */\n    function () { return this.open === 'manual' || this.close === 'manual'; };\n    return Trigger;\n}());\n/** @type {?} */\nvar DEFAULT_ALIASES = {\n    'hover': ['mouseenter', 'mouseleave'],\n    'focus': ['focusin', 'focusout'],\n};\n/**\n * @param {?} triggers\n * @param {?=} aliases\n * @return {?}\n */\nfunction parseTriggers(triggers, aliases) {\n    if (aliases === void 0) { aliases = DEFAULT_ALIASES; }\n    /** @type {?} */\n    var trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    /** @type {?} */\n    var parsedTriggers = trimmedTriggers.split(/\\s+/).map((/**\n     * @param {?} trigger\n     * @return {?}\n     */\n    function (trigger) { return trigger.split(':'); })).map((/**\n     * @param {?} triggerPair\n     * @return {?}\n     */\n    function (triggerPair) {\n        /** @type {?} */\n        var alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    }));\n    /** @type {?} */\n    var manualTriggers = parsedTriggers.filter((/**\n     * @param {?} triggerPair\n     * @return {?}\n     */\n    function (triggerPair) { return triggerPair.isManual(); }));\n    if (manualTriggers.length > 1) {\n        throw 'Triggers parse error: only one manual trigger is allowed';\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n    }\n    return parsedTriggers;\n}\n/**\n * @param {?} renderer\n * @param {?} nativeElement\n * @param {?} triggers\n * @param {?} isOpenedFn\n * @return {?}\n */\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n    return new Observable((/**\n     * @param {?} subscriber\n     * @return {?}\n     */\n    function (subscriber) {\n        /** @type {?} */\n        var listeners = [];\n        /** @type {?} */\n        var openFn = (/**\n         * @return {?}\n         */\n        function () { return subscriber.next(true); });\n        /** @type {?} */\n        var closeFn = (/**\n         * @return {?}\n         */\n        function () { return subscriber.next(false); });\n        /** @type {?} */\n        var toggleFn = (/**\n         * @return {?}\n         */\n        function () { return subscriber.next(!isOpenedFn()); });\n        triggers.forEach((/**\n         * @param {?} trigger\n         * @return {?}\n         */\n        function (trigger) {\n            if (trigger.open === trigger.close) {\n                listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n            }\n            else {\n                listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n            }\n        }));\n        return (/**\n         * @return {?}\n         */\n        function () { listeners.forEach((/**\n         * @param {?} unsubscribeFn\n         * @return {?}\n         */\n        function (unsubscribeFn) { return unsubscribeFn(); })); });\n    }));\n}\n/** @type {?} */\nvar delayOrNoop = (/**\n * @template T\n * @param {?} time\n * @return {?}\n */\nfunction (time) { return time > 0 ? delay(time) : (/**\n * @param {?} a\n * @return {?}\n */\nfunction (a) { return a; }); });\n/**\n * @param {?} openDelay\n * @param {?} closeDelay\n * @param {?} isOpenedFn\n * @return {?}\n */\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n    return (/**\n     * @param {?} input$\n     * @return {?}\n     */\n    function (input$) {\n        /** @type {?} */\n        var pending = null;\n        /** @type {?} */\n        var filteredInput$ = input$.pipe(map((/**\n         * @param {?} open\n         * @return {?}\n         */\n        function (open) { return ({ open: open }); })), filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            /** @type {?} */\n            var currentlyOpen = isOpenedFn();\n            if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n                pending = event;\n                return true;\n            }\n            if (pending && pending.open !== event.open) {\n                pending = null;\n            }\n            return false;\n        })), share());\n        /** @type {?} */\n        var delayedOpen$ = filteredInput$.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) { return event.open; })), delayOrNoop(openDelay));\n        /** @type {?} */\n        var delayedClose$ = filteredInput$.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) { return !event.open; })), delayOrNoop(closeDelay));\n        return merge(delayedOpen$, delayedClose$)\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n            }\n            return false;\n        })), map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) { return event.open; })));\n    });\n}\n/**\n * @param {?} renderer\n * @param {?} nativeElement\n * @param {?} triggers\n * @param {?} isOpenedFn\n * @param {?} openFn\n * @param {?} closeFn\n * @param {?=} openDelay\n * @param {?=} closeDelay\n * @return {?}\n */\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn, openDelay, closeDelay) {\n    if (openDelay === void 0) { openDelay = 0; }\n    if (closeDelay === void 0) { closeDelay = 0; }\n    /** @type {?} */\n    var parsedTriggers = parseTriggers(triggers);\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return (/**\n         * @return {?}\n         */\n        function () { });\n    }\n    /** @type {?} */\n    var subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n        .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n        .subscribe((/**\n     * @param {?} open\n     * @return {?}\n     */\n    function (open) { return (open ? openFn() : closeFn()); }));\n    return (/**\n     * @return {?}\n     */\n    function () { return subscription.unsubscribe(); });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nvar NgbPopoverConfig = /** @class */ (function () {\n    function NgbPopoverConfig() {\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.triggers = 'click';\n        this.disablePopover = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n    NgbPopoverConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbPopoverConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbPopoverConfig_Factory() { return new NgbPopoverConfig(); }, token: NgbPopoverConfig, providedIn: \"root\" });\n    return NgbPopoverConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar nextId$3 = 0;\nvar NgbPopoverWindow = /** @class */ (function () {\n    function NgbPopoverWindow() {\n    }\n    /**\n     * @return {?}\n     */\n    NgbPopoverWindow.prototype.isTitleTemplate = /**\n     * @return {?}\n     */\n    function () { return this.title instanceof TemplateRef; };\n    NgbPopoverWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-popover-window',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: { '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id' },\n                    template: \"\\n    <div class=\\\"arrow\\\"></div>\\n    <h3 class=\\\"popover-header\\\" *ngIf=\\\"title != null\\\">\\n      <ng-template #simpleTitle>{{title}}</ng-template>\\n      <ng-template [ngTemplateOutlet]=\\\"isTitleTemplate() ? title : simpleTitle\\\" [ngTemplateOutletContext]=\\\"context\\\"></ng-template>\\n    </h3>\\n    <div class=\\\"popover-body\\\"><ng-content></ng-content></div>\",\n                    styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{top:50%;margin-top:-.5rem}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{top:auto;bottom:.7em}\"]\n                }] }\n    ];\n    NgbPopoverWindow.propDecorators = {\n        title: [{ type: Input }],\n        id: [{ type: Input }],\n        popoverClass: [{ type: Input }],\n        context: [{ type: Input }]\n    };\n    return NgbPopoverWindow;\n}());\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\nvar NgbPopover = /** @class */ (function () {\n    function NgbPopover(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        /**\n         * An event emitted when the popover is shown. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the popover is hidden. Contains no payload.\n         */\n        this.hidden = new EventEmitter();\n        this._ngbPopoverWindowId = \"ngb-popover-\" + nextId$3++;\n        this.autoClose = config.autoClose;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disablePopover = config.disablePopover;\n        this.popoverClass = config.popoverClass;\n        this.openDelay = config.openDelay;\n        this.closeDelay = config.closeDelay;\n        this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n        this._zoneSubscription = _ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (_this._windowRef) {\n                positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body', 'bs-popover');\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbPopover.prototype._isDisabled = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this.disablePopover) {\n            return true;\n        }\n        if (!this.ngbPopover && !this.popoverTitle) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     */\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     * @param {?=} context\n     * @return {?}\n     */\n    NgbPopover.prototype.open = /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     * @param {?=} context\n     * @return {?}\n     */\n    function (context) {\n        var _this = this;\n        if (!this._windowRef && !this._isDisabled()) {\n            this._windowRef = this._popupService.open(this.ngbPopover, context);\n            this._windowRef.instance.title = this.popoverTitle;\n            this._windowRef.instance.context = context;\n            this._windowRef.instance.popoverClass = this.popoverClass;\n            this._windowRef.instance.id = this._ngbPopoverWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening popover from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because popover won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the popover from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, (/**\n             * @return {?}\n             */\n            function () { return _this.close(); }), this.hidden, [this._windowRef.location.nativeElement]);\n            this.shown.emit();\n        }\n    };\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     * @return {?}\n     */\n    NgbPopover.prototype.close = /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     * @return {?}\n     */\n    function () {\n        if (this._windowRef) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n            this._changeDetector.markForCheck();\n        }\n    };\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     * @return {?}\n     */\n    NgbPopover.prototype.toggle = /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     * @return {?}\n     */\n    function () {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n    /**\n     * Returns `true`, if the popover is currently shown.\n     * @return {?}\n     */\n    NgbPopover.prototype.isOpen = /**\n     * Returns `true`, if the popover is currently shown.\n     * @return {?}\n     */\n    function () { return this._windowRef != null; };\n    /**\n     * @return {?}\n     */\n    NgbPopover.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    NgbPopover.prototype.ngOnChanges = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var ngbPopover = _a.ngbPopover, popoverTitle = _a.popoverTitle, disablePopover = _a.disablePopover, popoverClass = _a.popoverClass;\n        if (popoverClass && this.isOpen()) {\n            this._windowRef.instance.popoverClass = popoverClass.currentValue;\n        }\n        // close popover if title and content become empty, or disablePopover set to true\n        if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n            this.close();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbPopover.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.close();\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbPopover.decorators = [\n        { type: Directive, args: [{ selector: '[ngbPopover]', exportAs: 'ngbPopover' },] }\n    ];\n    /** @nocollapse */\n    NgbPopover.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 },\n        { type: Injector },\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: NgbPopoverConfig },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: ChangeDetectorRef },\n        { type: ApplicationRef }\n    ]; };\n    NgbPopover.propDecorators = {\n        autoClose: [{ type: Input }],\n        ngbPopover: [{ type: Input }],\n        popoverTitle: [{ type: Input }],\n        placement: [{ type: Input }],\n        triggers: [{ type: Input }],\n        container: [{ type: Input }],\n        disablePopover: [{ type: Input }],\n        popoverClass: [{ type: Input }],\n        openDelay: [{ type: Input }],\n        closeDelay: [{ type: Input }],\n        shown: [{ type: Output }],\n        hidden: [{ type: Output }]\n    };\n    return NgbPopover;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbPopoverModule = /** @class */ (function () {\n    function NgbPopoverModule() {\n    }\n    NgbPopoverModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [NgbPopover, NgbPopoverWindow],\n                    exports: [NgbPopover],\n                    imports: [CommonModule],\n                    entryComponents: [NgbPopoverWindow]\n                },] }\n    ];\n    return NgbPopoverModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nvar NgbProgressbarConfig = /** @class */ (function () {\n    function NgbProgressbarConfig() {\n        this.max = 100;\n        this.animated = false;\n        this.striped = false;\n        this.showValue = false;\n    }\n    NgbProgressbarConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbProgressbarConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbProgressbarConfig_Factory() { return new NgbProgressbarConfig(); }, token: NgbProgressbarConfig, providedIn: \"root\" });\n    return NgbProgressbarConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\nvar NgbProgressbar = /** @class */ (function () {\n    function NgbProgressbar(config) {\n        /**\n         * The current value for the progress bar.\n         *\n         * Should be in the `[0, max]` range.\n         */\n        this.value = 0;\n        this.max = config.max;\n        this.animated = config.animated;\n        this.striped = config.striped;\n        this.textType = config.textType;\n        this.type = config.type;\n        this.showValue = config.showValue;\n        this.height = config.height;\n    }\n    Object.defineProperty(NgbProgressbar.prototype, \"max\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._max; },\n        /**\n         * The maximal value to be displayed in the progress bar.\n         *\n         * Should be a positive number. Will default to 100 otherwise.\n         */\n        set: /**\n         * The maximal value to be displayed in the progress bar.\n         *\n         * Should be a positive number. Will default to 100 otherwise.\n         * @param {?} max\n         * @return {?}\n         */\n        function (max) {\n            this._max = !isNumber(max) || max <= 0 ? 100 : max;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgbProgressbar.prototype.getValue = /**\n     * @return {?}\n     */\n    function () { return getValueInRange(this.value, this.max); };\n    /**\n     * @return {?}\n     */\n    NgbProgressbar.prototype.getPercentValue = /**\n     * @return {?}\n     */\n    function () { return 100 * this.getValue() / this.max; };\n    NgbProgressbar.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-progressbar',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"\\n    <div class=\\\"progress\\\" [style.height]=\\\"height\\\">\\n      <div class=\\\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\\n      {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"getPercentValue()\\\"\\n      [attr.aria-valuenow]=\\\"getValue()\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"max\\\">\\n        <span *ngIf=\\\"showValue\\\" i18n=\\\"@@ngb.progressbar.value\\\">{{getPercentValue()}}%</span><ng-content></ng-content>\\n      </div>\\n    </div>\\n  \"\n                }] }\n    ];\n    /** @nocollapse */\n    NgbProgressbar.ctorParameters = function () { return [\n        { type: NgbProgressbarConfig }\n    ]; };\n    NgbProgressbar.propDecorators = {\n        max: [{ type: Input }],\n        animated: [{ type: Input }],\n        striped: [{ type: Input }],\n        showValue: [{ type: Input }],\n        textType: [{ type: Input }],\n        type: [{ type: Input }],\n        value: [{ type: Input }],\n        height: [{ type: Input }]\n    };\n    return NgbProgressbar;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbProgressbarModule = /** @class */ (function () {\n    function NgbProgressbarModule() {\n    }\n    NgbProgressbarModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule] },] }\n    ];\n    return NgbProgressbarModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nvar NgbRatingConfig = /** @class */ (function () {\n    function NgbRatingConfig() {\n        this.max = 10;\n        this.readonly = false;\n        this.resettable = false;\n    }\n    NgbRatingConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbRatingConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbRatingConfig_Factory() { return new NgbRatingConfig(); }, token: NgbRatingConfig, providedIn: \"root\" });\n    return NgbRatingConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_RATING_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return NgbRating; })),\n    multi: true\n};\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\nvar NgbRating = /** @class */ (function () {\n    function NgbRating(config, _changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.contexts = [];\n        this.disabled = false;\n        /**\n         * An event emitted when the user is hovering over a given rating.\n         *\n         * Event payload equals to the rating being hovered over.\n         */\n        this.hover = new EventEmitter();\n        /**\n         * An event emitted when the user stops hovering over a given rating.\n         *\n         * Event payload equals to the rating of the last item being hovered over.\n         */\n        this.leave = new EventEmitter();\n        /**\n         * An event emitted when the user selects a new rating.\n         *\n         * Event payload equals to the newly selected rating.\n         */\n        this.rateChange = new EventEmitter(true);\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        function () { });\n        this.max = config.max;\n        this.readonly = config.readonly;\n    }\n    /**\n     * @return {?}\n     */\n    NgbRating.prototype.ariaValueText = /**\n     * @return {?}\n     */\n    function () { return this.nextRate + \" out of \" + this.max; };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbRating.prototype.enter = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.readonly && !this.disabled) {\n            this._updateState(value);\n        }\n        this.hover.emit(value);\n    };\n    /**\n     * @return {?}\n     */\n    NgbRating.prototype.handleBlur = /**\n     * @return {?}\n     */\n    function () { this.onTouched(); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbRating.prototype.handleClick = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.readonly && !this.disabled) {\n            this.update(this.resettable && this.rate === value ? 0 : value);\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NgbRating.prototype.handleKeyDown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // tslint:disable-next-line:deprecation\n        switch (event.which) {\n            case Key.ArrowDown:\n            case Key.ArrowLeft:\n                this.update(this.rate - 1);\n                break;\n            case Key.ArrowUp:\n            case Key.ArrowRight:\n                this.update(this.rate + 1);\n                break;\n            case Key.Home:\n                this.update(0);\n                break;\n            case Key.End:\n                this.update(this.max);\n                break;\n            default:\n                return;\n        }\n        // note 'return' in default case\n        event.preventDefault();\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgbRating.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['rate']) {\n            this.update(this.rate);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbRating.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.contexts = Array.from({ length: this.max }, (/**\n         * @param {?} v\n         * @param {?} k\n         * @return {?}\n         */\n        function (v, k) { return ({ fill: 0, index: k }); }));\n        this._updateState(this.rate);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbRating.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbRating.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @return {?}\n     */\n    NgbRating.prototype.reset = /**\n     * @return {?}\n     */\n    function () {\n        this.leave.emit(this.nextRate);\n        this._updateState(this.rate);\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NgbRating.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) { this.disabled = isDisabled; };\n    /**\n     * @param {?} value\n     * @param {?=} internalChange\n     * @return {?}\n     */\n    NgbRating.prototype.update = /**\n     * @param {?} value\n     * @param {?=} internalChange\n     * @return {?}\n     */\n    function (value, internalChange) {\n        if (internalChange === void 0) { internalChange = true; }\n        /** @type {?} */\n        var newRate = getValueInRange(value, this.max, 0);\n        if (!this.readonly && !this.disabled && this.rate !== newRate) {\n            this.rate = newRate;\n            this.rateChange.emit(this.rate);\n        }\n        if (internalChange) {\n            this.onChange(this.rate);\n            this.onTouched();\n        }\n        this._updateState(this.rate);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbRating.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.update(value, false);\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    NgbRating.prototype._getFillValue = /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var diff = this.nextRate - index;\n        if (diff >= 1) {\n            return 100;\n        }\n        if (diff < 1 && diff > 0) {\n            return parseInt((diff * 100).toFixed(2), 10);\n        }\n        return 0;\n    };\n    /**\n     * @private\n     * @param {?} nextValue\n     * @return {?}\n     */\n    NgbRating.prototype._updateState = /**\n     * @private\n     * @param {?} nextValue\n     * @return {?}\n     */\n    function (nextValue) {\n        var _this = this;\n        this.nextRate = nextValue;\n        this.contexts.forEach((/**\n         * @param {?} context\n         * @param {?} index\n         * @return {?}\n         */\n        function (context, index) { return context.fill = _this._getFillValue(index); }));\n    };\n    NgbRating.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-rating',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'd-inline-flex',\n                        '[tabindex]': 'disabled ? -1 : 0',\n                        'role': 'slider',\n                        'aria-valuemin': '0',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuenow]': 'nextRate',\n                        '[attr.aria-valuetext]': 'ariaValueText()',\n                        '[attr.aria-disabled]': 'readonly ? true : null',\n                        '(blur)': 'handleBlur()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '(mouseleave)': 'reset()'\n                    },\n                    template: \"\\n    <ng-template #t let-fill=\\\"fill\\\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"contexts\\\" let-index=\\\"index\\\">\\n      <span class=\\\"sr-only\\\">({{ index < nextRate ? '*' : ' ' }})</span>\\n      <span (mouseenter)=\\\"enter(index + 1)\\\" (click)=\\\"handleClick(index + 1)\\\" [style.cursor]=\\\"readonly || disabled ? 'default' : 'pointer'\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"starTemplate || starTemplateFromContent || t\\\" [ngTemplateOutletContext]=\\\"contexts[index]\\\">\\n        </ng-template>\\n      </span>\\n    </ng-template>\\n  \",\n                    providers: [NGB_RATING_VALUE_ACCESSOR]\n                }] }\n    ];\n    /** @nocollapse */\n    NgbRating.ctorParameters = function () { return [\n        { type: NgbRatingConfig },\n        { type: ChangeDetectorRef }\n    ]; };\n    NgbRating.propDecorators = {\n        max: [{ type: Input }],\n        rate: [{ type: Input }],\n        readonly: [{ type: Input }],\n        resettable: [{ type: Input }],\n        starTemplate: [{ type: Input }],\n        starTemplateFromContent: [{ type: ContentChild, args: [TemplateRef, { static: false },] }],\n        hover: [{ type: Output }],\n        leave: [{ type: Output }],\n        rateChange: [{ type: Output }]\n    };\n    return NgbRating;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbRatingModule = /** @class */ (function () {\n    function NgbRatingModule() {\n    }\n    NgbRatingModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule] },] }\n    ];\n    return NgbRatingModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\nvar NgbTabsetConfig = /** @class */ (function () {\n    function NgbTabsetConfig() {\n        this.justify = 'start';\n        this.orientation = 'horizontal';\n        this.type = 'tabs';\n    }\n    NgbTabsetConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbTabsetConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbTabsetConfig_Factory() { return new NgbTabsetConfig(); }, token: NgbTabsetConfig, providedIn: \"root\" });\n    return NgbTabsetConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar nextId$4 = 0;\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n */\nvar NgbTabTitle = /** @class */ (function () {\n    function NgbTabTitle(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbTabTitle.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbTabTitle]' },] }\n    ];\n    /** @nocollapse */\n    NgbTabTitle.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbTabTitle;\n}());\n/**\n * A directive to wrap content to be displayed in a tab.\n */\nvar NgbTabContent = /** @class */ (function () {\n    function NgbTabContent(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbTabContent.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbTabContent]' },] }\n    ];\n    /** @nocollapse */\n    NgbTabContent.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    return NgbTabContent;\n}());\n/**\n * A directive representing an individual tab.\n */\nvar NgbTab = /** @class */ (function () {\n    function NgbTab() {\n        /**\n         * The tab identifier.\n         *\n         * Must be unique for the entire document for proper accessibility support.\n         */\n        this.id = \"ngb-tab-\" + nextId$4++;\n        /**\n         * If `true`, the current tab is disabled and can't be toggled.\n         */\n        this.disabled = false;\n    }\n    /**\n     * @return {?}\n     */\n    NgbTab.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    };\n    NgbTab.decorators = [\n        { type: Directive, args: [{ selector: 'ngb-tab' },] }\n    ];\n    NgbTab.propDecorators = {\n        id: [{ type: Input }],\n        title: [{ type: Input }],\n        disabled: [{ type: Input }],\n        titleTpls: [{ type: ContentChildren, args: [NgbTabTitle, { descendants: false },] }],\n        contentTpls: [{ type: ContentChildren, args: [NgbTabContent, { descendants: false },] }]\n    };\n    return NgbTab;\n}());\n/**\n * A component that makes it easy to create tabbed interface.\n */\nvar NgbTabset = /** @class */ (function () {\n    function NgbTabset(config) {\n        /**\n         * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n         */\n        this.destroyOnHide = true;\n        /**\n         * A tab change event emitted right before the tab change happens.\n         *\n         * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n         */\n        this.tabChange = new EventEmitter();\n        this.type = config.type;\n        this.justify = config.justify;\n        this.orientation = config.orientation;\n    }\n    Object.defineProperty(NgbTabset.prototype, \"justify\", {\n        /**\n         * The horizontal alignment of the tabs with flexbox utilities.\n         */\n        set: /**\n         * The horizontal alignment of the tabs with flexbox utilities.\n         * @param {?} className\n         * @return {?}\n         */\n        function (className) {\n            if (className === 'fill' || className === 'justified') {\n                this.justifyClass = \"nav-\" + className;\n            }\n            else {\n                this.justifyClass = \"justify-content-\" + className;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Selects the tab with the given id and shows its associated content panel.\n     *\n     * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n     * hidden depending on the `destroyOnHide` value.\n     */\n    /**\n     * Selects the tab with the given id and shows its associated content panel.\n     *\n     * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n     * hidden depending on the `destroyOnHide` value.\n     * @param {?} tabId\n     * @return {?}\n     */\n    NgbTabset.prototype.select = /**\n     * Selects the tab with the given id and shows its associated content panel.\n     *\n     * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n     * hidden depending on the `destroyOnHide` value.\n     * @param {?} tabId\n     * @return {?}\n     */\n    function (tabId) {\n        /** @type {?} */\n        var selectedTab = this._getTabById(tabId);\n        if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n            /** @type {?} */\n            var defaultPrevented_1 = false;\n            this.tabChange.emit({ activeId: this.activeId, nextId: selectedTab.id, preventDefault: (/**\n                 * @return {?}\n                 */\n                function () { defaultPrevented_1 = true; }) });\n            if (!defaultPrevented_1) {\n                this.activeId = selectedTab.id;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbTabset.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // auto-correct activeId that might have been set incorrectly as input\n        /** @type {?} */\n        var activeTab = this._getTabById(this.activeId);\n        this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n    };\n    /**\n     * @private\n     * @param {?} id\n     * @return {?}\n     */\n    NgbTabset.prototype._getTabById = /**\n     * @private\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        /** @type {?} */\n        var tabsWithId = this.tabs.filter((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        function (tab) { return tab.id === id; }));\n        return tabsWithId.length ? tabsWithId[0] : null;\n    };\n    NgbTabset.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-tabset',\n                    exportAs: 'ngbTabset',\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"\\n    <ul [class]=\\\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\\\" role=\\\"tablist\\\">\\n      <li class=\\\"nav-item\\\" *ngFor=\\\"let tab of tabs\\\">\\n        <a [id]=\\\"tab.id\\\" class=\\\"nav-link\\\" [class.active]=\\\"tab.id === activeId\\\" [class.disabled]=\\\"tab.disabled\\\"\\n          href (click)=\\\"select(tab.id); $event.preventDefault()\\\" role=\\\"tab\\\" [attr.tabindex]=\\\"(tab.disabled ? '-1': undefined)\\\"\\n          [attr.aria-controls]=\\\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\\\"\\n          [attr.aria-selected]=\\\"tab.id === activeId\\\" [attr.aria-disabled]=\\\"tab.disabled\\\">\\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\\\"tab.titleTpl?.templateRef\\\"></ng-template>\\n        </a>\\n      </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n      <ng-template ngFor let-tab [ngForOf]=\\\"tabs\\\">\\n        <div\\n          class=\\\"tab-pane {{tab.id === activeId ? 'active' : null}}\\\"\\n          *ngIf=\\\"!destroyOnHide || tab.id === activeId\\\"\\n          role=\\\"tabpanel\\\"\\n          [attr.aria-labelledby]=\\\"tab.id\\\" id=\\\"{{tab.id}}-panel\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tab.contentTpl?.templateRef\\\"></ng-template>\\n        </div>\\n      </ng-template>\\n    </div>\\n  \"\n                }] }\n    ];\n    /** @nocollapse */\n    NgbTabset.ctorParameters = function () { return [\n        { type: NgbTabsetConfig }\n    ]; };\n    NgbTabset.propDecorators = {\n        tabs: [{ type: ContentChildren, args: [NgbTab,] }],\n        activeId: [{ type: Input }],\n        destroyOnHide: [{ type: Input }],\n        justify: [{ type: Input }],\n        orientation: [{ type: Input }],\n        type: [{ type: Input }],\n        tabChange: [{ type: Output }]\n    };\n    return NgbTabset;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\nvar NgbTabsetModule = /** @class */ (function () {\n    function NgbTabsetModule() {\n    }\n    NgbTabsetModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule, NgbNavModule] },] }\n    ];\n    return NgbTabsetModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbTime = /** @class */ (function () {\n    function NgbTime(hour, minute, second) {\n        this.hour = toInteger(hour);\n        this.minute = toInteger(minute);\n        this.second = toInteger(second);\n    }\n    /**\n     * @param {?=} step\n     * @return {?}\n     */\n    NgbTime.prototype.changeHour = /**\n     * @param {?=} step\n     * @return {?}\n     */\n    function (step) {\n        if (step === void 0) { step = 1; }\n        this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n    };\n    /**\n     * @param {?} hour\n     * @return {?}\n     */\n    NgbTime.prototype.updateHour = /**\n     * @param {?} hour\n     * @return {?}\n     */\n    function (hour) {\n        if (isNumber(hour)) {\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n        }\n        else {\n            this.hour = NaN;\n        }\n    };\n    /**\n     * @param {?=} step\n     * @return {?}\n     */\n    NgbTime.prototype.changeMinute = /**\n     * @param {?=} step\n     * @return {?}\n     */\n    function (step) {\n        if (step === void 0) { step = 1; }\n        this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n    };\n    /**\n     * @param {?} minute\n     * @return {?}\n     */\n    NgbTime.prototype.updateMinute = /**\n     * @param {?} minute\n     * @return {?}\n     */\n    function (minute) {\n        if (isNumber(minute)) {\n            this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n            this.changeHour(Math.floor(minute / 60));\n        }\n        else {\n            this.minute = NaN;\n        }\n    };\n    /**\n     * @param {?=} step\n     * @return {?}\n     */\n    NgbTime.prototype.changeSecond = /**\n     * @param {?=} step\n     * @return {?}\n     */\n    function (step) {\n        if (step === void 0) { step = 1; }\n        this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n    };\n    /**\n     * @param {?} second\n     * @return {?}\n     */\n    NgbTime.prototype.updateSecond = /**\n     * @param {?} second\n     * @return {?}\n     */\n    function (second) {\n        if (isNumber(second)) {\n            this.second = second < 0 ? 60 + second % 60 : second % 60;\n            this.changeMinute(Math.floor(second / 60));\n        }\n        else {\n            this.second = NaN;\n        }\n    };\n    /**\n     * @param {?=} checkSecs\n     * @return {?}\n     */\n    NgbTime.prototype.isValid = /**\n     * @param {?=} checkSecs\n     * @return {?}\n     */\n    function (checkSecs) {\n        if (checkSecs === void 0) { checkSecs = true; }\n        return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    };\n    /**\n     * @return {?}\n     */\n    NgbTime.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return (this.hour || 0) + \":\" + (this.minute || 0) + \":\" + (this.second || 0); };\n    return NgbTime;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nvar NgbTimepickerConfig = /** @class */ (function () {\n    function NgbTimepickerConfig() {\n        this.meridian = false;\n        this.spinners = true;\n        this.seconds = false;\n        this.hourStep = 1;\n        this.minuteStep = 1;\n        this.secondStep = 1;\n        this.disabled = false;\n        this.readonlyInputs = false;\n        this.size = 'medium';\n    }\n    NgbTimepickerConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbTimepickerConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbTimepickerConfig_Factory() { return new NgbTimepickerConfig(); }, token: NgbTimepickerConfig, providedIn: \"root\" });\n    return NgbTimepickerConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n    return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * \\@since 2.2.0\n * @abstract\n * @template T\n */\nvar NgbTimeAdapter = /** @class */ (function () {\n    function NgbTimeAdapter() {\n    }\n    NgbTimeAdapter.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY },] }\n    ];\n    /** @nocollapse */ NgbTimeAdapter.ngInjectableDef = ɵɵdefineInjectable({ factory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY, token: NgbTimeAdapter, providedIn: \"root\" });\n    return NgbTimeAdapter;\n}());\nvar NgbTimeStructAdapter = /** @class */ (function (_super) {\n    __extends(NgbTimeStructAdapter, _super);\n    function NgbTimeStructAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     * @param {?} time\n     * @return {?}\n     */\n    NgbTimeStructAdapter.prototype.fromModel = /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     * @param {?} time\n     * @return {?}\n     */\n    function (time) {\n        return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n            { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null } :\n            null;\n    };\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     * @param {?} time\n     * @return {?}\n     */\n    NgbTimeStructAdapter.prototype.toModel = /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     * @param {?} time\n     * @return {?}\n     */\n    function (time) {\n        return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n            { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null } :\n            null;\n    };\n    NgbTimeStructAdapter.decorators = [\n        { type: Injectable }\n    ];\n    return NgbTimeStructAdapter;\n}(NgbTimeAdapter));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} locale\n * @return {?}\n */\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n    return new NgbTimepickerI18nDefault(locale);\n}\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n * @abstract\n */\nvar NgbTimepickerI18n = /** @class */ (function () {\n    function NgbTimepickerI18n() {\n    }\n    NgbTimepickerI18n.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID] },] }\n    ];\n    /** @nocollapse */ NgbTimepickerI18n.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbTimepickerI18n_Factory() { return NGB_TIMEPICKER_I18N_FACTORY(ɵɵinject(LOCALE_ID)); }, token: NgbTimepickerI18n, providedIn: \"root\" });\n    return NgbTimepickerI18n;\n}());\nvar NgbTimepickerI18nDefault = /** @class */ (function (_super) {\n    __extends(NgbTimepickerI18nDefault, _super);\n    function NgbTimepickerI18nDefault(locale) {\n        var _this = _super.call(this) || this;\n        _this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    NgbTimepickerI18nDefault.prototype.getMorningPeriod = /**\n     * @return {?}\n     */\n    function () { return this._periods[0]; };\n    /**\n     * @return {?}\n     */\n    NgbTimepickerI18nDefault.prototype.getAfternoonPeriod = /**\n     * @return {?}\n     */\n    function () { return this._periods[1]; };\n    NgbTimepickerI18nDefault.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    NgbTimepickerI18nDefault.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n    ]; };\n    return NgbTimepickerI18nDefault;\n}(NgbTimepickerI18n));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar FILTER_REGEX = /[^0-9]/g;\n/** @type {?} */\nvar NGB_TIMEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return NgbTimepicker; })),\n    multi: true\n};\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\nvar NgbTimepicker = /** @class */ (function () {\n    function NgbTimepicker(_config, _ngbTimeAdapter, _cd, i18n) {\n        this._config = _config;\n        this._ngbTimeAdapter = _ngbTimeAdapter;\n        this._cd = _cd;\n        this.i18n = i18n;\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        function () { });\n        this.meridian = _config.meridian;\n        this.spinners = _config.spinners;\n        this.seconds = _config.seconds;\n        this.hourStep = _config.hourStep;\n        this.minuteStep = _config.minuteStep;\n        this.secondStep = _config.secondStep;\n        this.disabled = _config.disabled;\n        this.readonlyInputs = _config.readonlyInputs;\n        this.size = _config.size;\n    }\n    Object.defineProperty(NgbTimepicker.prototype, \"hourStep\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._hourStep; },\n        /**\n         * The number of hours to add/subtract when clicking hour spinners.\n         */\n        set: /**\n         * The number of hours to add/subtract when clicking hour spinners.\n         * @param {?} step\n         * @return {?}\n         */\n        function (step) {\n            this._hourStep = isInteger(step) ? step : this._config.hourStep;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbTimepicker.prototype, \"minuteStep\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._minuteStep; },\n        /**\n         * The number of minutes to add/subtract when clicking minute spinners.\n         */\n        set: /**\n         * The number of minutes to add/subtract when clicking minute spinners.\n         * @param {?} step\n         * @return {?}\n         */\n        function (step) {\n            this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbTimepicker.prototype, \"secondStep\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._secondStep; },\n        /**\n         * The number of seconds to add/subtract when clicking second spinners.\n         */\n        set: /**\n         * The number of seconds to add/subtract when clicking second spinners.\n         * @param {?} step\n         * @return {?}\n         */\n        function (step) {\n            this._secondStep = isInteger(step) ? step : this._config.secondStep;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbTimepicker.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var structValue = this._ngbTimeAdapter.fromModel(value);\n        this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n        if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n            this.model.second = 0;\n        }\n        this._cd.markForCheck();\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbTimepicker.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbTimepicker.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NgbTimepicker.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) { this.disabled = isDisabled; };\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    NgbTimepicker.prototype.changeHour = /**\n     * @param {?} step\n     * @return {?}\n     */\n    function (step) {\n        this.model.changeHour(step);\n        this.propagateModelChange();\n    };\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    NgbTimepicker.prototype.changeMinute = /**\n     * @param {?} step\n     * @return {?}\n     */\n    function (step) {\n        this.model.changeMinute(step);\n        this.propagateModelChange();\n    };\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    NgbTimepicker.prototype.changeSecond = /**\n     * @param {?} step\n     * @return {?}\n     */\n    function (step) {\n        this.model.changeSecond(step);\n        this.propagateModelChange();\n    };\n    /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    NgbTimepicker.prototype.updateHour = /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    function (newVal) {\n        /** @type {?} */\n        var isPM = this.model.hour >= 12;\n        /** @type {?} */\n        var enteredHour = toInteger(newVal);\n        if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n            this.model.updateHour(enteredHour + 12);\n        }\n        else {\n            this.model.updateHour(enteredHour);\n        }\n        this.propagateModelChange();\n    };\n    /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    NgbTimepicker.prototype.updateMinute = /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    function (newVal) {\n        this.model.updateMinute(toInteger(newVal));\n        this.propagateModelChange();\n    };\n    /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    NgbTimepicker.prototype.updateSecond = /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    function (newVal) {\n        this.model.updateSecond(toInteger(newVal));\n        this.propagateModelChange();\n    };\n    /**\n     * @return {?}\n     */\n    NgbTimepicker.prototype.toggleMeridian = /**\n     * @return {?}\n     */\n    function () {\n        if (this.meridian) {\n            this.changeHour(12);\n        }\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    NgbTimepicker.prototype.formatInput = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) { input.value = input.value.replace(FILTER_REGEX, ''); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbTimepicker.prototype.formatHour = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (isNumber(value)) {\n            if (this.meridian) {\n                return padNumber(value % 12 === 0 ? 12 : value % 12);\n            }\n            else {\n                return padNumber(value % 24);\n            }\n        }\n        else {\n            return padNumber(NaN);\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbTimepicker.prototype.formatMinSec = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return padNumber(value); };\n    Object.defineProperty(NgbTimepicker.prototype, \"isSmallSize\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.size === 'small'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbTimepicker.prototype, \"isLargeSize\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.size === 'large'; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgbTimepicker.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n            this.model.second = 0;\n            this.propagateModelChange(false);\n        }\n    };\n    /**\n     * @private\n     * @param {?=} touched\n     * @return {?}\n     */\n    NgbTimepicker.prototype.propagateModelChange = /**\n     * @private\n     * @param {?=} touched\n     * @return {?}\n     */\n    function (touched) {\n        if (touched === void 0) { touched = true; }\n        if (touched) {\n            this.onTouched();\n        }\n        if (this.model.isValid(this.seconds)) {\n            this.onChange(this._ngbTimeAdapter.toModel({ hour: this.model.hour, minute: this.model.minute, second: this.model.second }));\n        }\n        else {\n            this.onChange(this._ngbTimeAdapter.toModel(null));\n        }\n    };\n    NgbTimepicker.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-timepicker',\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"\\n    <fieldset [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n      <div class=\\\"ngb-tp\\\">\\n        <div class=\\\"ngb-tp-input-container ngb-tp-hour\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeHour(hourStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-hours\\\">Increment hours</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\"\\n            [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"HH\\\" i18n-placeholder=\\\"@@ngb.timepicker.HH\\\"\\n            [value]=\\\"formatHour(model?.hour)\\\" (change)=\\\"updateHour($event.target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Hours\\\" i18n-aria-label=\\\"@@ngb.timepicker.hours\\\"\\n            (input)=\\\"formatInput($event.target)\\\"\\n            (keydown.ArrowUp)=\\\"changeHour(hourStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeHour(-hourStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeHour(-hourStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.decrement-hours\\\">Decrement hours</span>\\n          </button>\\n        </div>\\n        <div class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div class=\\\"ngb-tp-input-container ngb-tp-minute\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeMinute(minuteStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-minutes\\\">Increment minutes</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\" [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"MM\\\" i18n-placeholder=\\\"@@ngb.timepicker.MM\\\"\\n            [value]=\\\"formatMinSec(model?.minute)\\\" (change)=\\\"updateMinute($event.target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Minutes\\\" i18n-aria-label=\\\"@@ngb.timepicker.minutes\\\"\\n            (input)=\\\"formatInput($event.target)\\\"\\n            (keydown.ArrowUp)=\\\"changeMinute(minuteStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeMinute(-minuteStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeMinute(-minuteStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"  [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\"  i18n=\\\"@@ngb.timepicker.decrement-minutes\\\">Decrement minutes</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-input-container ngb-tp-second\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeSecond(secondStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-seconds\\\">Increment seconds</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\" [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"SS\\\" i18n-placeholder=\\\"@@ngb.timepicker.SS\\\"\\n            [value]=\\\"formatMinSec(model?.second)\\\" (change)=\\\"updateSecond($event.target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Seconds\\\" i18n-aria-label=\\\"@@ngb.timepicker.seconds\\\"\\n            (input)=\\\"formatInput($event.target)\\\"\\n            (keydown.ArrowUp)=\\\"changeSecond(secondStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeSecond(-secondStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeSecond(-secondStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"  [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.decrement-seconds\\\">Decrement seconds</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-spacer\\\"></div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-meridian\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\"\\n                  (click)=\\\"toggleMeridian()\\\">\\n            <ng-container *ngIf=\\\"model?.hour >= 12; else am\\\" i18n=\\\"@@ngb.timepicker.PM\\\">{{ i18n.getAfternoonPeriod() }}</ng-container>\\n            <ng-template #am i18n=\\\"@@ngb.timepicker.AM\\\">{{ i18n.getMorningPeriod() }}</ng-template>\\n          </button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  \",\n                    providers: [NGB_TIMEPICKER_VALUE_ACCESSOR],\n                    styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgbTimepicker.ctorParameters = function () { return [\n        { type: NgbTimepickerConfig },\n        { type: NgbTimeAdapter },\n        { type: ChangeDetectorRef },\n        { type: NgbTimepickerI18n }\n    ]; };\n    NgbTimepicker.propDecorators = {\n        meridian: [{ type: Input }],\n        spinners: [{ type: Input }],\n        seconds: [{ type: Input }],\n        hourStep: [{ type: Input }],\n        minuteStep: [{ type: Input }],\n        secondStep: [{ type: Input }],\n        readonlyInputs: [{ type: Input }],\n        size: [{ type: Input }]\n    };\n    return NgbTimepicker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbTimepickerModule = /** @class */ (function () {\n    function NgbTimepickerModule() {\n    }\n    NgbTimepickerModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule] },] }\n    ];\n    return NgbTimepickerModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * \\@since 5.0.0\n */\nvar NgbToastConfig = /** @class */ (function () {\n    function NgbToastConfig() {\n        this.autohide = true;\n        this.delay = 500;\n        this.ariaLive = 'polite';\n    }\n    NgbToastConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbToastConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbToastConfig_Factory() { return new NgbToastConfig(); }, token: NgbToastConfig, providedIn: \"root\" });\n    return NgbToastConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * \\@since 5.0.0\n */\nvar NgbToastHeader = /** @class */ (function () {\n    function NgbToastHeader() {\n    }\n    NgbToastHeader.decorators = [\n        { type: Directive, args: [{ selector: '[ngbToastHeader]' },] }\n    ];\n    return NgbToastHeader;\n}());\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * \\@since 5.0.0\n */\nvar NgbToast = /** @class */ (function () {\n    function NgbToast(ariaLive, config) {\n        this.ariaLive = ariaLive;\n        /**\n         * A template like `<ng-template ngbToastHeader></ng-template>` can be\n         * used in the projected content to allow markup usage.\n         */\n        this.contentHeaderTpl = null;\n        /**\n         * An event fired immediately when toast's `hide()` method has been called.\n         * It can only occur in 2 different scenarios:\n         * - `autohide` timeout fires\n         * - user clicks on a closing cross (&times)\n         *\n         * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n         * that.\n         */\n        this.hideOutput = new EventEmitter();\n        if (this.ariaLive == null) {\n            this.ariaLive = config.ariaLive;\n        }\n        this.delay = config.delay;\n        this.autohide = config.autohide;\n    }\n    /**\n     * @return {?}\n     */\n    NgbToast.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () { this._init(); };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgbToast.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if ('autohide' in changes) {\n            this._clearTimeout();\n            this._init();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbToast.prototype.hide = /**\n     * @return {?}\n     */\n    function () {\n        this._clearTimeout();\n        this.hideOutput.emit();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbToast.prototype._init = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.autohide && !this._timeoutID) {\n            this._timeoutID = setTimeout((/**\n             * @return {?}\n             */\n            function () { return _this.hide(); }), this.delay);\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbToast.prototype._clearTimeout = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._timeoutID) {\n            clearTimeout(this._timeoutID);\n            this._timeoutID = null;\n        }\n    };\n    NgbToast.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-toast',\n                    exportAs: 'ngbToast',\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'role': 'alert',\n                        '[attr.aria-live]': 'ariaLive',\n                        'aria-atomic': 'true',\n                        '[class.toast]': 'true',\n                        '[class.show]': 'true',\n                    },\n                    template: \"\\n    <ng-template #headerTpl>\\n      <strong class=\\\"mr-auto\\\">{{header}}</strong>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"contentHeaderTpl || header\\\">\\n      <div class=\\\"toast-header\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"contentHeaderTpl || headerTpl\\\"></ng-template>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" i18n-aria-label=\\\"@@ngb.toast.close-aria\\\" (click)=\\\"hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </ng-template>\\n    <div class=\\\"toast-body\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n                    styles: [\".ngb-toasts{position:fixed;top:0;right:0;margin:.5em;z-index:1200}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgbToast.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Attribute, args: ['aria-live',] }] },\n        { type: NgbToastConfig }\n    ]; };\n    NgbToast.propDecorators = {\n        delay: [{ type: Input }],\n        autohide: [{ type: Input }],\n        header: [{ type: Input }],\n        contentHeaderTpl: [{ type: ContentChild, args: [NgbToastHeader, { read: TemplateRef, static: true },] }],\n        hideOutput: [{ type: Output, args: ['hide',] }]\n    };\n    return NgbToast;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbToastModule = /** @class */ (function () {\n    function NgbToastModule() {\n    }\n    NgbToastModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader] },] }\n    ];\n    return NgbToastModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nvar NgbTooltipConfig = /** @class */ (function () {\n    function NgbTooltipConfig() {\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.triggers = 'hover focus';\n        this.disableTooltip = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n    NgbTooltipConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbTooltipConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbTooltipConfig_Factory() { return new NgbTooltipConfig(); }, token: NgbTooltipConfig, providedIn: \"root\" });\n    return NgbTooltipConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar nextId$5 = 0;\nvar NgbTooltipWindow = /** @class */ (function () {\n    function NgbTooltipWindow() {\n    }\n    NgbTooltipWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-tooltip-window',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: { '[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id' },\n                    template: \"<div class=\\\"arrow\\\"></div><div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\",\n                    styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}\"]\n                }] }\n    ];\n    NgbTooltipWindow.propDecorators = {\n        id: [{ type: Input }],\n        tooltipClass: [{ type: Input }]\n    };\n    return NgbTooltipWindow;\n}());\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\nvar NgbTooltip = /** @class */ (function () {\n    function NgbTooltip(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        /**\n         * An event emitted when the tooltip is shown. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the popover is hidden. Contains no payload.\n         */\n        this.hidden = new EventEmitter();\n        this._ngbTooltipWindowId = \"ngb-tooltip-\" + nextId$5++;\n        this.autoClose = config.autoClose;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disableTooltip = config.disableTooltip;\n        this.tooltipClass = config.tooltipClass;\n        this.openDelay = config.openDelay;\n        this.closeDelay = config.closeDelay;\n        this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n        this._zoneSubscription = _ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (_this._windowRef) {\n                positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body', 'bs-tooltip');\n            }\n        }));\n    }\n    Object.defineProperty(NgbTooltip.prototype, \"ngbTooltip\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._ngbTooltip; },\n        /**\n         * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n         *\n         * If the content if falsy, the tooltip won't open.\n         */\n        set: /**\n         * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n         *\n         * If the content if falsy, the tooltip won't open.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._ngbTooltip = value;\n            if (!value && this._windowRef) {\n                this.close();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     */\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     * @param {?=} context\n     * @return {?}\n     */\n    NgbTooltip.prototype.open = /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     * @param {?=} context\n     * @return {?}\n     */\n    function (context) {\n        var _this = this;\n        if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n            this._windowRef = this._popupService.open(this._ngbTooltip, context);\n            this._windowRef.instance.tooltipClass = this.tooltipClass;\n            this._windowRef.instance.id = this._ngbTooltipWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because tooltip won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the tooltip from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, (/**\n             * @return {?}\n             */\n            function () { return _this.close(); }), this.hidden, [this._windowRef.location.nativeElement]);\n            this.shown.emit();\n        }\n    };\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     * @return {?}\n     */\n    NgbTooltip.prototype.close = /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     * @return {?}\n     */\n    function () {\n        if (this._windowRef != null) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n            this._changeDetector.markForCheck();\n        }\n    };\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     * @return {?}\n     */\n    NgbTooltip.prototype.toggle = /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     * @return {?}\n     */\n    function () {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n    /**\n     * Returns `true`, if the popover is currently shown.\n     * @return {?}\n     */\n    NgbTooltip.prototype.isOpen = /**\n     * Returns `true`, if the popover is currently shown.\n     * @return {?}\n     */\n    function () { return this._windowRef != null; };\n    /**\n     * @return {?}\n     */\n    NgbTooltip.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    NgbTooltip.prototype.ngOnChanges = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var tooltipClass = _a.tooltipClass;\n        if (tooltipClass && this.isOpen()) {\n            this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgbTooltip.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.close();\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbTooltip.decorators = [\n        { type: Directive, args: [{ selector: '[ngbTooltip]', exportAs: 'ngbTooltip' },] }\n    ];\n    /** @nocollapse */\n    NgbTooltip.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 },\n        { type: Injector },\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: NgbTooltipConfig },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: ChangeDetectorRef },\n        { type: ApplicationRef }\n    ]; };\n    NgbTooltip.propDecorators = {\n        autoClose: [{ type: Input }],\n        placement: [{ type: Input }],\n        triggers: [{ type: Input }],\n        container: [{ type: Input }],\n        disableTooltip: [{ type: Input }],\n        tooltipClass: [{ type: Input }],\n        openDelay: [{ type: Input }],\n        closeDelay: [{ type: Input }],\n        shown: [{ type: Output }],\n        hidden: [{ type: Output }],\n        ngbTooltip: [{ type: Input }]\n    };\n    return NgbTooltip;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbTooltipModule = /** @class */ (function () {\n    function NgbTooltipModule() {\n    }\n    NgbTooltipModule.decorators = [\n        { type: NgModule, args: [{ declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow] },] }\n    ];\n    return NgbTooltipModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\nvar NgbHighlight = /** @class */ (function () {\n    function NgbHighlight() {\n        /**\n         * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n         */\n        this.highlightClass = 'ngb-highlight';\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgbHighlight.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        /** @type {?} */\n        var result = toString(this.result);\n        /** @type {?} */\n        var terms = Array.isArray(this.term) ? this.term : [this.term];\n        /** @type {?} */\n        var escapedTerms = terms.map((/**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) { return regExpEscape(toString(term)); })).filter((/**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) { return term; }));\n        this.parts = escapedTerms.length ? result.split(new RegExp(\"(\" + escapedTerms.join('|') + \")\", 'gmi')) : [result];\n    };\n    NgbHighlight.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-highlight',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"<ng-template ngFor [ngForOf]=\\\"parts\\\" let-part let-isOdd=\\\"odd\\\">\" +\n                        \"<span *ngIf=\\\"isOdd; else even\\\" [class]=\\\"highlightClass\\\">{{part}}</span><ng-template #even>{{part}}</ng-template>\" +\n                        \"</ng-template>\",\n                    styles: [\".ngb-highlight{font-weight:700}\"]\n                }] }\n    ];\n    NgbHighlight.propDecorators = {\n        highlightClass: [{ type: Input }],\n        result: [{ type: Input }],\n        term: [{ type: Input }]\n    };\n    return NgbHighlight;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbTypeaheadWindow = /** @class */ (function () {\n    function NgbTypeaheadWindow() {\n        this.activeIdx = 0;\n        /**\n         * Flag indicating if the first row should be active initially\n         */\n        this.focusFirst = true;\n        /**\n         * A function used to format a given result before display. This function should return a formatted string without any\n         * HTML markup\n         */\n        this.formatter = toString;\n        /**\n         * Event raised when user selects a particular result row\n         */\n        this.selectEvent = new EventEmitter();\n        this.activeChangeEvent = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    NgbTypeaheadWindow.prototype.hasActive = /**\n     * @return {?}\n     */\n    function () { return this.activeIdx > -1 && this.activeIdx < this.results.length; };\n    /**\n     * @return {?}\n     */\n    NgbTypeaheadWindow.prototype.getActive = /**\n     * @return {?}\n     */\n    function () { return this.results[this.activeIdx]; };\n    /**\n     * @param {?} activeIdx\n     * @return {?}\n     */\n    NgbTypeaheadWindow.prototype.markActive = /**\n     * @param {?} activeIdx\n     * @return {?}\n     */\n    function (activeIdx) {\n        this.activeIdx = activeIdx;\n        this._activeChanged();\n    };\n    /**\n     * @return {?}\n     */\n    NgbTypeaheadWindow.prototype.next = /**\n     * @return {?}\n     */\n    function () {\n        if (this.activeIdx === this.results.length - 1) {\n            this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n        }\n        else {\n            this.activeIdx++;\n        }\n        this._activeChanged();\n    };\n    /**\n     * @return {?}\n     */\n    NgbTypeaheadWindow.prototype.prev = /**\n     * @return {?}\n     */\n    function () {\n        if (this.activeIdx < 0) {\n            this.activeIdx = this.results.length - 1;\n        }\n        else if (this.activeIdx === 0) {\n            this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n        }\n        else {\n            this.activeIdx--;\n        }\n        this._activeChanged();\n    };\n    /**\n     * @return {?}\n     */\n    NgbTypeaheadWindow.prototype.resetActive = /**\n     * @return {?}\n     */\n    function () {\n        this.activeIdx = this.focusFirst ? 0 : -1;\n        this._activeChanged();\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    NgbTypeaheadWindow.prototype.select = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) { this.selectEvent.emit(item); };\n    /**\n     * @return {?}\n     */\n    NgbTypeaheadWindow.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () { this.resetActive(); };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbTypeaheadWindow.prototype._activeChanged = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    };\n    NgbTypeaheadWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-typeahead-window',\n                    exportAs: 'ngbTypeaheadWindow',\n                    encapsulation: ViewEncapsulation.None,\n                    host: { '(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id' },\n                    template: \"\\n    <ng-template #rt let-result=\\\"result\\\" let-term=\\\"term\\\" let-formatter=\\\"formatter\\\">\\n      <ngb-highlight [result]=\\\"formatter(result)\\\" [term]=\\\"term\\\"></ngb-highlight>\\n    </ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"results\\\" let-result let-idx=\\\"index\\\">\\n      <button type=\\\"button\\\" class=\\\"dropdown-item\\\" role=\\\"option\\\"\\n        [id]=\\\"id + '-' + idx\\\"\\n        [class.active]=\\\"idx === activeIdx\\\"\\n        (mouseenter)=\\\"markActive(idx)\\\"\\n        (click)=\\\"select(result)\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"resultTemplate || rt\\\"\\n          [ngTemplateOutletContext]=\\\"{result: result, term: term, formatter: formatter}\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n  \"\n                }] }\n    ];\n    NgbTypeaheadWindow.propDecorators = {\n        id: [{ type: Input }],\n        focusFirst: [{ type: Input }],\n        results: [{ type: Input }],\n        term: [{ type: Input }],\n        formatter: [{ type: Input }],\n        resultTemplate: [{ type: Input }],\n        selectEvent: [{ type: Output, args: ['select',] }],\n        activeChangeEvent: [{ type: Output, args: ['activeChange',] }]\n    };\n    return NgbTypeaheadWindow;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', { providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY });\n/**\n * @return {?}\n */\nfunction ARIA_LIVE_DELAY_FACTORY() {\n    return 100;\n}\n/**\n * @param {?} document\n * @param {?=} lazyCreate\n * @return {?}\n */\nfunction getLiveElement(document, lazyCreate) {\n    if (lazyCreate === void 0) { lazyCreate = false; }\n    /** @type {?} */\n    var element = (/** @type {?} */ (document.body.querySelector('#ngb-live')));\n    if (element == null && lazyCreate) {\n        element = document.createElement('div');\n        element.setAttribute('id', 'ngb-live');\n        element.setAttribute('aria-live', 'polite');\n        element.setAttribute('aria-atomic', 'true');\n        element.classList.add('sr-only');\n        document.body.appendChild(element);\n    }\n    return element;\n}\nvar Live = /** @class */ (function () {\n    function Live(_document, _delay) {\n        this._document = _document;\n        this._delay = _delay;\n    }\n    /**\n     * @return {?}\n     */\n    Live.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var element = getLiveElement(this._document);\n        if (element) {\n            element.parentElement.removeChild(element);\n        }\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Live.prototype.say = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        /** @type {?} */\n        var element = getLiveElement(this._document, true);\n        /** @type {?} */\n        var delay = this._delay;\n        element.textContent = '';\n        /** @type {?} */\n        var setText = (/**\n         * @return {?}\n         */\n        function () { return element.textContent = message; });\n        if (delay === null) {\n            setText();\n        }\n        else {\n            setTimeout(setText, delay);\n        }\n    };\n    Live.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */\n    Live.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [ARIA_LIVE_DELAY,] }] }\n    ]; };\n    /** @nocollapse */ Live.ngInjectableDef = ɵɵdefineInjectable({ factory: function Live_Factory() { return new Live(ɵɵinject(DOCUMENT), ɵɵinject(ARIA_LIVE_DELAY)); }, token: Live, providedIn: \"root\" });\n    return Live;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nvar NgbTypeaheadConfig = /** @class */ (function () {\n    function NgbTypeaheadConfig() {\n        this.editable = true;\n        this.focusFirst = true;\n        this.showHint = false;\n        this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    }\n    NgbTypeaheadConfig.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] }\n    ];\n    /** @nocollapse */ NgbTypeaheadConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbTypeaheadConfig_Factory() { return new NgbTypeaheadConfig(); }, token: NgbTypeaheadConfig, providedIn: \"root\" });\n    return NgbTypeaheadConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return NgbTypeahead; })),\n    multi: true\n};\n/** @type {?} */\nvar nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\nvar NgbTypeahead = /** @class */ (function () {\n    function NgbTypeahead(_elementRef, viewContainerRef, _renderer, injector, componentFactoryResolver, config, ngZone, _live, _document, _ngZone, _changeDetector, applicationRef) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._live = _live;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._changeDetector = _changeDetector;\n        this._closed$ = new Subject();\n        /**\n         * The value for the `autocomplete` attribute for the `<input>` element.\n         *\n         * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n         *\n         * \\@since 2.1.0\n         */\n        this.autocomplete = 'off';\n        /**\n         * The preferred placement of the typeahead.\n         *\n         * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n         * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n         * `\"right-bottom\"`\n         *\n         * Accepts an array of strings or a string with space separated possible values.\n         *\n         * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = 'bottom-left';\n        /**\n         * An event emitted right before an item is selected from the result list.\n         *\n         * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n         */\n        this.selectItem = new EventEmitter();\n        this.popupId = \"ngb-typeahead-\" + nextWindowId++;\n        this._onTouched = (/**\n         * @return {?}\n         */\n        function () { });\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        this.container = config.container;\n        this.editable = config.editable;\n        this.focusFirst = config.focusFirst;\n        this.showHint = config.showHint;\n        this.placement = config.placement;\n        this._valueChanges = fromEvent(_elementRef.nativeElement, 'input')\n            .pipe(map((/**\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) { return ((/** @type {?} */ ($event.target))).value; })));\n        this._resubscribeTypeahead = new BehaviorSubject(null);\n        this._popupService = new PopupService(NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n        this._zoneSubscription = ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (_this.isPopupOpen()) {\n                positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body');\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    NgbTypeahead.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var inputValues$ = this._valueChanges.pipe(tap((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            _this._inputValueBackup = _this.showHint ? value : null;\n            _this._onChange(_this.editable ? value : undefined);\n        })));\n        /** @type {?} */\n        var results$ = inputValues$.pipe(this.ngbTypeahead);\n        /** @type {?} */\n        var userInput$ = this._resubscribeTypeahead.pipe(switchMap((/**\n         * @return {?}\n         */\n        function () { return results$; })));\n        this._subscription = this._subscribeToUserInput(userInput$);\n    };\n    /**\n     * @return {?}\n     */\n    NgbTypeahead.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._closePopup();\n        this._unsubscribeFromUserInput();\n        this._zoneSubscription.unsubscribe();\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbTypeahead.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgbTypeahead.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._onTouched = fn; };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgbTypeahead.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._writeInputValue(this._formatItemForInput(value));\n        if (this.showHint) {\n            this._inputValueBackup = value;\n        }\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NgbTypeahead.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * Dismisses typeahead popup window\n     */\n    /**\n     * Dismisses typeahead popup window\n     * @return {?}\n     */\n    NgbTypeahead.prototype.dismissPopup = /**\n     * Dismisses typeahead popup window\n     * @return {?}\n     */\n    function () {\n        if (this.isPopupOpen()) {\n            this._resubscribeTypeahead.next(null);\n            this._closePopup();\n            if (this.showHint && this._inputValueBackup !== null) {\n                this._writeInputValue(this._inputValueBackup);\n            }\n            this._changeDetector.markForCheck();\n        }\n    };\n    /**\n     * Returns true if the typeahead popup window is displayed\n     */\n    /**\n     * Returns true if the typeahead popup window is displayed\n     * @return {?}\n     */\n    NgbTypeahead.prototype.isPopupOpen = /**\n     * Returns true if the typeahead popup window is displayed\n     * @return {?}\n     */\n    function () { return this._windowRef != null; };\n    /**\n     * @return {?}\n     */\n    NgbTypeahead.prototype.handleBlur = /**\n     * @return {?}\n     */\n    function () {\n        this._resubscribeTypeahead.next(null);\n        this._onTouched();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    NgbTypeahead.prototype.handleKeyDown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!this.isPopupOpen()) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        switch (event.which) {\n            case Key.ArrowDown:\n                event.preventDefault();\n                this._windowRef.instance.next();\n                this._showHint();\n                break;\n            case Key.ArrowUp:\n                event.preventDefault();\n                this._windowRef.instance.prev();\n                this._showHint();\n                break;\n            case Key.Enter:\n            case Key.Tab:\n                /** @type {?} */\n                var result = this._windowRef.instance.getActive();\n                if (isDefined(result)) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    this._selectResult(result);\n                }\n                this._closePopup();\n                break;\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbTypeahead.prototype._openPopup = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.isPopupOpen()) {\n            this._inputValueBackup = this._elementRef.nativeElement.value;\n            this._windowRef = this._popupService.open();\n            this._windowRef.instance.id = this.popupId;\n            this._windowRef.instance.selectEvent.subscribe((/**\n             * @param {?} result\n             * @return {?}\n             */\n            function (result) { return _this._selectResultClosePopup(result); }));\n            this._windowRef.instance.activeChangeEvent.subscribe((/**\n             * @param {?} activeId\n             * @return {?}\n             */\n            function (activeId) { return _this.activeDescendant = activeId; }));\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            this._changeDetector.markForCheck();\n            ngbAutoClose(this._ngZone, this._document, 'outside', (/**\n             * @return {?}\n             */\n            function () { return _this.dismissPopup(); }), this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbTypeahead.prototype._closePopup = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._closed$.next();\n        this._popupService.close();\n        this._windowRef = null;\n        this.activeDescendant = undefined;\n    };\n    /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    NgbTypeahead.prototype._selectResult = /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    function (result) {\n        /** @type {?} */\n        var defaultPrevented = false;\n        this.selectItem.emit({ item: result, preventDefault: (/**\n             * @return {?}\n             */\n            function () { defaultPrevented = true; }) });\n        this._resubscribeTypeahead.next(null);\n        if (!defaultPrevented) {\n            this.writeValue(result);\n            this._onChange(result);\n        }\n    };\n    /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    NgbTypeahead.prototype._selectResultClosePopup = /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    function (result) {\n        this._selectResult(result);\n        this._closePopup();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbTypeahead.prototype._showHint = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n            /** @type {?} */\n            var userInputLowerCase = this._inputValueBackup.toLowerCase();\n            /** @type {?} */\n            var formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n            if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n                this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n                this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n            }\n            else {\n                this._writeInputValue(formattedVal);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {?} item\n     * @return {?}\n     */\n    NgbTypeahead.prototype._formatItemForInput = /**\n     * @private\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    NgbTypeahead.prototype._writeInputValue = /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n    };\n    /**\n     * @private\n     * @param {?} userInput$\n     * @return {?}\n     */\n    NgbTypeahead.prototype._subscribeToUserInput = /**\n     * @private\n     * @param {?} userInput$\n     * @return {?}\n     */\n    function (userInput$) {\n        var _this = this;\n        return userInput$.subscribe((/**\n         * @param {?} results\n         * @return {?}\n         */\n        function (results) {\n            if (!results || results.length === 0) {\n                _this._closePopup();\n            }\n            else {\n                _this._openPopup();\n                _this._windowRef.instance.focusFirst = _this.focusFirst;\n                _this._windowRef.instance.results = results;\n                _this._windowRef.instance.term = _this._elementRef.nativeElement.value;\n                if (_this.resultFormatter) {\n                    _this._windowRef.instance.formatter = _this.resultFormatter;\n                }\n                if (_this.resultTemplate) {\n                    _this._windowRef.instance.resultTemplate = _this.resultTemplate;\n                }\n                _this._windowRef.instance.resetActive();\n                // The observable stream we are subscribing to might have async steps\n                // and if a component containing typeahead is using the OnPush strategy\n                // the change detection turn wouldn't be invoked automatically.\n                _this._windowRef.changeDetectorRef.detectChanges();\n                _this._showHint();\n            }\n            // live announcer\n            /** @type {?} */\n            var count = results ? results.length : 0;\n            _this._live.say(count === 0 ? 'No results available' : count + \" result\" + (count === 1 ? '' : 's') + \" available\");\n        }));\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgbTypeahead.prototype._unsubscribeFromUserInput = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._subscription = null;\n    };\n    NgbTypeahead.decorators = [\n        { type: Directive, args: [{\n                    selector: 'input[ngbTypeahead]',\n                    exportAs: 'ngbTypeahead',\n                    host: {\n                        '(blur)': 'handleBlur()',\n                        '[class.open]': 'isPopupOpen()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '[autocomplete]': 'autocomplete',\n                        'autocapitalize': 'off',\n                        'autocorrect': 'off',\n                        'role': 'combobox',\n                        'aria-multiline': 'false',\n                        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n                        '[attr.aria-activedescendant]': 'activeDescendant',\n                        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n                        '[attr.aria-expanded]': 'isPopupOpen()'\n                    },\n                    providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n                },] }\n    ];\n    /** @nocollapse */\n    NgbTypeahead.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ViewContainerRef },\n        { type: Renderer2 },\n        { type: Injector },\n        { type: ComponentFactoryResolver },\n        { type: NgbTypeaheadConfig },\n        { type: NgZone },\n        { type: Live },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: ApplicationRef }\n    ]; };\n    NgbTypeahead.propDecorators = {\n        autocomplete: [{ type: Input }],\n        container: [{ type: Input }],\n        editable: [{ type: Input }],\n        focusFirst: [{ type: Input }],\n        inputFormatter: [{ type: Input }],\n        ngbTypeahead: [{ type: Input }],\n        resultFormatter: [{ type: Input }],\n        resultTemplate: [{ type: Input }],\n        showHint: [{ type: Input }],\n        placement: [{ type: Input }],\n        selectItem: [{ type: Output }]\n    };\n    return NgbTypeahead;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgbTypeaheadModule = /** @class */ (function () {\n    function NgbTypeaheadModule() {\n    }\n    NgbTypeaheadModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n                    exports: [NgbTypeahead, NgbHighlight],\n                    imports: [CommonModule],\n                    entryComponents: [NgbTypeaheadWindow]\n                },] }\n    ];\n    return NgbTypeaheadModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar NGB_MODULES = [\n    NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n    NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,\n    NgbRatingModule, NgbTabsetModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\n];\nvar NgbModule = /** @class */ (function () {\n    function NgbModule() {\n    }\n    NgbModule.decorators = [\n        { type: NgModule, args: [{ imports: NGB_MODULES, exports: NGB_MODULES },] }\n    ];\n    return NgbModule;\n}());\n\nexport { ModalDismissReasons, NgbAccordion, NgbAccordionConfig, NgbAccordionModule, NgbActiveModal, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbButtonLabel, NgbButtonsModule, NgbCalendar, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCheckBox, NgbCollapse, NgbCollapseModule, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavLink, NgbNavModule, NgbNavOutlet, NgbNavbar, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbRadio, NgbRadioGroup, NgbRating, NgbRatingConfig, NgbRatingModule, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTab, NgbTabContent, NgbTabTitle, NgbTabset, NgbTabsetConfig, NgbTabsetModule, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, NGB_CAROUSEL_DIRECTIVES as ɵa, NGB_DATEPICKER_VALUE_ACCESSOR as ɵb, Live as ɵba, NgbCalendarHijri as ɵbb, ContentRef as ɵbc, NGB_DATEPICKER_CALENDAR_FACTORY as ɵc, NgbDatepickerDayView as ɵd, NgbDatepickerNavigation as ɵe, NgbDatepickerNavigationSelect as ɵf, NGB_DATEPICKER_18N_FACTORY as ɵg, NgbDatepickerI18nDefault as ɵh, NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵi, NgbDateStructAdapter as ɵj, NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵk, NgbDateISOParserFormatter as ɵl, NgbPopoverWindow as ɵm, NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵn, NgbTimeStructAdapter as ɵo, NGB_TIMEPICKER_I18N_FACTORY as ɵp, NgbTimepickerI18nDefault as ɵq, NgbTooltipWindow as ɵr, NgbTypeaheadWindow as ɵs, NgbDatepickerService as ɵt, NgbModalBackdrop as ɵu, NgbModalWindow as ɵv, NgbModalStack as ɵw, ScrollBar as ɵx, ARIA_LIVE_DELAY as ɵy, ARIA_LIVE_DELAY_FACTORY as ɵz };\n//# sourceMappingURL=ng-bootstrap.js.map\n"],"names":["toInteger","value","parseInt","toString","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","hasClassName","element","className","split","indexOf","Element","prototype","closest","matches","msMatchesSelector","webkitMatchesSelector","s","el","this","document","documentElement","contains","parentElement","parentNode","nodeType","NgbAccordionConfig","closeOthers","decorators","type","Injectable","args","providedIn","ngInjectableDef","ɵɵdefineInjectable","factory","token","nextId","NgbPanelHeader","templateRef","Directive","selector","ctorParameters","TemplateRef","NgbPanelTitle","NgbPanelContent","NgbPanel","disabled","id","isOpen","ngAfterContentChecked","titleTpl","titleTpls","first","headerTpl","headerTpls","contentTpl","contentTpls","propDecorators","Input","title","cardClass","ContentChildren","descendants","NgbAccordion","config","activeIds","destroyOnHide","panelChange","EventEmitter","closeOtherPanels","isExpanded","panelId","expand","_changeOpenState","_findPanelById","expandAll","_this","length","panels","forEach","panel","collapse","collapseAll","toggle","_closeOthers","_updateActiveIds","nextState","defaultPrevented_1","emit","preventDefault","find","p","filter","map","Component","exportAs","encapsulation","ViewEncapsulation","None","host","class","role","[attr.aria-multiselectable]","template","Output","NgbPanelToggle","accordion","Object","defineProperty","set","enumerable","configurable","[disabled]","[class.collapsed]","[attr.aria-expanded]","[attr.aria-controls]","(click)","Optional","Host","ngbPanelToggle","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","NgModule","declarations","exports","imports","CommonModule","NgbAlertConfig","dismissible","NgbAlert","_renderer","_element","close","closeHandler","ngOnChanges","changes","typeChange","firstChange","removeClass","nativeElement","previousValue","addClass","currentValue","ngOnInit","changeDetection","ChangeDetectionStrategy","OnPush","[class.alert-dismissible]","styles","Renderer2","ElementRef","NgbAlertModule","entryComponents","NgbButtonLabel","[class.btn]","[class.active]","[class.disabled]","[class.focus]","NGB_CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NgbCheckBox","multi","_label","_cd","valueChecked","valueUnChecked","onChange","_","onTouched","isFocused","focused","onInputChange","$event","modelToPropagate","target","checked","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","active","markForCheck","[checked]","(change)","(focus)","(blur)","providers","ChangeDetectorRef","NGB_RADIO_VALUE_ACCESSOR","NgbRadioGroup","nextId$1","_radios","Set","_value","name","get","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","add","_updateRadiosDisabled","unregister","delete","updateValue","updateDisabled","NgbRadio","_group","stringValue","setProperty","_checked","ngOnDestroy","[name]","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbCarouselConfig","interval","wrap","keyboard","pauseOnHover","showNavigationArrows","showNavigationIndicators","nextId$2","NgbSlide","tplRef","NgbCarousel","_platformId","_ngZone","NgbSlideEventSource","_destroy$","Subject","_interval$","BehaviorSubject","_mouseHover$","_pauseOnHover$","_pause$","_wrap$","slide","next","mouseEnter","mouseLeave","ngAfterContentInit","isPlatformBrowser","runOutsideAngular","hasNextSlide$","combineLatest","pipe","slideEvent","current","startWith","activeId","slides","_a","_b","__read","currentSlideId","slideArr","toArray","currentSlideIdx","_getSlideIdxById","distinctUntilChanged","pause","mouseHover","hasNextSlide","switchMap","timer","NEVER","takeUntil","subscribe","run","TIMER","activeSlide","_getSlideById","select","slideId","source","_cycleToSelected","_getSlideEventDirection","prev","_getPrevSlide","NgbSlideEventDirection","RIGHT","_getNextSlide","LEFT","cycle","slideIdx","direction","selectedSlide","paused","currentActiveSlideId","nextActiveSlideId","[style.display]","tabIndex","(keydown.arrowLeft)","(keydown.arrowRight)","undefined","Inject","PLATFORM_ID","NgZone","HostListener","ARROW_LEFT","ARROW_RIGHT","INDICATOR","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","NgbCollapse","collapsed","[class.collapse]","[class.show]","NgbCollapseModule","NgbDate","year","month","day","from","date","equals","other","before","after","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","NgbCalendar","useFactory","_super","apply","arguments","__extends","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","number","checkMonth","expectedMonth","setMonth","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","time","round","getToday","isValid","isChangedDate","dateComparator","isChangedMonth","checkDateInRange","minDate","maxDate","isDateSelectable","state","markDisabled","buildMonths","calendar","i18n","force","displayMonths","months","monthsToReuse","splice","Array","i","firstDate","assign","reusedIndex","findIndex","dayTemplateData","outsideDays","calendarToday","lastDate","weeks","weekdays","daysPerWeek","firstMonthDate","dayOfWeek","getFirstViewDate","weekObject","days","newDate","nextDate","ariaLabel","getDayAriaLabel","today","contextUserData","dayObject","context","$implicit","data","currentMonth","currentYear","selected","tabindex","hidden","buildMonth","shift","NGB_DATEPICKER_18N_FACTORY","locale","NgbDatepickerI18nDefault","NgbDatepickerI18n","getDayNumerals","getWeekNumerals","weekNumber","getYearNumerals","deps","LOCALE_ID","ɵɵinject","_locale","call","weekdaysStartingOnSunday","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Short","_weekdaysShort","index","_monthsShort","getLocaleMonthNames","Abbreviated","_monthsFull","Wide","getWeekdayShortName","weekday","getMonthShortName","getMonthFullName","formatDate","String","NgbDatepickerService","_calendar","_i18n","_VALIDATORS","_state","focusVisible","toValidDate","navigation","_model$","_dateSelect$","prevDisabled","nextDisabled","selectBoxes","years","selectedDate","model","options","patch","keys","key","reduce","obj","part","__assign","_nextState","focus","focusDate","focusSelect","emitEvent","open","defaultValue","ngbDate","struct","e_1","__values","_c","done","e_1_1","error","return","Error","newState","_updateState","_patchContexts","prevDate","startDate","checkMinBeforeMax","forceRebuild","yearChanged","monthChanged","start","numbers","generateSelectBoxYears","generateSelectBoxMonths","nextMonthDisabled","NavigationEvent","PREV","NEXT","NgbDatepickerConfig","showWeekdays","showWeekNumbers","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","NgbDateAdapter","fromModel","toModel","NGB_DATEPICKER_VALUE_ACCESSOR","NgbDatepicker","NgbDatepickerContent","_service","cd","_elementRef","_ngbDateAdapter","_destroyed$","_publicState","navigate","dateSelect","input","dateSelect$","model$","oldDate","focusedDate","viewModel","navigationPrevented","newSelectedDate","newFocusedDate","oldFocusedDate","_controlValue","onStable","asObservable","take","elementToFocus","querySelector","navigateTo","ngAfterViewInit","focusIns$","fromEvent","_contentEl","focusOuts$","merge","relatedTarget","inputs_1","dayTemplate","_defaultDayTemplate","inputs","onDateSelect","onNavigateDateSelect","onNavigateEvent","event","ViewChild","static","contentTemplate","ContentChild","footerTemplate","Key","Tab","Enter","Escape","Space","PageUp","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","NgbDatepickerKeyboardService","processKey","datepicker","which","shiftKey","stopPropagation","NgbDatepickerMonth","_keyboardService","onKeyDown","doSelect","(keydown)","NgbDatepickerNavigation","onClickPrev","onClickNext","showSelect","isContainedIn","array","some","item","matchesSelectorIfAny","isMobile","navigator","userAgent","test","maxTouchPoints","ngbAutoClose","zone","closed$","insideElements","ignoreElements","insideSelector","escapes$","e","tap","mouseDowns$","button","closeableClicks$","withLatestFrom","delay","race","setTimeout","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","ngbFocusTrap","stopFocusTrap$","refocusOnClick","lastFocusedElement$","tabEvent","focusedElement","last","arr","lastFocusedElement","Positioning","getAllStyles","window","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","position","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","placement","appendToBody","placementPrimary","placementSecondary","hostElPosition","targetElStyles","marginTop","parseFloat","marginBottom","marginLeft","marginRight","topPosition","leftPosition","style","transform","targetElBCR","html","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","placementSeparator","positionService","baseClass","placementVals","isArray","allowedPlacements","classList","addClassesToTarget","targetPlacement","primary","secondary","classes","push","classname","placementToRemove","remove","hasAuto","val","search","testPlacement","isInViewport","placementVals_1","placementVals_1_1","addedClasses","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","NgbDateParserFormatter","parse","dateParts","trim","format","NgbInputDatepickerConfig","autoClose","restoreFocus","NGB_DATEPICKER_VALUE_ACCESSOR$1","NgbInputDatepicker","NGB_DATEPICKER_VALIDATOR","NG_VALIDATORS","_parserFormatter","_elRef","_vcRef","_cfr","_dateAdapter","_document","_changeDetector","_cRef","_elWithFocus","closed","_onChange","_onTouched","_validatorChange","_zoneSubscription","_updatePopupPosition","instance","registerOnValidatorChange","validate","c","_fromDateStruct","requiredBefore","requiredAfter","invalid","_model","_writeModelValue","manualDateChange","updateView","inputValueChanged","_inputValue","cf","resolveComponentFactory","createComponent","_applyPopupStyling","location","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","detectChanges","container","appendChild","activeElement","hostView","body","onBlur","onFocus","unsubscribe","datepickerInstance","optionName","navigateEvent","positionTarget","HTMLElement","(input)","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","NgbDatepickerDayView","isMuted","[class.bg-primary]","[class.text-white]","[class.text-muted]","[class.outside]","NgbDatepickerNavigationSelect","_month","_year","changeMonth","changeYear","ngAfterViewChecked","monthSelect","yearSelect","read","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","isGregorianLeapYear","gDate","mod","a","b","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","GREGORIAN_EPOCH","hYear","hMonth","ceil","hDay","getIslamicMonthStart","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","tjd2","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","MONTH_LENGTH","NgbCalendarIslamicUmalqura","date1","date2","time1","time2","diff","daysDiff","UTC","abs","j","numOfDays","dayDiff","y","m","jalaliDate","jYear","jMonth","jDay","r","julianToGregorian","gregorianToJulian","jalCal","gy","march","div","setHours","gdate","julianDayNumber","jalaliDay","jalaliMonth","numberOfDays","jalaliYear","gregorianDay","mod$1","leap","julianToJalali","setJalaliMonth","trunc","jump","breaks","breaksLength","leapJ","jp","jm","n","gm","gd","d","NgbCalendarPersian","yearValue","setJalaliYear","setJalaliDay","isGregorianLeapYear$1","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","daysInMonth","getDayNumberInHebrewYear","numberOfDay","fromGregorian$1","GREGORIAN_EPOCH$1","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","toGregorian$1","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","mem","result","step","unshift","NgbCalendarHebrew","setHebrewMonth","setHebrewDay","WEEKDAYS","MONTHS","MONTHS_LEAP","NgbDatepickerI18nHebrew","NgbDateNativeAdapter","_fromNativeDate","_toNativeDate","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","setUTCFullYear","NgbDatepickerModule","FormsModule","NgbDropdownConfig","NgbNavbar","NgbDropdownItem","elementRef","NgbDropdownMenu","dropdown","[class.dropdown-menu]","[attr.x-placement]","(keydown.ArrowUp)","(keydown.ArrowDown)","(keydown.Home)","(keydown.End)","(keydown.Enter)","(keydown.Space)","NgbDropdown","menuItems","NgbDropdownAnchor","anchorEl","getNativeElement","aria-haspopup","NgbDropdownToggle","ngbNavbar","_closed$","_open","openChange","display","_positionMenu","_applyPlacementClasses","_setCloseHandlers","_applyContainer","isFirstChange","anchor","_anchor","_menu","_menuElement","_resetContainer","itemElements","_getMenuElements","isEventFromItems","itemElement","isEventFromToggle","_isEventFromToggle","_isDropup","menu","_bodyContainer","_getFirstPlacement","renderer","menuElement","dropdownElement","dropdownMenuElement","removeStyle","removeChild","bodyContainer","createElement","setStyle","dropdownClass","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","NgbModalConfig","backdrop","ContentRef","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_componentFactoryResolver","_applicationRef","content","_windowRef","_contentRef","_getContentRef","detachView","destroy","createEmbeddedView","attachView","rootNodes","createText","noop","ScrollBar","compensate","_getWidth","_isPresent","_adjustBody","scrollbarWidth","userSetPaddingStyle","paddingRight","actualPadding","rect","measurer","NgbModalBackdrop","[class]","backdropClass","NgbActiveModal","dismiss","reason","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","dismissEvent","Promise","resolve","reject","_resolve","_reject","then","_removeModalElements","_dismiss","windowNativeEl","backdropNativeEl","ModalDismissReasons","BACKDROP_CLICK","ESC","NgbModalWindow","_zone","requestAnimationFrame","defaultPrevented","preventClose","_dialogEl","autoFocusable","firstFocusable","elWithFocus","[attr.aria-modal]","[attr.aria-labelledby]","ariaLabelledBy","centered","scrollable","size","windowClass","NgbModalStack","_scrollBar","_rendererFactory","_activeWindowCmptHasChanged","_ariaHiddenValues","Map","_backdropAttributes","_modalRefs","_windowAttributes","_windowCmpts","activeWindowCmpt","_revertAriaHidden","_setAriaHidden","moduleCFR","contentInjector","containerEl","createRenderer","revertPaddingForScrollBar","removeBodyClass","activeModal","contentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","_applyWindowOptions","_applyBackdropOptions","dismissAll","hasOpenModals","create","windowInstance","backdropInstance","_createFromTemplateRef","_createFromString","_createFromComponent","component","createTextNode","contentCmptFactory","modalContentInjector","Injector","useValue","parent","componentNativeEl","children","sibling","nodeName","getAttribute","setAttribute","removeAttribute","clear","unregisterModalRef","ngbWindowCmpt","onDestroy","ApplicationRef","RendererFactory2","INJECTOR","NgbModal","_moduleCFR","_modalStack","_config","combinedOptions","NgbModalModule","NgbNavConfig","orientation","roles","isValidNavId","navCounter","NgbNavContent","NgbNavItem","nav","_nav","domId","_id","isPanelInDom","[class.nav-item]","NgbNav","activeIdChange","navChange","click","_updateActiveId","items","emitNavChange","[class.nav]","[class.flex-column]","[attr.aria-orientation]","[attr.role]","Attribute","NgbNavLink","navItem","hasNavItemClass","Node","COMMENT_NODE","[id]","[class.nav-link]","href","[attr.tabindex]","[attr.aria-selected]","[attr.aria-disabled]","NgbNavOutlet","[class.tab-content]","paneRole","NGB_NAV_DIRECTIVES","NgbNavModule","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","NgbPaginationEllipsis","NgbPaginationFirst","NgbPaginationLast","NgbPaginationNext","NgbPaginationNumber","NgbPaginationPrevious","NgbPagination","pageCount","pages","page","pageChange","hasPrevious","hasNext","previousDisabled","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","end","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","newPage","tplEllipsis","tplFirst","tplLast","tplNext","tplNumber","tplPrevious","DIRECTIVES","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","hover","delayOrNoop","listenToTriggers","triggers","isOpenedFn","openFn","closeFn","openDelay","closeDelay","parsedTriggers","aliases","trimmedTriggers","trigger","triggerPair","alias","manualTriggers","parseTriggers","subscription","Observable","subscriber","listeners","toggleFn","listen","unsubscribeFn","observeTriggers","input$","pending","filteredInput$","currentlyOpen","share","delayedOpen$","delayedClose$","triggerDelay","NgbPopoverConfig","disablePopover","nextId$3","NgbPopoverWindow","isTitleTemplate","popoverClass","NgbPopover","componentFactoryResolver","viewContainerRef","applicationRef","shown","_ngbPopoverWindowId","_popupService","_isDisabled","ngbPopover","popoverTitle","_unregisterListenersFn","bind","NgbPopoverModule","NgbProgressbarConfig","animated","striped","showValue","NgbProgressbar","textType","_max","getValue","getPercentValue","NgbProgressbarModule","NgbRatingConfig","readonly","resettable","NGB_RATING_VALUE_ACCESSOR","NgbRating","_changeDetectorRef","contexts","leave","rateChange","ariaValueText","nextRate","enter","handleBlur","handleClick","update","rate","handleKeyDown","v","k","fill","reset","internalChange","newRate","_getFillValue","toFixed","nextValue","[tabindex]","aria-valuemin","[attr.aria-valuemax]","[attr.aria-valuenow]","[attr.aria-valuetext]","(mouseleave)","starTemplate","starTemplateFromContent","NgbRatingModule","NgbTabsetConfig","justify","nextId$4","NgbTabTitle","NgbTabContent","NgbTab","NgbTabset","tabChange","justifyClass","tabId","selectedTab","_getTabById","activeTab","tabs","tabsWithId","tab","NGB_TABSET_DIRECTIVES","NgbTabsetModule","NgbTime","hour","minute","second","changeHour","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NgbTimepickerConfig","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_I18N_FACTORY","NgbTimepickerI18nDefault","NgbTimepickerI18n","_periods","getLocaleDayPeriods","Narrow","getMorningPeriod","getAfternoonPeriod","FILTER_REGEX","NGB_TIMEPICKER_VALUE_ACCESSOR","NgbTimepicker","_ngbTimeAdapter","_hourStep","_minuteStep","_secondStep","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatInput","replace","formatHour","formatMinSec","touched","NgbTimepickerModule","NgbToastConfig","autohide","ariaLive","NgbToastHeader","NgbToast","contentHeaderTpl","hideOutput","_init","_clearTimeout","hide","_timeoutID","clearTimeout","[attr.aria-live]","aria-atomic","[class.toast]","header","NgbToastModule","NgbTooltipConfig","disableTooltip","nextId$5","NgbTooltipWindow","tooltipClass","NgbTooltip","_ngbTooltipWindowId","_ngbTooltip","ngbTooltip","NgbTooltipModule","NgbHighlight","highlightClass","escapedTerms","term","parts","RegExp","NgbTypeaheadWindow","activeIdx","focusFirst","formatter","selectEvent","activeChangeEvent","hasActive","results","getActive","markActive","_activeChanged","resetActive","(mousedown)","resultTemplate","ARIA_LIVE_DELAY","InjectionToken","ARIA_LIVE_DELAY_FACTORY","getLiveElement","lazyCreate","Live","_delay","say","message","textContent","setText","NgbTypeaheadConfig","editable","showHint","NGB_TYPEAHEAD_VALUE_ACCESSOR","NgbTypeahead","nextWindowId","ngZone","_live","autocomplete","selectItem","popupId","_valueChanges","_resubscribeTypeahead","isPopupOpen","results$","_inputValueBackup","ngbTypeahead","userInput$","_subscription","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","dismissPopup","_showHint","_selectResult","_openPopup","_selectResultClosePopup","activeDescendant","userInputLowerCase","toLowerCase","formattedVal","substr","inputFormatter","resultFormatter","count","[class.open]","[autocomplete]","autocapitalize","autocorrect","aria-multiline","[attr.aria-autocomplete]","[attr.aria-activedescendant]","[attr.aria-owns]","NgbTypeaheadModule","NGB_MODULES","NgbModule"],"mappings":"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"}