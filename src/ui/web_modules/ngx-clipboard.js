import"./common/tslib.es6-c4a4947b.js";import{a as t}from"./common/mergeMap-64c6f393.js";import"./common/merge-183efbc7.js";import"./common/share-d41e3509.js";import{InjectionToken as e,ɵɵdefineInjectable as s,ɵɵinject as o,Injectable as r,Inject as n,Optional as i,EventEmitter as c,Directive as a,Input as p,Output as d,HostListener as h,ViewContainerRef as l,TemplateRef as m,NgModule as u}from"./@angular/core.js";import{DOCUMENT as y,CommonModule as g}from"./@angular/common.js";const b=new e("WindowToken","undefined"!=typeof window&&window.document?{providedIn:"root",factory:()=>window}:{providedIn:"root",factory:()=>{}});class v{constructor(e,s){this.document=e,this.window=s,this.copySubject=new t,this.copyResponse$=this.copySubject.asObservable(),this.config={}}configure(t){this.config=t}copy(t){if(!this.isSupported||!t)return this.pushCopyResponse({isSuccess:!1,content:t});const e=this.copyFromContent(t);return e?this.pushCopyResponse({content:t,isSuccess:e}):this.pushCopyResponse({isSuccess:!1,content:t})}get isSupported(){return!!this.document.queryCommandSupported&&!!this.document.queryCommandSupported("copy")&&!!this.window}isTargetValid(t){if(t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement){if(t.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');return!0}throw new Error("Target should be input or textarea")}copyFromInputElement(t,e=!0){try{this.selectTarget(t);const s=this.copyText();return this.clearSelection(e?t:void 0,this.window),s&&this.isCopySuccessInIE11()}catch(t){return!1}}isCopySuccessInIE11(){const t=this.window.clipboardData;return!(t&&t.getData&&!t.getData("Text"))}copyFromContent(t,e=this.document.body){if(this.tempTextArea&&!e.contains(this.tempTextArea)&&this.destroy(this.tempTextArea.parentElement||void 0),!this.tempTextArea){this.tempTextArea=this.createTempTextArea(this.document,this.window);try{e.appendChild(this.tempTextArea)}catch(t){throw new Error("Container should be a Dom element")}}this.tempTextArea.value=t;const s=this.copyFromInputElement(this.tempTextArea,!1);return this.config.cleanUpAfterCopy&&this.destroy(this.tempTextArea.parentElement||void 0),s}destroy(t=this.document.body){this.tempTextArea&&(t.removeChild(this.tempTextArea),this.tempTextArea=void 0)}selectTarget(t){return t.select(),t.setSelectionRange(0,t.value.length),t.value.length}copyText(){return this.document.execCommand("copy")}clearSelection(t,e){var s;t&&t.focus(),null===(s=e.getSelection())||void 0===s||s.removeAllRanges()}createTempTextArea(t,e){const s="rtl"===t.documentElement.getAttribute("dir");let o;o=t.createElement("textarea"),o.style.fontSize="12pt",o.style.border="0",o.style.padding="0",o.style.margin="0",o.style.position="absolute",o.style[s?"right":"left"]="-9999px";const r=e.pageYOffset||t.documentElement.scrollTop;return o.style.top=r+"px",o.setAttribute("readonly",""),o}pushCopyResponse(t){this.copySubject.next(t)}pushCopyReponse(t){this.pushCopyResponse(t)}}v.ɵprov=s({factory:function(){return new v(o(y),o(b,8))},token:v,providedIn:"root"}),v.decorators=[{type:r,args:[{providedIn:"root"}]}],v.ctorParameters=()=>[{type:void 0,decorators:[{type:n,args:[y]}]},{type:void 0,decorators:[{type:i},{type:n,args:[b]}]}];class S{constructor(t){this.clipboardSrv=t,this.cbOnSuccess=new c,this.cbOnError=new c}ngOnInit(){}ngOnDestroy(){this.clipboardSrv.destroy(this.container)}onClick(t){this.clipboardSrv.isSupported?this.targetElm&&this.clipboardSrv.isTargetValid(this.targetElm)?this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm),this.targetElm.value,t):this.cbContent&&this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent,this.container),this.cbContent,t):this.handleResult(!1,void 0,t)}handleResult(t,e,s){let o={isSuccess:t,event:s};t?(o=Object.assign(o,{content:e,successMessage:this.cbSuccessMsg}),this.cbOnSuccess.emit(o)):this.cbOnError.emit(o),this.clipboardSrv.pushCopyResponse(o)}}S.decorators=[{type:a,args:[{selector:"[ngxClipboard]"}]}],S.ctorParameters=()=>[{type:v}],S.propDecorators={targetElm:[{type:p,args:["ngxClipboard"]}],container:[{type:p}],cbContent:[{type:p}],cbSuccessMsg:[{type:p}],cbOnSuccess:[{type:d}],cbOnError:[{type:d}],onClick:[{type:h,args:["click",["$event.target"]]}]};class f{constructor(t,e,s){this._clipboardService=t,this._viewContainerRef=e,this._templateRef=s}ngOnInit(){this._clipboardService.isSupported&&this._viewContainerRef.createEmbeddedView(this._templateRef)}}f.decorators=[{type:a,args:[{selector:"[ngxClipboardIfSupported]"}]}],f.ctorParameters=()=>[{type:v},{type:l},{type:m}];class w{}w.decorators=[{type:u,args:[{imports:[g],declarations:[S,f],exports:[S,f]}]}];export{S as ClipboardDirective,f as ClipboardIfSupportedDirective,w as ClipboardModule,v as ClipboardService};
//# sourceMappingURL=ngx-clipboard.js.map
